%!PS (but not EPSF because of memory limits)
%%Creator: dvips by Radical Eye Software
%%Title: thesis.dvi
%%Pages: 150 1
%%BoundingBox: 0 0 612 792
%%EndComments
%%BeginDocument: tex.pro
/TeXDict 200 dict def TeXDict begin /bdf{bind def}def /bop-aux{}bdf /@rigin{
/@page-height exch def /@page-width exch def 72 Resolution div dup neg scale
translate}bdf /@letter{Resolution dup -10 mul 8.5 11 @rigin}bdf /@landscape{[
0 1 -1 0 0 0]concat Resolution dup 8.5 11 @rigin}bdf /@a4{Resolution dup
-10.6929133858 mul 21 2.54 div 29.7 2.54 div @rigin}bdf /@legal{Resolution dup
-13 mul 8.5 14 @rigin}bdf /@11x17{statusdict /11x17tray known{statusdict begin
11x17tray end}if Resolution dup -16 mul 11 17 @rigin}bdf /@manualfeed{
statusdict /manualfeed true put}bdf /@copies{/#copies exch def}bdf /@draft{
/bop-aux{gsave initmatrix 72 dup scale @page-width 2 div @page-height 2 div
translate @page-height @page-width atan rotate /Helvetica-Bold findfont 2
scalefont setfont(DRAFT)dup stringwidth pop 2 div neg -1 moveto .95 setgray
show grestore}bdf}bdf /@FontMatrix[1 0 0 -1 0 0]def /@FontBBox[0 0 0 0]def
/dmystr(ZZf@@@)def /newname{dmystr cvn}bdf /df{/fontname exch def dmystr 2
fontname cvx(@@@@)cvs putinterval newname 7 dict def newname load begin
/FontType 3 def /FontMatrix @FontMatrix def /FontBBox @FontBBox def /BitMaps
256 array def /BuildChar{CharBuilder}def /Encoding IdentityEncoding def end
fontname{/foo setfont}2 array copy cvx def fontname load 0 dmystr 6 string
copy cvn cvx put}bdf /dfe{newname dup load definefont setfont}bdf /ch-image{
ch-data 0 get}bdf /ch-width{ch-data 1 get}bdf /ch-height{ch-data 2 get}bdf
/ch-xoff{ch-data 3 get}bdf /ch-yoff{ch-data 4 get}bdf /ch-dx{ch-data 5 get}
bdf /CharBuilder{save 3 1 roll exch /BitMaps get exch get /ch-data exch def
ch-data null ne{ch-dx 0 ch-xoff ch-yoff neg ch-xoff ch-width add ch-height
ch-yoff sub setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub
ch-height ch-yoff sub .1 add]{ch-image}imagemask}if restore}bdf /dc{/ch-code
exch def /ch-data exch def newname load /BitMaps get ch-code ch-data put}bdf
/bop{gsave /SaveImage save def /bop-aux load exec 0 0 moveto}bdf /eop{clear
SaveImage restore showpage grestore}bdf /@start{/Resolution exch def
/IdentityEncoding 256 array def 0 1 255{IdentityEncoding exch 1 string dup 0 3
index put cvn put}for}bdf /p{show}bdf /RuleMatrix[1 0 0 -1 -.1 -.1]def
/BlackDots 8 string def /v{gsave currentpoint translate false RuleMatrix{
BlackDots}imagemask grestore}bdf /a{moveto}bdf /delta 0 def /tail{dup /delta
exch def 0 rmoveto}bdf /b{exch show tail}bdf /c{show delta 4 sub tail}bdf /d{
show delta 3 sub tail}bdf /e{show delta 2 sub tail}bdf /f{show delta 1 sub
tail}bdf /g{show delta 0 rmoveto}bdf /h{show delta 1 add tail}bdf /i{show
delta 2 add tail}bdf /j{show delta 3 add tail}bdf /k{show delta 4 add tail}
bdf /l{show -4 0 rmoveto}bdf /m{show -3 0 rmoveto}bdf /n{show -2 0 rmoveto}
bdf /o{show -1 0 rmoveto}bdf /q{show 1 0 rmoveto}bdf /r{show 2 0 rmoveto}bdf
/s{show 3 0 rmoveto}bdf /t{show 4 0 rmoveto}bdf /w{0 rmoveto}bdf /x{0 exch
rmoveto}bdf /y{3 2 roll show moveto}bdf /bos{/section save def}bdf /eos{clear
section restore}bdf end
%%EndDocument
%%BeginDocument: texps.pro
TeXDict begin /rf{655360 div mul Resolution mul 7227 div /PixPerEm exch def
findfont dup length 1 add dict /newfont exch def{1 index /FID ne{newfont 3 1
roll put}{pop pop}ifelse}forall 256 dict begin newfont /Encoding get 255 -1 0{
2 copy get 4 -1 roll 1000 mul PixPerEm div def pop}for pop newfont /Metrics
currentdict put end /fontname exch def dmystr 2 fontname cvx(@@@@)cvs
putinterval newname dup newfont definefont[PixPerEm 0 0 PixPerEm neg 0 0]
makefont def fontname{/foo setfont}2 array copy cvx def fontname load 0 dmystr
6 string copy cvn cvx put}bdf /ObliqueSlant{dup sin exch cos div neg}bdf
/SlantFont{/foo exch def[1 0 foo 1 0 0]TransFont}bdf /ExtendFont{/foo exch def
258 2 roll 0 1 255{pop foo div 256 1 roll}for 258 -2 roll[foo 0 0 1 0 0]
TransFont}bdf /TransFont{exch findfont exch makefont dup length dict /newfont
exch def{1 index /FID ne{newfont 3 1 roll put}{pop pop}ifelse}forall dup
newfont definefont pop}bdf end
%%EndDocument
%%BeginDocument: special.pro
TeXDict begin /SDict 200 dict def SDict begin /@SpecialDefaults{/hs 612 def
/vs 792 def /ho 0 def /vo 0 def /hsc 1 def /vsc 1 def /ang 0 def /CLIP false
def /BBcalc false def}bdf /@scaleunit 1 def /@hscale{@scaleunit div /hsc exch
def}bdf /@vscale{@scaleunit div /vsc exch def}bdf /@hsize{/hs exch def /CLIP
true def}bdf /@vsize{/vs exch def /CLIP true def}bdf /@hoffset{/ho exch def}
bdf /@voffset{/vo exch def}bdf /@angle{/ang exch def}bdf /@rwi{10 div /rwi
exch def}bdf /@llx{/llx exch def}bdf /@lly{/lly exch def}bdf /@urx{/urx exch
def}bdf /@ury{/ury exch def /BBcalc true def}bdf end /@MacSetUp{userdict /md
known{userdict /md get type /dicttype eq{md begin /letter{}def /note{}def
/legal{}def /od{txpose 1 0 mtx defaultmatrix dtransform exch atan/pa exch def
newpath clippath mark{transform{itransform moveto}}{transform{itransform
lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39 0 put
10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}def /txpose{pxs pys
scale ppr aload pop por{noflips{pop exch neg exch translate pop 1 -1 scale}if
xflip yflip and{pop exch neg exch translate 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg translate}if xflip yflip
not and{pop exch neg exch translate pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 translate}if yflip xflip not and{ppr 1 get neg ppr 0 get neg translate}
if}{noflips{translate pop pop 270 rotate 1 -1 scale}if xflip yflip and{
translate pop pop 90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2
get ppr 0 get neg sub neg translate}if xflip yflip not and{translate pop pop
90 rotate ppr 3 get ppr 1 get neg sub neg 0 translate}if yflip xflip not and{
translate pop pop 270 rotate ppr 2 get ppr 0 get neg sub neg 0 exch translate}
if}ifelse scaleby96{ppr aload pop 4 -1 roll add 2 div 3 1 roll add 2 div 2
copy translate .96 dup scale neg exch neg exch translate}if}def /cp{pop pop
showpage pm restore}def end}if}if}def /psf$TeXscale{65536 div}def /startTexFig
{/psf$SavedState save def userdict maxlength dict begin Resolution 72 div dup
neg scale currentpoint translate /psf$ury exch psf$TeXscale def /psf$urx exch
psf$TeXscale def /psf$lly exch psf$TeXscale def /psf$llx exch psf$TeXscale def
/psf$y exch psf$TeXscale def /psf$x exch psf$TeXscale def currentpoint /psf$cy
exch def /psf$cx exch def /psf$sx psf$x psf$urx psf$llx sub div def /psf$sy
psf$y psf$ury psf$lly sub div def psf$sx psf$sy scale psf$cx psf$sx div
psf$llx sub psf$cy psf$sy div psf$ury sub translate /showpage{}def /erasepage{
}def /copypage{}def @MacSetUp}def /doclip{psf$llx psf$lly psf$urx psf$ury
currentpoint 6 2 roll newpath 4 copy 4 2 roll moveto 6 -1 roll exch lineto
exch lineto exch lineto closepath clip newpath moveto}def /endTexFig{end
psf$SavedState restore}def /@beginspecial{SDict begin /SpecialSave save def
Resolution 72 div dup neg scale currentpoint translate @SpecialDefaults}bdf
/@setspecial{CLIP{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0
rlineto closepath clip}{initclip}ifelse ho vo translate hsc vsc scale ang
rotate BBcalc{rwi urx llx sub div dup scale llx neg lly neg translate}if
/showpage{}def newpath}bdf /@endspecial{clear SpecialSave restore end}bdf
/@defspecial{SDict begin}bdf /@fedspecial{end}bdf /li{lineto}bdf /rl{rlineto}
bdf /rc{rcurveto}bdf /np{/SaveX currentpoint /SaveY exch def def newpath}bdf
/st{stroke SaveX SaveY moveto}bdf /fil{fill SaveX SaveY moveto}bdf /ellipse{
/endangle exch def /startangle exch def /yrad exch def /xrad exch def
/savematrix matrix currentmatrix def translate xrad yrad scale 0 0 1
startangle endangle arc savematrix setmatrix}bdf end
%%EndDocument
TeXDict begin bos 300 @start /fa df[<040C00000000007058989830306064646830>6 18
2 0 11]105 dc dfe /fb df[<081C1C3838383070706060C0C0>6 13 2 -1 9]48 dc dfe /fc
df[<060F0F0E1E1E1C3C383830707060E0C040>8 17 1 -1 10]48 dc dfe /fd 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 10 12 15 15 24 23 10 10
10 15 16 7 10 7 8 15 15 15 15 15 15 15 15 15 15 8 8 16 16 16 13 27 21 19 19 21
18 16 21 21 10 11 21 18 26 21 21 16 21 19 16 18 21 21 27 21 21 18 10 8 10 14
15 10 13 15 13 15 13 10 15 15 8 8 15 8 23 15 15 15 15 10 11 8 15 15 21 15 15
13 14 6 14 16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 10 15 15 5 15 15 15 15 5 13 15 10 10 16 16 0 15 15 15 7 0 13 10 10 13 13
15 29 29 0 13 0 10 10 10 10 10 10 10 10 0 10 10 0 10 10 10 29 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 26 0 8 0 0 0 0 18 21 26 9 0 0 0 0 0 19 0 0 0 8 0 0 8 15 21 15
0 0 0 0 /Times-Roman 1000 458752 rf /fe df[<0300038003000000000000000000000000
001C002400460046008C000C0018001800180031003100320032001C00>9 23 1 0 12]105 dc[
<00180038001000000000000000000000000001C0022004300430086000600060006000C000C0
00C000C001800180018001806300E300C6007800>13 29 0 6 14]106 dc[<1F00060006000600
06000C000C000C000C00181C1866188E190C32003C003F00318060C060C460C460C8C0C8C070>
15 23 2 0 18]107 dc[<3E0C0C0C0C181818183030303060606060C0C8C8C8D070>7 23 2 0
11]108 dc[<1C3C22462382230346030603060306030C060C060C0C0C081A3019E01800180030
0030003000FC00>16 20 0 6 18]112 dc[<38F04518463846308C000C000C000C001800180018
00180030003000>13 14 1 0 16]114 dc dfe /ff df[<FFFFFF000F801F0007800700078003
000780010007800100078001800780008007800080078000800780008007800000078000000780
000007800000078000000780000007800000078000000780000007800000078000000780000007
80000007800000078000000780000007800000078000000780000007800000078000000FC00000
FFFE0000>25 34 2 0 30]0 dc[<00200040008001000300060004000C000C0018001800300030
0030007000600060006000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
6000600060007000300030003000180018000C000C000400060003000100008000400020>11 50
4 13 19]40 dc[<800040002000100018000C000400060006000300030001800180018001C000
C000C000C000E000E000E000E000E000E000E000E000E000E000E000E000E000E000C000C000C0
01C0018001800180030003000600060004000C0018001000200040008000>11 50 3 13 19]41
dc[<FFFFFFFEFFFFFFFE0000000000000000000000000000000000000000000000000000000000
000000FFFFFFFEFFFFFFFE>31 12 3 -6 38]61 dc dfe /fg 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 11 14 17 17 28 26 11 11 11 17 19 8 11 8
9 17 17 17 17 17 17 17 17 17 17 9 9 19 19 19 15 31 24 22 22 24 20 18 24 24 11
13 24 20 30 24 24 18 24 22 18 20 24 24 31 24 24 20 11 9 11 16 17 11 15 17 15
17 15 11 17 17 9 9 17 9 26 17 17 17 17 11 13 9 17 17 24 17 17 15 16 7 16 18 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 17 17 6
17 17 17 17 6 15 17 11 11 18 18 0 17 17 17 8 0 15 12 11 15 15 17 33 33 0 15 0
11 11 11 11 11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
30 0 9 0 0 0 0 20 24 30 10 0 0 0 0 0 22 0 0 0 9 0 0 9 17 24 17 0 0 0 0
/Times-Roman 1000 524288 rf /fh df[<003F000000E180000380C020070060400E0070401C
0070403C0070803C003880780039007800390078003A00F0003A00F0003C00F0003800F0003800
70003800700078003000B800380338401C1C188007E00F00>27 21 2 0 31]11 dc[<00007C00
000183000002018000040180000801C0001001C0002001C0002001C0004001C000400380008003
80008003000080070001000E000107FC0001083800010FDC0002000E0002000E0002000F000200
0F0004000F0004000F0004000F0004000F0008001E0008001E0008001C0008003C001400380014
0070001400E0001201C00021838000207C00002000000020000000400000004000000040000000
4000000080000000800000008000000080000000>26 45 2 10 28]12 dc[<03800000E00000F0
00007000007000007800003800003800003C00001C00001C00001C00001E00000E00000E00000F
00000700000700000780000780000F80001B800031C00021C00041C000C1E00180E00300E00600
F00C00701C0070380078700038E00038C0001C>22 35 3 0 28]21 dc[<07FFFF1FFFFF3FFFFF
30410040410080410080C300008200008200018200018200010600030600030700070700060700
0E07000E07001C03801C0380180300>24 21 2 0 28]25 dc[<70F8F8F870>5 5 4 0 14]58 dc
[<70F8FCFC7404040404080810102040>6 15 4 10 14]59 dc[<000080000180000180000300
000300000300000600000600000600000C00000C00000C00001800001800001800003000003000
00300000600000600000600000C00000C00000C000018000018000018000018000030000030000
0300000600000600000600000C00000C00000C0000180000180000180000300000300000300000
600000600000600000C00000C00000C00000>17 49 3 12 24]61 dc[<007FFFFFC000078003C0
00078000C000078000C0000F0000C0000F0000C0000F000080000F000080001E000080001E0000
80001E008080001E008000003C010000003C010000003C030000003C070000007FFE0000007806
00000078060000007806000000F004000000F004000000F004010000F000020001E000020001E0
00020001E000040001E0000C0003C000080003C000180003C000300003C000700007C003F000FF
FFFFE000>34 34 2 0 36]69 dc[<007FFFFFC000078003C000078000C000078000C0000F0000
C0000F0000C0000F000080000F000080001E000080001E000080001E008080001E008000003C01
0000003C010000003C030000003C070000007FFE000000780600000078060000007806000000F0
04000000F004000000F004000000F000000001E000000001E000000001E000000001E000000003
C000000003C000000003C000000003C000000007C0000000FFFE000000>34 34 2 0 32]70 dc[
<007FFE000007C0000007800000078000000F0000000F0000000F0000000F0000001E0000001E
0000001E0000001E0000003C0000003C0000003C0000003C000000780000007800000078000000
78000000F0000000F0000000F0001000F0001001E0002001E0002001E0004001E0004003C000C0
03C0008003C0018003C0078007C01F00FFFFFF00>28 34 2 0 33]76 dc[<007FC00001FF0007
C00003E00007C00005E00007C00005E00009E0000BC00009E0000BC00009E00013C00009E00023
C00011E00027800011E00047800011E00047800011E00087800021E0010F000020F0010F000020
F0020F000020F0040F000040F0041E000040F0081E000040F0081E000040F0101E000080F0203C
00008078203C00008078403C00008078803C000100788078000100790078000100790078000100
7A00780002007C00F00002007C00F00002003800F00006003800F0000F003001F000FFE0203FFF
00>48 34 2 0 47]77 dc[<007FC003FF0007C000780007C000600005E000200009E000400009
E000400008F000400008F000400010F800800010780080001078008000103C008000203C010000
203E010000201E010000201E010000400F020000400F020000400F020000400782000080078400
008007C400008003C400008003C400010001E800010001E800010001F800010000F800020000F0
000200007000020000700006000070000F00002000FFE0002000>40 34 2 0 39]78 dc[<007F
FFF0000007801C000007800F000007800700000F000380000F000380000F000380000F00038000
1E000780001E000780001E000780001E000F00003C000F00003C001E00003C003C00003C007000
007801E000007FFF00000078000000007800000000F000000000F000000000F000000000F00000
0001E000000001E000000001E000000001E000000003C000000003C000000003C000000003C000
000007C0000000FFFC000000>33 34 2 0 31]80 dc[<0003F010000E0C2000180260002001E0
004000E000C000C0008000C0018000C0018000C00380008003800080038000000380000003C000
0001F0000001FE000000FFE000007FF000001FF8000001FC0000003C0000001C0000000E000000
0E0000000E0020000C0020000C0020000C002000080060001800600010007000200070004000C8
008000C603000081FC0000>28 36 3 1 30]83 dc[<1FFFFFFE1E01E00E1801E0063001E00620
03C0062003C0064003C0044003C00440078004800780048007800400078000000F0000000F0000
000F0000000F0000001E0000001E0000001E0000001E0000003C0000003C0000003C0000003C00
000078000000780000007800000078000000F0000000F0000000F0000000F0000001F00000FFFF
C000>31 34 2 0 29]84 dc[<FFF8007FC00F80000F000F00000C000F000008000F000010000F
800010000780002000078000600007800040000780008000078000800007800100000780020000
07C002000003C004000003C00C000003C008000003C010000003C010000003C020000003E04000
0003E040000001E080000001E180000001E100000001E200000001E200000001E400000001F800
000000F800000000F000000000E000000000E000000000C000000000C0000000>34 35 3 1 28]
86 dc[<00001E0001FC00001C00001C00001C0000380000380000380000380000700000700000
700000700000E00078E001C4E00302E00601C00E01C01C01C03C01C03803807803807803807803
80F00700F00700F00700F00708F00E10700E10701E1030262018C6200F01C0>23 35 2 0 25]
100 dc[<00001E00000063800000C7800001C7800001C300000180000003800000038000000380
00000380000007000000070000000700000007000000FFF800000E0000000E0000000E0000000E
0000000E0000000E0000001C0000001C0000001C0000001C0000001C0000003800000038000000
3800000038000000380000007000000070000000700000007000000060000000E0000000E00000
00E0000000C0000070C00000F1800000F1000000620000003C000000>25 45 2 10 24]102 dc[
<00F0000FE00000E00000E00000E00001C00001C00001C00001C0000380000380000380000380
00070000071F0007218007C0C00F00E00F00E00E00E00E00E01C01C01C01C01C01C01C01C03803
80380380380700380704700708700E08700E08700610E006206003C0>22 35 3 0 28]104 dc[<
00E000E001E000C00000000000000000000000000000000000001E002300438043808380838087
0007000E000E000E001C001C0038003820384070407040308031001E00>11 34 2 0 17]105 dc
[<0000E00001E00001E00000C00000000000000000000000000000000000000000000000000000
00001E00002300004380008380010380010380010380000700000700000700000700000E00000E
00000E00000E00001C00001C00001C00001C000038000038000038000038000070000070000070
0070E000F0C000F180006300003E0000>19 44 -1 10 20]106 dc[<00F0000FE00000E00000E0
0000E00001C00001C00001C00001C0000380000380000380000380000700000700F00703080704
380E08780E10780E20300E40001C80001F00001FC0001C7000383800383800381C00381C107038
20703820703820701840E00C80600700>21 35 3 0 25]107 dc[<03C0F004631C04740E08780E
08700708700708700F00E00F00E00F00E00F00E00F01C01E01C01E01C01E01C03C038038038038
03C07003C0E0072180071E000700000700000E00000E00000E00000E00001C00001C00001C0000
FFC000>24 31 -1 10 24]112 dc dfe /fi df[<70F8F8F870>5 5 4 -10 14]1 dc[<03F000
0FFC001FFE003FFF007FFF807FFF80FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0
7FFF807FFF803FFF001FFE000FFC0003F000>18 20 3 -2 25]15 dc[<0000000C0000003C0000
00F0000003C000000F0000003C000000F0000007C000001F00000078000001E00000078000001E
00000078000000E0000000780000001E0000000780000001E0000000780000001F00000007C000
0000F00000003C0000000F00000003C0000000F00000003C0000000C0000000000000000000000
0000000000000000000000000000000000000000007FFFFFF8FFFFFFFC>30 39 4 7 39]20 dc[
<00000006000000000E000000001E000000003E000000003E000000007E000000005E00000000
DE000000009E000000019E000000011E000000031E000000021E000000061E0000000C1E000000
0C1E000000181E000000181E000000301E000000601E000000601E000000C01E000001C01E0000
01801E000003001E0000077FFF000007FFFF00000FFFFF00001C000F000038000F004070000F00
40F0000F80E1E0000F80FFC0000780FF800007F8FF000007F07E000003C03C00000000>37 38 2
2 40]65 dc[<0000180000001000007800000030000078000000600000F8000000600000F80000
00E00000F8000001E00000FC000003E00000FC000007C00000BC00000FC000013C00000FC00001
3C00001FC000013C00003BC000013E000073C000023E0000E3C000021E0001E38000021E0003C3
8000041E0003878000041F0007078000041F000E078000080F001C078000080F0038078000080F
8078070000100F80F0070000100781E00F0000100783C00F00002007C7800F00002007CF000F00
004003FE000F00004003FC000F0000C001F8000F00008001F0000F00618000E0000F007F0000C0
000F00FF000000000FF0FE000000000FE0FE0000000007803C000000000000>52 37 2 2 60]
77 dc[<0000000018001FFFFFE000FFFFFFC001FFFFFF0006001E00000E001E00001C003C0000
3C003C000038003C000078007800007000780000C0007800000000F800000000F000000000F000
000000F000000001F000000001E000000001E000000001E000000003E000000003C000000003C0
00000003C00000000780000000078000000007000000000F000000000E000000001C0000000018
000000003000000001FFE0000003FFC000000FFF000000>37 35 1 0 27]84 dc dfe /fj 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 17 21 25 25 41
39 17 17 17 25 34 12 17 12 14 25 25 25 25 25 25 25 25 25 25 17 17 34 34 34 25
46 30 30 33 36 30 30 36 36 17 22 33 28 41 33 36 30 36 30 25 28 36 30 41 30 28
28 19 14 19 21 25 17 25 25 22 25 22 14 25 25 14 14 22 14 36 25 25 25 25 19 19
14 25 22 33 22 22 19 20 14 20 27 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 19 25 25 8 25 25 25 25 11 28 25 17 17 25 25 0 25 25 25
12 0 26 17 17 28 28 25 44 50 0 25 0 17 17 17 17 17 17 17 17 0 17 17 0 17 17 17
44 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 44 0 14 0 0 0 0 28 36 47 15 0 0 0 0 0 33 0
0 0 14 0 0 14 25 33 25 0 0 0 0 /Times-Italic 1000 786432 rf /fk 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 26 35 58 52 52 104 86 35 35
35 52 59 26 35 26 29 52 52 52 52 52 52 52 52 52 52 35 35 59 59 59 52 97 75 69
75 75 69 63 81 81 40 52 81 69 98 75 81 63 81 75 58 69 75 75 104 75 75 69 35 29
35 60 52 35 52 58 46 58 46 35 52 58 29 35 58 29 86 58 52 58 58 46 40 35 58 52
75 52 52 46 41 23 41 54 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 35 52 52 17 52 52 52 52 29 52 52 35 35 58 58 0 52 52 52 26 0 56
36 35 52 52 52 104 104 0 52 0 35 35 35 35 35 35 35 35 0 35 35 0 35 35 35 104 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 104 0 31 0 0 0 0 69 81 104 34 0 0 0 0 0 75 0 0 0
29 0 0 29 52 75 58 0 0 0 0 /Times-Bold 1000 1638400 rf /fl 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 17 28 25 25 50 41 17 17 17 25
28 12 17 12 14 25 25 25 25 25 25 25 25 25 25 17 17 28 28 28 25 46 36 33 36 36
33 30 39 39 19 25 39 33 47 36 39 30 39 36 28 33 36 36 50 36 36 33 17 14 17 29
25 17 25 28 22 28 22 17 25 28 14 17 28 14 41 28 25 28 28 22 19 17 28 25 36 25
25 22 20 11 20 26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 17 25 25 8 25 25 25 25 14 25 25 17 17 28 28 0 25 25 25 12 0 27 17 17
25 25 25 50 50 0 25 0 17 17 17 17 17 17 17 17 0 17 17 0 17 17 17 50 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 50 0 15 0 0 0 0 33 39 50 16 0 0 0 0 0 36 0 0 0 14 0 0 14
25 36 28 0 0 0 0 /Times-Bold 1000 786432 rf /fm 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 14 17 21 21 35 32 14 14 14 21 28 10 14 10
12 21 21 21 21 21 21 21 21 21 21 14 14 28 28 28 21 38 25 25 28 30 25 25 30 30
14 18 28 23 35 28 30 25 30 25 21 23 30 25 35 25 23 23 16 12 16 18 21 14 21 21
18 21 18 12 21 21 12 12 18 12 30 21 21 21 21 16 16 12 21 18 28 18 18 16 17 11
17 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 16
21 21 7 21 21 21 21 9 23 21 14 14 21 21 0 21 21 21 10 0 22 15 14 23 23 21 37
42 0 21 0 14 14 14 14 14 14 14 14 0 14 14 0 14 14 14 37 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 37 0 11 0 0 0 0 23 30 39 13 0 0 0 0 0 28 0 0 0 12 0 0 12 21 28 21 0
0 0 0 /Times-Italic 1000 655360 rf /fn 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 10 14 17 21 21 35 32 14 14 14 21 23 10 14 10 12 21 21
21 21 21 21 21 21 21 21 12 12 23 23 23 18 38 30 28 28 30 25 23 30 30 14 16 30
25 37 30 30 23 30 28 23 25 30 30 39 30 30 25 14 12 14 19 21 14 18 21 18 21 18
14 21 21 12 12 21 12 32 21 21 21 21 14 16 12 21 21 30 21 21 18 20 8 20 22 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 14 21 21 7 21
21 21 21 7 18 21 14 14 23 23 0 21 21 21 10 0 19 15 14 18 18 21 42 42 0 18 0 14
14 14 14 14 14 14 14 0 14 14 0 14 14 14 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37
0 11 0 0 0 0 25 30 37 13 0 0 0 0 0 28 0 0 0 12 0 0 12 21 30 21 0 0 0 0
/Times-Roman 1000 655360 rf /fo df[<0001FE00000007FF8000001E01E000007800780000
E0001C000180000600030000030006000001800C000000C00C000000C018000000603000000030
30000000303000000030600000001860000000186000000018C00000000CC00000000CC0000000
0CC00000000CC00000000CC00000000CC00000000CC00000000CC00000000C6000000018600000
0018600000001830000000303000000030300000003018000000600C000000C00C000000C00600
0001800300000300018000060000E0001C000078007800001E01E0000007FF80000001FE0000>
38 43 3 10 45]13 dc dfe /fp 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 11 15 19 23 23 38 36 15 15 15 23 26 11 15 11 13 23 23 23 23 23
23 23 23 23 23 13 13 26 26 26 20 42 33 30 30 33 28 25 33 33 15 18 33 28 41 33
33 25 33 30 25 28 33 33 43 33 33 28 15 13 15 21 23 15 20 23 20 23 20 15 23 23
13 13 23 13 36 23 23 23 23 15 18 13 23 23 33 23 23 20 22 9 22 25 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 15 23 23 8 23 23 23 23 8
20 23 15 15 25 25 0 23 23 23 11 0 21 16 15 20 20 23 46 46 0 20 0 15 15 15 15
15 15 15 15 0 15 15 0 15 15 15 46 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 41 0 13 0 0
0 0 28 33 41 14 0 0 0 0 0 30 0 0 0 13 0 0 13 23 33 23 0 0 0 0 /Times-Roman
1000 720896 rf /fq 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 12 17 20 25 25 41 39 17 17 17 25 28 12 17 12 14 25 25 25 25 25 25 25 25 25
25 14 14 28 28 28 22 46 36 33 33 36 30 28 36 36 17 19 36 30 44 36 36 28 36 33
28 30 36 36 47 36 36 30 17 14 17 23 25 17 22 25 22 25 22 17 25 25 14 14 25 14
39 25 25 25 25 17 19 14 25 25 36 25 25 22 24 10 24 27 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 25 25 8 25 25 25 25 9 22 25 17
17 28 28 0 25 25 25 12 0 23 17 17 22 22 25 50 50 0 22 0 17 17 17 17 17 17 17
17 0 17 17 0 17 17 17 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 44 0 14 0 0 0 0 30 36
44 15 0 0 0 0 0 33 0 0 0 14 0 0 14 25 36 25 0 0 0 0 /Times-Roman 1000 786432
rf /fr 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 15 19
24 29 29 48 45 19 19 19 29 33 15 19 15 16 29 29 29 29 29 29 29 29 29 29 16 16
33 33 33 26 54 42 39 39 42 36 32 42 42 19 23 42 36 52 42 42 32 42 39 32 36 42
42 55 42 42 36 19 16 19 27 29 19 26 29 26 29 26 19 29 29 16 16 29 16 45 29 29
29 29 19 23 16 29 29 42 29 29 26 28 12 28 31 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 19 29 29 10 29 29 29 29 10 26 29 19 19 32 32
0 29 29 29 15 0 26 20 19 26 26 29 58 58 0 26 0 19 19 19 19 19 19 19 19 0 19 19
0 19 19 19 58 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 52 0 16 0 0 0 0 36 42 52 18 0 0
0 0 0 39 0 0 0 16 0 0 16 29 42 29 0 0 0 0 /Times-Roman 1000 917504 rf /fs 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 18 23 29 35 35 59
55 23 23 23 35 40 18 23 18 20 35 35 35 35 35 35 35 35 35 35 20 20 40 40 40 31
65 51 47 47 51 43 39 51 51 23 27 51 43 63 51 51 39 51 47 39 43 51 51 67 51 51
43 23 20 23 33 35 23 31 35 31 35 31 23 35 35 20 20 35 20 55 35 35 35 35 23 27
20 35 35 51 35 35 31 34 14 34 38 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 23 35 35 12 35 35 35 35 13 31 35 23 23 39 39 0 35 35 35
18 0 32 25 23 31 31 35 71 71 0 31 0 23 23 23 23 23 23 23 23 0 23 23 0 23 23 23
71 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 63 0 19 0 0 0 0 43 51 63 22 0 0 0 0 0 47 0
0 0 20 0 0 20 35 51 35 0 0 0 0 /Times-Roman 1000 1114112 rf /ft 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 18 23 39 35 35 71 59 23 23
23 35 40 18 23 18 20 35 35 35 35 35 35 35 35 35 35 23 23 40 40 40 35 66 51 47
51 51 47 43 55 55 27 35 55 47 67 51 55 43 55 51 39 47 51 51 71 51 51 47 23 20
23 41 35 23 35 39 31 39 31 23 35 39 20 23 39 20 59 39 35 39 39 31 27 23 39 35
51 35 35 31 28 16 28 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 23 35 35 12 35 35 35 35 20 35 35 23 23 39 39 0 35 35 35 18 0 38
25 23 35 35 35 71 71 0 35 0 23 23 23 23 23 23 23 23 0 23 23 0 23 23 23 71 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 71 0 21 0 0 0 0 47 55 71 23 0 0 0 0 0 51 0 0 0 20
0 0 20 35 51 39 0 0 0 0 /Times-Bold 1000 1114112 rf end
 TeXDict begin @letter
%%EndProlog
%%Page: 0 1
 bop 616 425 a ft(Multilist)18 b(Scheduling:)412 517 y fs(A)f(New)h(Parallel)
g(Programming)i(Model)804 711 y fr(I-Chen)15 b(W)n(u)776 823 y(July)f(30,)g
(1993)759 896 y fq(CMU-CS-93-184)647 1285 y(School)e(of)g(Computer)g(Science)
654 1346 y(Carnegie)g(Mellon)g(University)721 1406 y(Pittsbur)n(gh,)g(P)l(A)g
(15213)424 1579 y(Submitted)f(in)h(partial)g(ful\256llment)f(of)h(the)g(requi\
rements)547 1639 y(for)g(the)g(degree)g(of)g(Doctor)g(of)g(Philosophy)659 2399
y fp(Copyright)869 2398 y(c)856 2399 y fo(\015)q fp(1993)e(I-Chen)i(W)o(u)70
2513 y fn(This)7 b(research)i(was)e(supported)f(by)h(the)g(Advanced)g(Researc\
h)i(Projects)e(Agency)m(,)h(Information)e(Science)i(and)f(T)n(echnology)-4
2562 y(Of)o(\256ce,)15 b(under)d(the)h(title)f fm(Research)h(on)g(Parallel)f
(Computing)e fn(issued)j(by)g(ARP)l(A/CMU)f(under)h(Contract)f(MDA972-90-C-)
-4 2612 y(0035,)d(ARP)l(A)i(Order)f(No.)15 b(7330.)70 2662 y(The)d(views)f
(and)h(conclusions)e(contained)h(in)f(this)h(document)g(are)h(those)f(of)g
(the)g(author)f(and)i(should)e(not)g(be)i(interpreted)-4 2712 y(as)e(represen\
ting)g(the)g(of)o(\256cial)g(policies,)g(either)g(expressed)h(or)f(implied,)g
(of)g(ARP)l(A.)p eop
%%Page: 1 2
 bop 148 2581 a fl(Keywords:)32 b fq(parallel)19 b(programming,)h(task)g(sche\
duling,)i(multilist)d(scheduling,)j(dynamic)d(load)75 2641 y(balancing,)10 b
(scheduling)f(list,)i(network-based)d(multicomputer)m(,)i(divide-and-conquer)
l(,)h(best-\256rst)d(search,)75 2701 y(network)k(simulation,)g(alpha-beta)g
(search,)h(quicksort,)f(factoring,)g(set)h(covering,)f(range)g(selection.)p
eop
%%Page: 1 3
 bop 75 408 a fk(Abstract)75 656 y fq(Parallel)8 b(programming)f(requires)i
(task)g(scheduling)f(to)h(optimize)f(performance;)h(this)g(primarily)e(involv\
es)75 717 y(balancing)12 b(the)h(load)g(over)f(the)h(processors.)19 b(In)13 b
(many)f(cases,)j(it)d(is)h(critical)f(to)h(perform)e(task)i(scheduling)75 777
y(at)h(runtime.)24 b(For)13 b(example,)j(\(1\))d(in)h(many)g(parallel)g(appli\
cations)g(the)h(task)f(load)h(cannot)f(be)g(accurately)75 837 y(predicted)c fj
(a)h(priori)p fq(;)h(\(2\))e(in)g(a)i(network-based)e(multicomputer)f(the)i
(computational)f(power)g(of)h(each)g(pro-)75 897 y(cessor)i(may)e(not)h(remai\
n)f(constant.)19 b(In)11 b(order)g(to)h(support)g(dynamic)f(task)h(scheduling\
,)h(the)f(programmer)75 957 y(usually)18 b(needs)h(to)f(design)g(and)g(implem\
ent)f(a)i(complex)f(set)g(of)g(scheduling)g(routines,)h(e.g.,)j(routines)75
1018 y(for)12 b(maintaining)h(task)g(lists)h(and)f(handling)f(interprocessor)
h(communication)f(for)g(load)h(balancing.)21 b(Un-)75 1078 y(fortunately)-5 b
(,)16 b(it)e(is)g(very)g(dif)n(\256cult)g(and)g(time-consuming)f(to)i(write)e
(and)h(debug)h(all)f(of)f(these)i(scheduling)75 1138 y(routines.)148 1220 y
(This)k(thesis)g(proposes)g(a)f(new)h(approach)f(which)g(can)g(greatly)g(redu\
ce)g(the)h(ef)n(fort)f(of)g(developing)75 1281 y(ef)o(\256cient)8 b(dynamic)f
(task)i(scheduling)f(routines.)16 b(In)8 b(our)g(new)g(approach,)h(we)f(decom\
pose)h(task)f(scheduling)75 1341 y(into)j(two)h(parts)g(\320)f(the)h(speci\
\256cation)g(of)f(scheduling)h(policies)f(and)h(the)g(implementation)e(of)i
(supportive)75 1401 y(scheduling)h(operations)g(\320)f(and)h(then)g(hide)g
(the)g(latter)f(from)g(the)h(programmer)l(.)20 b(W)l(e)13 b(call)g(this)g(app\
roach)75 1461 y fj(multilist)i(scheduling)p fq(,)i(because)f(it)f(is)h(based)
g(on)f(a)h(uniform)e(scheduling)h(model)h(involving)e(the)i(use)g(of)75 1521 y
(multiple)c(scheduling)g(lists.)148 1604 y(This)g(thesis)f(analyzes)h(three)e
(main)h(features)f(of)h(the)g(new)g(multilist)f(scheduling)g(model:)17 b(ease)
12 b(of)e(use,)75 1664 y(generality)l(,)j(and)f(ef)o(\256ciency)m(.)148 1801 y
fi(\017)24 b fq(Ease)17 b(of)f(use:)27 b(Programmers)14 b(only)i(need)h(to)f
(specify)g(scheduling)h(policies,)h(not)e(the)g(details)h(of)197 1861 y(suppo\
rtive)d(scheduling)h(routines.)26 b(T)m(ypically)m(,)16 b(this)f(involves)g
(writing)f(only)h(tens)g(of)g(lines)g(of)g(C)197 1921 y(code,)e(as)g(opposed)
f(to)h(thousands)f(of)g(lines)h(of)f(code)g(for)g(the)g(supportive)g(scheduli\
ng)g(routines.)148 2023 y fi(\017)24 b fq(Generality:)16 b(W)l(e)10 b(show)g
(that)f(this)h(model)f(results)h(in)f(no)h(loss)g(of)g(generality)l(.)17 b
(W)l(e)10 b(also)g(illustrate)f(the)197 2083 y(generality)j(of)h(the)g(model)
f(by)h(rendering)f(several)h(scheduling)g(algorithms)f(in)h(the)g(framework)f
(of)197 2143 y(our)i(model,)h(including)f(the)h(scheduling)f(algorithms)g(for)
g(parallel)g(divide-and-conquer)f(\(D&C\))197 2203 y(and)f(best-\256rst)g(sea\
rch)h(\(BFS\).)148 2305 y fi(\017)24 b fq(Ef)o(\256ciency:)17 b(W)l(e)11 b
(propose)g(some)g(ef)o(\256cient)f(techniques)h(for)f(implementing)g(scheduli\
ng)h(lists,)h(and)197 2365 y(also)g(show)g(that)g(our)g(general)f(approach)h
(incurs)f(no)h(signi\256cant)g(performance)f(overhead,)h(at)g(least)197 2425 y
(for)h(the)h(parallel)f(D&C)h(and)g(BFS)f(scheduling)h(algorithms.)22 b(In)13
b(addition,)h(we)g(also)h(demonstrate)197 2485 y(good)10 b(performance)g(resu\
lts)g(for)g(some)h(applications)f(that)h(are)f(based)h(on)g(parallel)f(D&C)g
(and)h(BFS,)197 2546 y(such)i(as)g(the)f(set)h(covering)f(problem.)1006 2836 y
(i)p eop
%%Page: 2 4
 bop 69 53 a fq(T)n(raditionally)l(,)18 b(it)e(has)h(been)g(dif)n(\256cult)f
(to)g(ef)o(\256ciently)g(support)g(both)g(parallel)g(D&C)g(and)h(BFS)f(in)g
(a)-4 114 y(uniform)10 b(framework.)17 b(W)l(e)c(believe)f(that)h(our)e(syste\
m)i(is)g(the)f(\256rst)g(system)h(that)f(do)g(so.)69 196 y(Multilist)d(schedu\
ling)h(is)h(the)f(\256rst)f(model)h(which)g(can)g(hide)g(the)g(details)g(of)g
(dynamic)f(task)i(scheduling)-4 256 y(routines)19 b(while)g(supporting)g(gene\
ral)g(task)h(scheduling.)40 b(W)l(e)20 b(expect)f(that)h(this)f(model)h(will)
f(have)g(a)-4 316 y(signi\256cant)12 b(impact)g(on)g(parallel)g(programming,)
f(especially)h(in)h(the)f(domain)g(of)g(multicomputers.)919 2836 y(ii)p eop
%%Page: 3 5
 bop 75 408 a fk(Acknowledgment)75 656 y fq(I)16 b(would)h(like)f(to)h(deeply)
f(thank)h(all)f(of)h(those)g(who)f(helped)h(me)f(with)h(this)g(thesis.)31 b
(My)17 b(advisor)n(,)h(H.T)n(.)75 717 y(Kung,)d(gave)f(me)g(excellent)g(advic\
e)g(and)h(vision)f(which)g(led)g(this)g(thesis)h(towards)f(providing)e(a)j fj
(general)75 777 y fq(parallel)h(programming)f(system)j(for)e(dynamic)g(task)h
(scheduling.)63 b(My)17 b(committee)f(members,)i(H.T)n(.)75 837 y(Kung,)e(Pet\
er)e(Steenkiste,)i(Dave)g(O'Hallaron,)f(Gerald)f(Thompson,)j(and)e(David)f
(Farber)n(,)i(also)f(of)o(fered)75 897 y(valuable)8 b(comments)h(to)f(improve)
g(the)g(quality)g(of)h(the)f(thesis.)18 b(Especially)m(,)10 b(H.T)m(.)f(Kung,)
h(Peter)e(Steenkiste,)75 957 y(and)13 b(Dave)g(O'Hallaron)f(also)i(gave)f(man\
y)g(useful)g(comments)f(in)h(the)g(early)g(stages.)21 b(Gerald)13 b(Thompson)
75 1018 y(generously)d(provided)f(his)h(set)h(covering)e(program)g(as)i(an)f
(example)g(application)f(of)h(my)g(system.)18 b(Hiroshi)75 1078 y(Nishikawa)h
(gave)g(some)g(valuable)g(discussions)g(about)g(his)g(language)g(Aroma)f(and)
h(its)g(applications,)75 1138 y(which)i(motivated)f(the)h(study)g(of)g(the)f
(scheduling)h(algorithms)f(in)h(Sections)g(3.1.3)h(and)f(3.2.4.)45 b(Joe)75
1198 y(T)m(ebelskis)12 b(carefully)f(and)h(patiently)f(read)g(several)h(draft\
s)g(of)f(the)h(thesis)g(and)f(helped)h(me)g(to)f(improve)g(the)75 1258 y(read\
ability)i(of)g(this)g(presentation.)22 b(Susan)13 b(Hinrichs,)h(Bruce)g(Siege\
ll,)g(and)f(Jay)h(Sipelstein)f(also)h(helped)75 1318 y(improve)i(the)g(presen\
tation)h(of)f(this)h(thesis.)32 b(Peter)16 b(Steenkiste,)i(Bruce)f(Siegell,)g
(Hiroshi)f(Nishikawa,)75 1379 y(Michael)k(Gillinov)l(,)i(and)e(Ming-Jen)f(Cha\
n)h(have)g(helped)f(me)h(on)g(some)f(questions)h(about)g(operating)75 1439 y
(systems)15 b(and)f(the)g(Nectar)g(system)h(environment.)22 b(In)14 b(additio\
n,)g(during)f(the)h(early)g(period)f(of)h(my)g(Ph.D)75 1499 y(program)f(when)
i(I)f(was)h(working)f(on)g(the)h(Apply)f(compiler)m(,)h(Jon)g(W)l(ebb)g(gave)
f(me)h(some)g(useful)f(advice)75 1559 y(which)e(was)h(indirectly)e(helpful)h
(for)g(my)g(thesis)h(work.)148 1642 y(I)k(am)g(grateful)e(to)i(many)g(friends)
f(for)g(their)h(friendship)f(and)g(encouragement.)32 b(Joe)17 b(T)m(ebelskis,)
i(in)75 1702 y(particular)m(,)11 b(an)e(almost-6-year)g(of)n(\256cemate)h(of)
f(mine,)h(has)g(always)g(generously)f(provided)g(help)g(whenever)75 1762 y
(I)j(needed)g(it)g(and)h(encouraged)f(me)g(whenever)g(I)g(had)g(a)g(dif)o(\
\256cult)g(time.)18 b(Never)12 b(will)f(I)h(for)o(get)g(his)g(genuine)75 1822
y(and)g(enjoyable)h(friendship.)148 1905 y(I)d(am)g(indebted)f(to)h(my)g(fami\
ly)f(for)g(their)g(support.)17 b(My)10 b(wife,)h(Shwu-Huey)l(,)g(shared)f(in)
f(my)h(hard)g(work)75 1965 y(with)i(love,)g(understanding,)g(and)h(encouragem\
ent.)k(My)c(son,)g(T)m(ony)l(,)g(and)f(my)g(daughter)m(,)h(Ariel,)f(brought)
75 2025 y(joy)f(and)g(happiness)h(to)f(me.)18 b(Finally)l(,)12 b(I)f(would)f
(like)h(to)g(dedicate)h(this)f(thesis)h(to)f(my)g(parents,)h(W)l(en-Ching)75
2085 y(and)g(Kang-Bau,)h(for)f(their)f(unconditional)h(support)g(and)g(care)g
(in)h(my)f(life.)992 2836 y(iii)p eop
%%Page: 4 6
 bop 114 1650 a @beginspecial @setspecial
%%BeginDocument: fig/parents.ps
/pic 1 string def


/C  {rcurveto}        bind def
/L  {rlineto}         bind def	   %% dx dy rlineto
/X  {0 rlineto}       bind def	   %% dx 0  rlineto
/Y  {0 exch rlineto}  bind def	   %% 0  dy rlineto
/M  {closepath moveto} bind def
/N  {newpath moveto} bind def
/WB {gsave translate dup scale} bind def
/WE {eofill grestore} bind def
/WE2 {ufill grestore} bind def
/WEO {0.3 setlinewidth stroke grestore} bind def

/rc {rcurveto} bind def
/tr {translate} bind def
/mv {moveto}    bind def
/rm {rmoveto}	bind def
/gs {gsave}     bind def
/gr {grestore}  bind def
/sh {show}      bind def
/sc {scale}     bind def
/np {newpath}   bind def
/st {stroke}    bind def
/fi {fill}      bind def
/eo {eofill}    bind def
/li {lineto}    bind def
/rl {rlineto}   bind def
/cv {curveto}   bind def
/cl {closepath} bind def
/in {initmatrix} bind def
/lw {setlinewidth} bind def
/ff {findfont} bind def
/ss {scalefont setfont} bind def

/wp 4096 array def
/W {wp exch get exec} bind def



/n 0 def
/i 100 def
/count 0 def
/byte 0 def
/str1 1 string def
/src 90 string def


/feq_code [ 
 255 0 127 254 248	%% A,B,C,D,E
 252 63 15 240 31 	%% F,G,H,I,J
 224 7 128 1 3		%% K,L,M,N,O
 192 239 251 191 223	%% P,Q,R,S,T
 253 247 129 207 241	%% U,V,W,X,Y
 231 ] def		%% Z
 
/Img_Ini { /n 0 def /i 100 def } def
 
/Ip {
  i n ge 
  { currentfile src readline pop /s exch def
    /i 0 def
    /n s length def 
  } if
  s i get 36 eq   %% ---'$' : repeat_count + byte ---
  { DupByte }
  { SingleByte }
  ifelse
} def

/SingleByte { str1 0 GetByte put str1 } def

/GetByte 
{ /c s i get def
  c 65 ge c 90 le and
  { IncIndex feq_code c 65 sub get }
  { GetHexByte }
  ifelse
} def

/GetCount
{ /c s i get def
  c 65 ge c 90 le and
  { IncIndex c 64 sub }   %% A = 1, B = 2, C = 3, ...
  { GetHexByte }
  ifelse
} def

/s1 (16#ff) def

/GetHexByte 
{  s1 3 s i 2 getinterval putinterval
   /i i 2 add def
   s1 cvi
} def

/IncIndex { /i i 1 add def } def

/DupByte  
{
   IncIndex 
   /count GetCount def
   /byte GetByte def
   /s2 count string def
   0 1 count 1 sub { s2 exch byte put } for
   s2
} def

/Cut_Line {} def	%% ignore cut lines 

/Rect_Path {	%% x y w h
  /h exch def
  /w exch def
  np
  moveto
  w 0 rlineto
  0 h rlineto
  w -1.0 mul 0 rlineto
  closepath
} def

/Rect_Draw { gsave setlinewidth Rect_Path stroke grestore } def  %% x y w h lw
/Rect_Fill { gsave setgray Rect_Path eofill grestore } def  %% x y w h gray
/Rect_Clip { Rect_Path clip np } def  %% x y w h
/Line_Draw { gsave setlinewidth moveto lineto stroke grestore } def %% x1 y1 x2 y2 lw

/Pat_Show {  %% x y w h u n trans
  /trans exch def
  /n exch def
  /u exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def
  y u -1 mul y u sub h sub {
    x u x u add w add {
      gs
      1 index tr
      u dup sc
      1 trans eq
        { n n false [n 0 0 0 n sub 0 n] {Pat} imagemask }
	{ n n 1 [n 0 0 0 n sub 0 n] {Pat} image }
      ifelse
      gr
    } for
    pop
  } for
} def

/Pat_Show2 {  %% x1 y1 x2 y2 u n trans
  /trans exch def
  /n exch def
  /u exch def
  /y2 exch def
  /x2 exch def
  /y1 exch def
  /x1 exch def
  /w x2 x1 sub def
  /h y2 y1 sub def
  /y1 y1 h add def
  x1 y1 w h u n trans Pat_Show
} def

/NaN 0 def
/-NaN 0 def


/Courier findfont 17.280 scalefont setfont
42.52 102.87 mv ( )sh
51.64 102.87 mv ( )sh
60.76 102.87 mv ( )sh
0.00844 69.88 103.21 WB
592 1494 N
-22 0 -32 -8 -32 -24 C
0 -6 5 -14 13 -24 C
7 -9 14 -22 19 -38 C
8 -29 13 -131 15 -307 C
-81 -19 -162 -35 -244 -48 C
-8 10 -22 16 -42 20 C
-46 14 -81 21 -105 21 C
-11 0 -16 -8 -16 -24 C
0 -6 5 -17 16 -32 C
10 -13 16 -37 16 -72 C
0 -153 -9 -307 -25 -463 C
-19 -159 -51 -314 -98 -465 C
-24 -85 -55 -168 -93 -248 C
0 -5 0 -8 0 -8 C
9 0 16 2 22 6 C
65 71 116 149 153 233 C
41 99 77 217 106 352 C
31 159 53 358 68 597 C
0 5 0 11 2 19 C
64 20 127 36 188 49 C
4 -18 7 -36 9 -54 C
1 -19 2 -39 3 -61 C
-32 -8 -77 -21 -135 -37 C
-11 -2 -16 -8 -16 -16 C
0 -5 8 -8 24 -10 C
18 -4 32 -6 40 -6 C
10 0 18 2 26 5 C
26 6 47 10 62 12 C
0 -5 0 -10 0 -17 C
0 -14 4 -27 12 -38 C
14 -17 38 -30 70 -40 C
37 -12 100 -18 189 -18 C
26 0 46 3 62 8 C
16 4 36 12 58 26 C
11 8 17 18 17 30 C
0 7 -3 14 -8 19 C
-25 33 -42 67 -49 102 C
-1 5 -4 7 -7 7 C
-3 0 -5 -1 -6 -5 C
-11 -34 -25 -60 -42 -78 C
-19 -24 -54 -37 -105 -37 C
-37 0 -65 2 -84 5 C
-15 2 -24 5 -29 8 C
-4 2 -6 6 -6 11 C
0 14 0 25 1 33 C
63 16 119 31 167 47 C
5 4 8 9 8 16 C
0 16 -22 24 -64 24 C
-10 0 -18 -1 -24 -4 C
-17 -5 -43 -13 -80 -24 C
5 25 13 45 24 60 C
5 6 8 12 8 16 C
0 17 -10 30 -29 37 C
55 12 124 24 205 35 C
26 0 40 -10 40 -32 C
0 -19 -14 -48 -40 -88 C
0 -5 2 -8 8 -8 C
89 45 157 73 204 84 C
24 5 36 15 36 28 C
0 17 -29 43 -87 78 C
-45 23 -75 34 -89 34 C
-18 0 -38 -3 -58 -9 C
-67 -24 -123 -42 -170 -55 C
6 66 11 117 16 153 C
6 0 13 0 20 -1 C
26 0 55 3 87 8 C
47 7 86 12 116 15 C
24 2 37 10 37 25 C
0 35 -35 54 -104 56 C
-11 0 -32 -5 -64 -17 C
-28 -10 -55 -19 -83 -28 C
4 28 9 48 14 59 C
2 8 3 14 5 18 C
0 17 -21 34 -63 52 C
-29 19 -59 28 -89 28 C
1232 1334 M
-22 0 -32 -8 -32 -24 C
0 -11 4 -25 14 -43 C
17 -20 26 -54 29 -103 C
8 -86 13 -159 13 -219 C
0 -134 -3 -236 -7 -307 C
-76 -17 -164 -36 -265 -56 C
-11 0 -16 -2 -16 -8 C
0 -8 13 -19 41 -33 C
31 -15 58 -23 79 -23 C
7 0 22 5 44 14 C
41 15 78 27 113 35 C
-3 -55 -11 -111 -22 -167 C
-13 -81 -34 -158 -62 -230 C
-22 -58 -47 -106 -75 -145 C
-22 -31 -54 -70 -96 -115 C
0 12 -1 30 -2 53 C
-3 64 -4 102 -4 114 C
0 79 9 132 27 160 C
3 3 5 6 5 9 C
0 19 -21 40 -63 64 C
-36 16 -61 24 -73 24 C
-6 0 -13 -2 -23 -7 C
-28 -11 -63 -21 -105 -29 C
-93 -16 -187 -31 -283 -44 C
-21 -4 -51 -6 -89 -7 C
-19 11 -36 16 -52 15 C
-16 0 -24 -5 -24 -16 C
0 -3 1 -9 3 -18 C
14 -27 24 -87 29 -182 C
0 -50 -4 -91 -10 -125 C
-4 -14 -13 -35 -27 -61 C
-2 -4 -3 -6 -3 -6 C
0 -15 5 -37 15 -66 C
10 -36 24 -54 41 -54 C
8 0 18 8 30 22 C
10 18 16 34 18 50 C
3 65 6 159 8 280 C
0 52 1 87 4 105 C
41 8 80 14 118 19 C
-1 0 -2 -1 -2 -4 C
-1 -25 -5 -47 -11 -64 C
-7 -21 -27 -58 -61 -112 C
0 -5 2 -8 8 -8 C
3 0 7 1 12 3 C
18 8 32 17 44 26 C
21 16 39 34 56 54 C
11 13 26 29 45 46 C
2 3 3 5 3 7 C
1 9 -8 21 -28 36 C
-21 12 -36 19 -45 19 C
49 8 102 14 158 18 C
58 5 101 7 131 7 C
26 0 40 -5 40 -16 C
10 -81 16 -145 16 -191 C
-1 -74 -6 -122 -17 -145 C
-5 -16 -18 -24 -39 -24 C
-13 0 -43 0 -88 0 C
-6 0 -8 -2 -8 -8 C
0 -5 45 -61 136 -168 C
19 0 44 22 74 66 C
25 48 38 85 38 110 C
0 1 0 2 0 2 C
7 1 18 4 33 9 C
72 41 127 88 167 141 C
33 48 60 99 79 153 C
19 54 34 107 45 157 C
78 -165 164 -316 260 -454 C
15 -16 68 -24 160 -24 C
86 0 168 4 246 10 C
6 3 10 13 10 30 C
-172 70 -283 127 -333 171 C
-58 38 -104 77 -140 115 C
-54 52 -116 130 -188 233 C
9 60 16 122 22 186 C
98 21 218 32 359 31 C
21 0 32 8 32 24 C
0 26 -16 47 -46 62 C
-35 18 -68 26 -98 26 C
-17 0 -36 -3 -58 -10 C
-64 -22 -125 -42 -183 -58 C
9 161 16 310 19 447 C
-1 41 3 73 13 98 C
6 12 9 26 9 43 C
0 26 -21 45 -61 57 C
-28 16 -63 23 -107 23 C
1488 1062 M
-13 0 -21 -5 -24 -16 C
0 -4 4 -9 14 -17 C
63 -71 113 -118 150 -140 C
17 -12 35 -19 52 -19 C
14 0 29 9 44 25 C
13 18 20 36 20 55 C
0 28 -14 50 -40 64 C
-34 16 -82 30 -145 41 C
-27 5 -51 7 -71 7 C
784 710 M
-9 0 -23 -2 -41 -7 C
-98 -23 -204 -42 -319 -57 C
-11 -2 -16 -7 -16 -16 C
0 -7 9 -14 29 -21 C
24 -7 52 -11 83 -11 C
17 0 54 5 112 13 C
71 10 147 23 228 40 C
13 3 20 9 20 19 C
0 27 -32 40 -96 40 C
784 582 M
-5 0 -10 -1 -15 -4 C
-33 -13 -71 -25 -113 -36 C
-78 -18 -138 -30 -178 -37 C
-2 1 -5 2 -7 3 C
-25 7 -46 10 -63 10 C
-11 0 -16 -5 -16 -16 C
12 -5 21 -14 28 -26 C
10 -13 19 -31 26 -54 C
7 -38 15 -65 26 -80 C
0 -7 4 -17 12 -29 C
8 -12 17 -19 28 -19 C
12 1 20 12 22 33 C
19 3 51 9 95 17 C
69 14 139 21 210 21 C
5 0 8 3 9 9 C
0 7 -8 17 -22 30 C
31 45 55 73 72 84 C
8 6 13 14 14 22 C
0 11 -21 27 -63 49 C
-32 16 -53 23 -65 23 C
513 465 M
55 16 100 28 136 34 C
45 8 74 11 87 11 C
16 0 24 -2 24 -8 C
0 -9 -2 -20 -5 -32 C
-5 -25 -9 -44 -14 -57 C
-26 -9 -65 -19 -117 -28 C
-48 -10 -79 -15 -93 -16 C
-18 96 L
672 214 M
-5 0 -7 -2 -8 -8 C
0 -3 3 -7 9 -13 C
40 -55 71 -91 94 -108 C
11 -10 22 -15 33 -15 C
7 0 14 4 22 12 C
6 10 10 19 10 28 C
0 26 -9 46 -25 59 C
-21 15 -52 28 -91 39 C
-17 4 -31 6 -44 6 C
704 46 M
-6 0 -14 -1 -26 -4 C
-61 -15 -127 -27 -198 -36 C
-11 -2 -16 -7 -16 -16 C
0 -7 9 -14 29 -21 C
24 -7 52 -11 83 -11 C
4 1 9 1 15 1 C
5 -8 8 -43 9 -105 C
-48 Y
0 -3 4 -12 13 -26 C
13 -20 22 -30 27 -30 C
8 0 13 6 17 17 C
4 8 7 19 7 31 C
16 168 L
0 3 -1 5 -1 6 C
29 5 65 12 109 21 C
8 2 12 7 12 13 C
0 27 -32 40 -96 40 C
cl
WE
0.00844 88.12 103.21 WB
1176 1406 N
-22 0 -32 -5 -32 -16 C
0 -21 8 -42 24 -64 C
0 -18 -3 -43 -9 -75 C
-4 -18 -7 -34 -10 -48 C
-4 -1 -5 -2 -5 -5 C
0 -2 0 -4 2 -7 C
-13 -53 -31 -113 -55 -178 C
-33 -88 -67 -170 -103 -247 C
-55 -107 -117 -217 -188 -328 C
0 -10 0 -16 0 -16 C
6 0 19 7 37 21 C
48 30 97 77 149 140 C
60 75 118 167 173 277 C
37 74 71 149 100 223 C
27 -32 51 -63 71 -93 C
124 -199 226 -340 307 -425 C
10 -10 32 -15 67 -15 C
81 0 175 9 280 26 C
21 2 32 7 32 14 C
0 8 -3 14 -8 16 C
-196 88 -338 169 -425 244 C
-80 66 -164 151 -251 256 C
-20 26 -36 42 -46 49 C
6 17 13 36 20 57 C
9 26 16 46 23 59 C
4 7 7 14 7 23 C
0 27 -15 48 -45 63 C
-45 33 -83 49 -115 49 C
568 1334 M
-22 0 -32 -10 -32 -32 C
0 -13 2 -26 8 -40 C
0 -7 -7 -29 -21 -64 C
-45 -97 -82 -166 -111 -207 C
-60 -82 -115 -136 -164 -161 C
-11 -7 -16 -15 -16 -24 C
0 -30 7 -53 22 -71 C
14 -27 33 -41 58 -41 C
53 36 140 65 261 86 C
-23 -26 -48 -55 -77 -87 C
-81 -89 -133 -142 -155 -160 C
-13 -10 -30 -18 -49 -24 C
-24 -14 -36 -27 -36 -39 C
0 -14 8 -32 25 -55 C
22 -32 40 -49 55 -49 C
6 0 16 5 30 13 C
21 21 60 45 118 71 C
56 28 121 51 196 68 C
0 1 1 1 1 1 C
10 -24 17 -40 23 -49 C
6 -10 17 -16 32 -16 C
15 0 26 8 35 24 C
8 20 13 39 13 56 C
0 14 -4 26 -10 38 C
-8 13 -24 27 -48 42 C
-19 11 -37 21 -56 29 C
-10 2 -17 3 -22 3 C
-6 0 -8 -5 -8 -16 C
0 -6 3 -15 10 -28 C
3 -6 8 -17 14 -34 C
-54 -12 -125 -27 -212 -46 C
71 90 146 174 225 250 C
77 72 143 129 199 171 C
13 8 20 16 20 23 C
0 24 -18 46 -54 67 C
-41 30 -68 45 -82 45 C
-27 0 -40 -18 -40 -56 C
-2 -30 -9 -55 -22 -75 C
-23 -36 -49 -73 -78 -109 C
-230 -6 L
6 10 14 23 26 38 C
115 151 207 260 278 326 C
12 9 18 18 18 26 C
0 28 -17 53 -51 75 C
-34 25 -65 37 -93 37 C
1360 630 M
-8 0 -20 -2 -37 -7 C
-87 -23 -181 -42 -283 -57 C
-16 -3 -24 -11 -24 -24 C
0 -9 13 -17 40 -26 C
33 -9 70 -14 112 -14 C
15 0 48 5 100 13 C
63 10 130 23 202 40 C
12 3 18 9 18 19 C
0 38 -43 56 -128 56 C
1472 406 M
-15 0 -33 -4 -53 -13 C
-59 -22 -118 -40 -177 -52 C
-69 -13 -145 -23 -230 -28 C
-4 3 -9 5 -15 8 C
-30 9 -56 13 -77 13 C
-22 0 -32 -8 -32 -24 C
19 -14 34 -35 46 -65 C
16 -32 30 -76 40 -132 C
11 -93 25 -158 42 -195 C
0 -11 5 -26 17 -43 C
11 -19 24 -29 39 -29 C
19 1 29 22 31 65 C
2 0 5 0 9 -1 C
21 0 79 8 174 22 C
108 16 219 24 331 24 C
8 0 13 4 15 10 C
0 11 -14 29 -40 54 C
-4 4 -7 6 -9 6 C
0 2 0 3 1 4 C
16 60 40 106 72 140 C
16 22 40 42 71 58 C
11 6 17 12 17 18 C
0 24 -41 60 -122 108 C
-68 35 -118 52 -150 52 C
1051 250 M
20 3 78 11 173 24 C
94 14 155 20 184 20 C
42 0 64 -21 64 -64 C
0 -25 -3 -57 -9 -97 C
-6 -50 -11 -83 -17 -100 C
-44 -10 -103 -20 -176 -30 C
-88 -13 -147 -19 -177 -20 C
-42 267 L
624 374 M
-9 0 -14 -2 -16 -8 C
0 -4 3 -10 9 -18 C
42 -74 76 -123 100 -146 C
12 -13 23 -20 35 -20 C
9 0 18 6 28 17 C
8 13 12 26 12 39 C
0 34 -9 60 -27 77 C
-22 20 -53 37 -95 51 C
-17 6 -33 8 -46 8 C
416 294 M
-9 0 -14 -2 -16 -8 C
0 -4 3 -10 9 -18 C
42 -74 76 -123 100 -146 C
12 -13 23 -20 35 -20 C
9 0 18 6 28 17 C
8 13 12 26 12 39 C
0 34 -9 60 -27 77 C
-22 20 -53 37 -95 51 C
-17 6 -33 8 -46 8 C
176 214 M
-9 0 -14 -5 -16 -16 C
0 -6 3 -15 11 -26 C
52 -111 93 -183 123 -217 C
14 -19 28 -29 42 -29 C
13 0 26 8 39 22 C
11 17 17 33 17 50 C
0 54 -12 95 -34 123 C
-28 31 -69 58 -122 80 C
-23 9 -43 13 -60 13 C
cl
WE
0.00844 106.36 103.21 WB
1032 1510 N
-32 0 -48 -8 -48 -24 C
0 -14 5 -26 15 -36 C
26 -34 46 -76 62 -125 C
10 -34 19 -79 27 -135 C
18 -145 35 -266 52 -365 C
-144 -35 -260 -62 -348 -81 C
1 52 4 91 10 118 C
4 8 6 16 6 24 C
0 26 -18 50 -54 73 C
-21 13 -40 20 -56 19 C
5 3 12 6 20 8 C
48 20 86 34 115 41 C
20 4 62 20 127 46 C
16 6 24 15 24 29 C
0 17 -25 39 -73 65 C
-63 26 -103 39 -119 39 C
-11 0 -16 -2 -16 -8 C
-12 -34 -26 -60 -43 -79 C
-29 -35 -67 -65 -115 -92 C
-65 -36 -146 -73 -242 -109 C
0 -10 18 -16 56 -16 C
35 1 107 20 216 59 C
1 -6 3 -14 6 -26 C
10 -24 18 -62 22 -112 C
3 -37 6 -70 8 -101 C
-22 -4 -46 -9 -74 -14 C
-106 -17 -211 -27 -314 -30 C
-16 0 -24 -5 -24 -16 C
0 -23 27 -47 81 -73 C
51 -20 83 -31 95 -31 C
8 0 25 5 52 14 C
75 24 138 43 187 57 C
0 -8 1 -20 1 -34 C
0 -68 -1 -128 -1 -179 C
-170 -69 -306 -119 -408 -152 C
-36 -14 -73 -23 -111 -26 C
-16 0 -24 -8 -24 -24 C
0 -13 18 -37 55 -70 C
45 -33 77 -50 97 -50 C
11 0 24 7 40 20 C
114 71 212 129 295 174 C
25 14 43 23 54 29 C
-2 -85 -6 -159 -11 -220 C
-7 -66 -23 -99 -50 -99 C
-34 0 -87 11 -160 32 C
-11 0 -16 -5 -16 -16 C
87 -74 141 -129 164 -166 C
15 -28 35 -42 60 -42 C
21 0 46 22 77 65 C
34 51 51 99 51 143 C
-4 139 -6 260 -6 363 C
74 42 134 78 180 107 C
17 10 26 19 26 26 C
0 16 -6 24 -16 24 C
-13 0 -49 -13 -109 -39 C
-34 -14 -61 -25 -82 -35 C
-1 61 -1 127 -1 199 C
79 22 157 40 232 54 C
48 12 91 21 130 28 C
23 -134 49 -245 76 -335 C
13 -45 26 -84 39 -118 C
-13 -10 -29 -22 -47 -36 C
-93 -68 -207 -134 -342 -198 C
0 -5 5 -8 16 -8 C
22 0 63 9 125 27 C
104 30 199 72 283 127 C
20 -46 43 -93 69 -140 C
42 -73 95 -145 159 -215 C
54 -56 108 -98 164 -127 C
63 -26 114 -40 152 -40 C
26 0 40 22 40 64 C
0 16 -4 31 -11 46 C
-12 41 -18 155 -16 344 C
0 28 -4 42 -13 42 C
-5 0 -9 -4 -12 -14 C
-30 -97 -60 -181 -88 -251 C
-7 -15 -14 -23 -20 -23 C
-21 0 -59 25 -114 74 C
-56 52 -106 117 -149 195 C
-24 38 -46 77 -65 116 C
68 55 131 122 190 202 C
15 15 41 39 78 71 C
8 8 12 16 12 22 C
0 29 -19 53 -56 73 C
-43 32 -83 47 -120 47 C
-22 0 -32 -8 -32 -24 C
8 -64 L
0 -43 -19 -91 -56 -142 C
-24 -32 -46 -60 -68 -84 C
-15 36 -29 78 -43 125 C
-27 86 -48 173 -63 260 C
82 14 161 23 236 26 C
76 4 114 17 114 39 C
0 51 -40 77 -120 80 C
-22 0 -49 -3 -80 -10 C
-62 -15 -116 -29 -164 -42 C
-2 18 -5 40 -7 65 C
-20 120 -29 254 -29 403 C
0 23 5 41 16 56 C
5 10 8 23 8 40 C
0 24 -20 44 -58 61 C
-44 24 -89 35 -134 35 C
1328 1262 M
-13 0 -21 -8 -24 -24 C
0 -4 5 -9 16 -16 C
73 -68 130 -113 172 -134 C
20 -12 40 -18 60 -18 C
18 0 37 10 55 30 C
16 22 25 44 25 66 C
0 24 -16 43 -48 55 C
-40 14 -97 25 -172 35 C
-32 4 -60 6 -84 6 C
cl
WE
0.00844 124.60 103.21 WB
1272 1398 N
-22 0 -32 -8 -32 -24 C
8 -48 L
0 -24 -5 -62 -15 -115 C
-21 -87 -49 -174 -84 -260 C
-46 -107 -106 -222 -181 -345 C
0 -10 5 -16 16 -16 C
9 0 28 15 58 43 C
54 47 113 120 177 218 C
11 -3 24 -4 37 -5 C
4 0 8 1 12 3 C
37 11 91 21 163 32 C
24 4 49 5 73 5 C
39 0 69 -15 90 -47 C
9 -24 14 -73 14 -147 C
0 -110 -2 -210 -4 -300 C
-17 -185 -41 -306 -71 -364 C
-15 -36 -33 -54 -53 -54 C
-30 0 -102 16 -216 48 C
-6 0 -8 -2 -8 -8 C
0 0 8 -8 24 -25 C
54 -76 104 -147 150 -213 C
9 -17 29 -26 58 -26 C
22 0 64 32 126 95 C
51 50 84 109 99 176 C
14 64 25 263 31 597 C
7 60 31 134 73 222 C
4 11 7 21 7 30 C
0 12 -36 37 -107 76 C
-63 35 -102 52 -117 52 C
-3 0 -6 -1 -9 -3 C
-27 -14 -51 -22 -70 -24 C
-108 -21 -192 -39 -252 -56 C
-6 -1 -11 -3 -16 -4 C
39 74 83 167 130 280 C
4 13 12 25 25 37 C
10 13 16 27 16 42 C
0 26 -17 53 -50 80 C
-41 32 -75 48 -102 48 C
576 1286 M
-32 0 -48 -10 -48 -32 C
21 -34 32 -55 32 -64 C
0 -27 -8 -65 -24 -112 C
-29 -91 -72 -185 -128 -280 C
-17 1 -32 2 -46 3 C
-4 2 -7 3 -10 3 C
-2 1 -3 2 -5 2 C
-29 11 -51 16 -67 16 C
-32 0 -48 -13 -48 -40 C
0 -14 6 -35 18 -63 C
32 -60 50 -241 54 -545 C
-8 -88 L
0 -6 7 -21 23 -45 C
23 -34 39 -51 49 -51 C
16 0 27 11 35 32 C
8 15 13 33 13 56 C
-1 32 L
0 1 0 1 1 0 C
13 0 49 2 107 6 C
47 4 89 6 125 6 C
21 -58 42 -116 62 -173 C
4 -15 13 -23 26 -23 C
12 0 34 24 67 71 C
27 37 44 81 52 131 C
8 47 13 195 17 443 C
6 45 28 100 65 165 C
4 8 7 15 7 22 C
0 10 -33 33 -99 67 C
-59 30 -95 45 -109 45 C
-3 0 -6 0 -8 -2 C
-24 -12 -45 -18 -62 -20 C
-72 -12 -131 -24 -176 -35 C
78 84 140 165 186 242 C
15 22 37 53 65 92 C
12 20 19 35 19 43 C
0 24 -20 45 -60 63 C
-40 22 -82 33 -124 33 C
408 417 M
7 -1 17 -2 32 -3 C
26 0 55 2 87 6 C
47 6 86 10 116 13 C
24 2 37 9 37 21 C
0 40 -40 61 -120 64 C
-11 0 -31 -5 -62 -15 C
-30 -10 -61 -20 -92 -28 C
-6 268 L
10 -5 21 -8 32 -9 C
3 0 7 1 11 3 C
32 11 79 21 141 32 C
21 4 43 5 64 5 C
36 0 63 -12 83 -36 C
8 -18 13 -56 13 -112 C
0 -75 -1 -144 -1 -205 C
-2 -127 -5 -210 -9 -250 C
-1 -17 -2 -27 -3 -30 C
-4 8 -14 21 -30 39 C
-19 18 -42 26 -69 26 C
-7 0 -14 -1 -23 -4 C
-30 -8 -70 -16 -120 -23 C
-37 -5 -62 -9 -75 -10 C
-6 248 L
1088 550 M
-13 0 -21 -5 -24 -16 C
0 -5 4 -13 13 -23 C
59 -97 105 -161 139 -191 C
16 -17 32 -26 48 -26 C
16 0 33 9 50 27 C
14 20 22 41 22 61 C
0 42 -13 74 -39 95 C
-33 25 -80 46 -141 63 C
-26 7 -48 10 -68 10 C
cl
WE
0.00844 142.84 103.21 WB
1152 1302 N
-11 0 -16 -5 -16 -16 C
0 -10 21 -27 65 -50 C
34 -17 98 -66 194 -146 C
66 -47 116 -77 149 -92 C
8 -10 21 -16 40 -16 C
20 0 35 11 47 31 C
11 26 17 50 17 73 C
0 26 -12 50 -35 73 C
-28 25 -86 52 -174 82 C
-69 20 -138 38 -206 54 C
-36 5 -63 7 -81 7 C
680 1222 M
-22 0 -32 -8 -32 -24 C
8 -48 L
0 -14 -7 -36 -19 -67 C
-28 -52 -65 -103 -111 -153 C
-60 -64 -140 -132 -238 -204 C
0 -10 5 -16 16 -16 C
11 0 34 8 69 24 C
65 27 137 69 217 126 C
59 48 123 111 192 189 C
5 8 15 15 31 21 C
12 8 19 16 19 24 C
0 26 -17 53 -50 80 C
-41 32 -75 48 -102 48 C
1168 918 M
-27 0 -40 -8 -40 -24 C
10 -23 16 -45 16 -64 C
0 -80 -18 -161 -52 -243 C
-26 -65 -54 -121 -85 -167 C
-68 65 -136 134 -205 207 C
-43 45 -84 67 -122 67 C
-70 0 -104 -16 -104 -48 C
0 -21 21 -37 64 -48 C
55 -15 109 -49 163 -101 C
42 -36 92 -86 149 -150 C
-24 -29 -51 -57 -80 -85 C
-120 -109 -241 -190 -365 -243 C
-71 -30 -152 -55 -243 -77 C
0 -21 29 -32 88 -32 C
114 0 220 20 318 59 C
134 57 257 150 370 280 C
15 -18 33 -39 54 -63 C
74 -95 187 -206 338 -332 C
27 -16 77 -24 152 -24 C
122 0 237 8 343 22 C
27 0 41 9 41 26 C
0 8 -8 14 -24 16 C
-268 82 -431 142 -490 181 C
-73 37 -162 98 -267 185 C
-29 25 -57 49 -83 72 C
61 89 117 204 170 345 C
2 11 17 34 46 69 C
10 11 16 26 16 44 C
0 27 -28 60 -84 99 C
-30 20 -58 29 -84 29 C
cl
WE
0.00844 161.08 103.21 WB
1280 1374 N
-6 0 -15 -2 -28 -8 C
-96 -31 -240 -63 -434 -96 C
-29 -5 -52 -8 -70 -10 C
-7 6 -20 12 -38 18 C
-25 16 -56 24 -94 24 C
-27 0 -40 -10 -40 -32 C
37 -74 56 -143 56 -208 C
0 -77 -6 -158 -17 -242 C
-5 -36 -11 -68 -18 -97 C
-235 -24 -399 -36 -493 -37 C
-16 0 -24 -5 -24 -16 C
0 -7 18 -23 55 -46 C
44 -22 84 -34 121 -34 C
32 0 64 6 97 18 C
92 23 168 39 227 48 C
-11 -40 -26 -87 -46 -139 C
-42 -126 -98 -214 -166 -263 C
-22 -5 -32 -37 -32 -96 C
0 -58 21 -88 64 -88 C
5 0 11 4 16 12 C
52 60 107 101 165 122 C
91 34 206 50 347 50 C
111 0 210 -5 297 -15 C
4 0 8 0 13 -1 C
-13 -67 -29 -128 -49 -183 C
-17 -59 -40 -89 -69 -89 C
-15 0 -84 14 -208 40 C
-6 -3 -8 -9 -8 -16 C
0 -9 5 -18 16 -28 C
64 -56 129 -131 196 -223 C
13 -14 25 -21 36 -21 C
41 0 86 43 137 128 C
53 88 88 197 106 326 C
1 11 2 21 3 30 C
50 -13 136 -40 259 -83 C
20 -4 31 -7 31 -9 C
26 0 40 11 40 32 C
0 39 -22 77 -66 113 C
-43 42 -91 63 -142 63 C
-44 4 -81 8 -112 10 C
7 107 11 237 14 390 C
19 1 44 1 74 0 C
45 0 99 -2 163 -8 C
101 -5 172 -8 213 -8 C
42 0 64 11 64 32 C
0 33 -26 66 -77 98 C
-59 26 -111 38 -155 38 C
-9 0 -21 -1 -38 -4 C
-72 -13 -153 -26 -242 -40 C
0 6 0 12 0 17 C
0 69 6 134 20 194 C
4 53 26 108 66 166 C
8 16 14 30 18 43 C
2 17 -36 46 -116 86 C
-71 28 -115 42 -132 42 C
1090 1259 M
48 13 87 19 118 19 C
34 0 55 -19 61 -59 C
7 -75 11 -177 11 -305 C
0 -50 -1 -86 -1 -109 C
-114 -15 -261 -34 -440 -56 C
-52 -5 -97 -10 -137 -14 C
20 108 40 255 60 441 C
43 6 153 34 328 83 C
1274 511 M
-6 -66 -12 -124 -19 -173 C
-128 9 -237 13 -327 12 C
-115 1 -237 -17 -365 -54 C
44 84 81 184 111 302 C
6 26 12 51 17 75 C
35 5 70 10 107 13 C
148 18 309 28 481 30 C
-1 -66 -3 -134 -5 -205 C
880 1110 M
-13 0 -21 -8 -24 -24 C
0 -4 3 -10 11 -18 C
49 -74 88 -123 117 -146 C
13 -13 26 -20 40 -20 C
18 0 37 10 55 30 C
16 22 25 44 25 66 C
0 28 -12 50 -35 64 C
-30 16 -72 30 -127 41 C
-24 5 -44 7 -62 7 C
848 598 M
-13 0 -21 -8 -24 -24 C
0 -4 4 -11 12 -19 C
54 -81 97 -135 128 -160 C
15 -14 29 -21 44 -21 C
18 0 37 10 55 30 C
16 22 25 44 25 66 C
0 32 -13 57 -38 73 C
-31 18 -77 34 -136 47 C
-25 6 -47 8 -66 8 C
cl
WE
179.32 102.87 mv (:)sh
188.44 102.87 mv ( )sh
0.00844 197.56 103.21 WB
1232 1446 N
-6 0 -13 -1 -21 -3 C
-38 -13 -74 -21 -109 -23 C
-73 -7 -167 -22 -282 -44 C
-17 -4 -40 -7 -68 -9 C
-1 1 -2 2 -3 2 C
-30 9 -56 13 -77 13 C
-22 0 -32 -8 -32 -24 C
22 -11 40 -29 54 -54 C
20 -27 36 -64 48 -111 C
14 -77 30 -132 50 -163 C
0 -11 5 -26 17 -43 C
11 -19 24 -29 39 -29 C
14 1 23 12 27 35 C
7 -1 14 -2 21 -3 C
17 0 63 6 139 18 C
87 14 175 21 265 21 C
6 0 10 3 12 9 C
0 11 -11 26 -31 45 C
20 47 43 89 70 125 C
18 30 46 57 85 80 C
13 11 20 21 20 30 C
0 15 -36 41 -106 77 C
-70 34 -110 51 -118 51 C
803 1305 M
1 1 2 1 4 1 C
78 20 152 35 224 43 C
47 6 85 9 113 9 C
37 -2 56 -15 56 -40 C
0 -41 -4 -81 -12 -121 C
-7 -33 -14 -61 -22 -84 C
-2 0 -3 0 -4 -1 C
-39 -12 -91 -22 -156 -31 C
-68 -11 -113 -17 -135 -18 C
-68 242 L
512 1070 M
-16 0 -24 -8 -24 -24 C
0 -15 6 -40 18 -77 C
9 -36 14 -66 14 -89 C
0 -32 -7 -63 -19 -93 C
-12 -22 -27 -39 -43 -51 C
-12 -7 -18 -13 -18 -18 C
0 -11 6 -26 20 -46 C
21 -28 41 -42 60 -42 C
12 0 35 6 70 16 C
79 32 173 58 284 78 C
1 -5 2 -10 4 -16 C
6 -12 10 -35 10 -70 C
0 -67 -9 -133 -26 -199 C
-316 -32 -526 -48 -630 -49 C
-16 0 -24 -2 -24 -8 C
0 -7 17 -23 52 -46 C
42 -22 81 -34 116 -34 C
28 0 57 5 86 14 C
131 27 257 46 379 57 C
-34 -91 -90 -176 -169 -255 C
-62 -71 -141 -134 -235 -189 C
-49 -34 -115 -67 -197 -99 C
0 -10 5 -16 16 -16 C
83 0 155 10 217 28 C
71 26 136 59 193 100 C
79 62 147 146 205 254 C
32 61 57 121 76 182 C
11 -8 23 -19 37 -33 C
44 -44 80 -83 108 -118 C
147 -201 268 -344 364 -430 C
12 -10 39 -15 80 -15 C
96 0 206 11 330 31 C
25 3 38 8 38 17 C
0 8 -3 14 -8 16 C
-234 89 -403 171 -508 247 C
-95 67 -195 153 -299 260 C
-14 14 -26 26 -38 36 C
109 7 252 10 429 9 C
42 0 93 -2 152 -8 C
95 -5 161 -8 200 -8 C
37 0 56 11 56 32 C
0 31 -24 62 -72 92 C
-55 24 -103 36 -144 36 C
-8 0 -19 -1 -34 -3 C
-70 -11 -139 -22 -206 -32 C
13 42 29 77 49 106 C
24 34 51 61 81 81 C
14 11 22 24 22 40 C
0 18 -33 46 -98 83 C
-63 36 -102 53 -118 53 C
-35 0 -82 -5 -140 -15 C
-356 -70 -568 -105 -636 -105 C
-6 0 -8 3 -8 8 C
0 15 3 31 10 47 C
14 41 31 73 52 97 C
17 10 26 18 26 24 C
0 17 -25 48 -75 95 C
-41 33 -70 49 -85 49 C
993 557 M
8 37 20 68 35 93 C
8 19 12 33 12 44 C
0 25 -14 42 -40 51 C
57 8 120 15 188 20 C
47 6 88 9 124 9 C
21 0 32 -16 32 -48 C
0 -35 -3 -69 -8 -104 C
-7 -52 -16 -90 -28 -114 C
-6 -6 -9 -12 -10 -18 C
-88 -11 -198 -25 -330 -40 C
8 29 16 64 25 107 C
cl
WE
0.00844 215.80 103.21 WB
848 1382 N
-16 -1 -24 -7 -24 -16 C
0 -20 34 -70 102 -150 C
60 -70 109 -106 146 -106 C
48 0 72 30 72 88 C
0 31 -9 58 -27 80 C
-19 22 -58 44 -117 67 C
-61 25 -111 37 -152 37 C
1464 1054 M
-30 0 -64 -4 -103 -12 C
-152 -37 -303 -68 -454 -93 C
-154 -26 -334 -52 -539 -79 C
-11 0 -16 -5 -16 -16 C
0 -10 16 -22 49 -37 C
38 -18 69 -27 95 -27 C
13 0 39 6 77 17 C
116 29 223 50 320 62 C
53 9 106 16 157 21 C
9 -22 14 -42 14 -60 C
0 -80 -18 -161 -52 -243 C
-17 -44 -36 -84 -56 -120 C
-35 31 -74 67 -118 109 C
-50 50 -100 87 -150 109 C
-40 17 -72 25 -96 25 C
-32 0 -48 -5 -48 -16 C
0 -4 5 -9 16 -16 C
49 -19 102 -52 160 -100 C
68 -57 124 -108 166 -153 C
8 -10 17 -20 26 -30 C
-31 -45 -69 -89 -116 -133 C
-117 -109 -236 -190 -357 -243 C
-70 -30 -149 -55 -239 -77 C
0 -21 29 -32 88 -32 C
113 0 217 20 313 59 C
136 58 264 159 383 303 C
6 8 12 16 17 22 C
168 -188 316 -331 444 -428 C
19 -13 60 -20 123 -20 C
104 0 224 12 359 36 C
27 3 41 10 41 20 C
0 4 -3 7 -8 8 C
-325 117 -561 225 -706 325 C
-68 46 -133 94 -196 145 C
48 79 94 178 137 297 C
2 11 17 34 46 69 C
10 11 15 26 15 44 C
0 27 -28 60 -84 99 C
-7 5 -14 9 -19 11 C
133 13 280 19 439 18 C
26 0 40 11 40 32 C
0 31 -18 55 -54 73 C
-41 21 -79 31 -114 31 C
cl
WE
0.00844 234.04 103.21 WB
928 1534 N
-13 0 -21 -8 -24 -24 C
0 -3 4 -8 12 -14 C
54 -62 97 -103 128 -122 C
15 -10 29 -16 44 -16 C
18 0 37 10 55 30 C
16 22 25 44 25 66 C
0 20 -13 36 -38 46 C
-31 11 -77 21 -136 29 C
-25 4 -47 5 -66 5 C
1424 1366 M
-25 0 -53 -3 -84 -9 C
-124 -29 -248 -54 -371 -73 C
-109 -17 -222 -34 -338 -49 C
-10 9 -25 16 -46 19 C
-53 16 -94 24 -121 24 C
-11 0 -16 -8 -16 -24 C
0 -8 6 -21 20 -40 C
13 -16 20 -45 20 -88 C
0 -176 -18 -353 -52 -532 C
-40 -183 -109 -361 -207 -535 C
-51 -98 -117 -193 -197 -285 C
0 -5 0 -8 0 -8 C
16 0 28 3 38 7 C
110 82 198 171 262 268 C
70 115 131 251 181 408 C
52 183 91 413 116 689 C
0 5 1 12 4 20 C
11 1 31 5 62 13 C
96 22 184 38 264 47 C
177 24 370 36 577 36 C
21 0 32 8 32 24 C
0 26 -16 47 -46 62 C
-35 18 -68 26 -98 26 C
1136 1214 M
-16 0 -24 -8 -24 -24 C
0 -5 3 -13 9 -23 C
6 -9 10 -22 13 -37 C
1 -10 1 -28 0 -56 C
-56 -12 -101 -21 -136 -27 C
-15 -2 -29 -4 -44 -6 C
0 17 2 29 4 37 C
1 7 1 12 2 16 C
0 13 -18 27 -53 42 C
-24 15 -49 22 -75 22 C
-16 0 -24 -8 -24 -24 C
1 -5 6 -11 14 -19 C
7 -7 14 -18 20 -31 C
3 -8 7 -26 12 -52 C
-31 -2 -75 -5 -132 -7 C
-34 -3 -50 -9 -50 -19 C
0 -10 12 -20 37 -28 C
22 -8 41 -12 59 -12 C
23 1 55 4 96 8 C
6 -36 13 -86 21 -149 C
-92 -12 -165 -18 -221 -19 C
-11 0 -16 -2 -16 -8 C
0 -11 5 -21 15 -31 C
12 -11 26 -17 41 -17 C
33 0 123 14 270 40 C
162 29 303 44 425 43 C
2 -1 5 -2 9 -3 C
8 1 15 2 21 5 C
18 1 38 1 60 0 C
13 0 20 7 23 19 C
0 9 -10 22 -28 39 C
11 21 25 52 42 92 C
5 18 25 35 58 50 C
16 8 24 14 24 19 C
0 18 -25 40 -73 65 C
-54 21 -86 31 -95 31 C
-24 0 -56 -6 -94 -20 C
-39 -10 -73 -19 -101 -27 C
4 14 8 24 12 30 C
3 7 5 13 7 17 C
0 13 -18 27 -53 42 C
-24 15 -49 22 -75 22 C
953 985 M
46 7 105 16 176 27 C
-2 -33 -7 -84 -14 -154 C
-17 -2 -52 -7 -106 -15 C
-22 -3 -39 -5 -51 -7 C
-4 67 -5 116 -5 149 C
1225 1027 M
37 6 93 15 167 27 C
21 0 32 -13 32 -40 C
0 -6 -7 -26 -20 -60 C
-7 -16 -12 -28 -15 -38 C
-8 -1 -21 -4 -38 -10 C
-48 -13 -101 -24 -159 -35 C
12 66 23 118 33 156 C
1664 790 M
-29 0 -60 -2 -92 -7 C
-294 -53 -621 -91 -980 -113 C
-11 0 -16 -5 -16 -16 C
0 -9 11 -19 35 -32 C
16 -10 34 -16 53 -16 C
19 0 43 2 72 4 C
260 36 543 64 848 84 C
26 0 40 -13 40 -40 C
0 -24 -11 -61 -32 -112 C
0 -5 2 -8 8 -8 C
95 55 168 89 218 102 C
25 6 38 18 38 34 C
0 18 -32 46 -94 83 C
-50 25 -83 37 -98 37 C
1336 638 M
-6 0 -8 -5 -8 -16 C
0 -3 6 -9 18 -18 C
9 -6 27 -23 53 -52 C
18 -17 32 -28 41 -34 C
8 -10 21 -16 40 -16 C
17 0 31 9 41 26 C
10 22 15 43 15 62 C
0 6 -5 11 -14 16 C
-11 6 -35 12 -71 19 C
-28 4 -55 8 -82 12 C
-15 1 -26 1 -33 1 C
1008 606 M
-9 0 -14 -5 -16 -16 C
0 -2 2 -6 7 -11 C
33 -45 59 -75 78 -89 C
9 -8 18 -12 27 -12 C
13 0 26 8 39 22 C
11 17 17 33 17 50 C
0 14 -8 25 -24 32 C
-20 8 -49 15 -86 21 C
-16 2 -30 3 -42 3 C
816 534 M
-6 0 -8 -2 -8 -8 C
13 -38 27 -67 41 -87 C
24 -33 56 -59 97 -79 C
56 -28 126 -42 210 -42 C
39 0 87 6 144 16 C
43 8 83 21 120 37 C
24 12 36 27 36 43 C
0 20 -8 33 -24 39 C
-51 16 -106 43 -165 79 C
-8 7 -14 10 -19 10 C
-6 0 -8 -5 -8 -16 C
32 -88 L
0 -6 -10 -12 -28 -18 C
-49 -9 -91 -14 -128 -14 C
-70 0 -131 12 -184 36 C
-38 19 -74 47 -108 84 C
-4 6 -7 8 -8 8 C
704 526 M
-10 0 -17 -7 -19 -22 C
-4 -21 -32 -67 -84 -138 C
-6 -14 -9 -28 -9 -40 C
0 -18 3 -35 9 -52 C
11 -18 27 -28 47 -28 C
10 0 21 6 32 16 C
16 14 28 33 38 58 C
17 36 26 70 26 102 C
0 21 -8 49 -24 84 C
-5 14 -10 20 -16 20 C
880 326 M
-11 0 -16 -8 -16 -24 C
8 -32 L
0 -36 -12 -74 -34 -113 C
-30 -58 -71 -112 -123 -162 C
-68 -70 -168 -143 -299 -221 C
0 -5 5 -8 16 -8 C
33 0 76 10 128 30 C
63 25 129 63 196 116 C
47 37 94 87 140 151 C
42 -17 83 -40 121 -71 C
18 -13 36 -27 53 -40 C
-39 -40 -87 -78 -146 -114 C
-67 -39 -138 -68 -212 -87 C
0 -3 0 -6 0 -9 C
1 -5 23 -8 64 -8 C
70 0 142 16 216 47 C
56 23 110 59 164 109 C
90 -64 184 -126 282 -185 C
18 -12 53 -19 106 -19 C
30 0 136 16 318 46 C
28 4 42 16 42 34 C
-326 60 -552 122 -677 186 C
-4 2 -7 4 -9 4 C
34 41 67 90 101 145 C
8 15 25 32 51 52 C
14 11 22 24 22 37 C
0 15 -20 36 -60 63 C
-35 17 -57 25 -68 25 C
-5 0 -10 -1 -15 -3 C
-50 -15 -100 -25 -151 -32 C
-36 -5 -69 -8 -101 -11 C
-6 18 -20 37 -43 58 C
-27 24 -52 36 -74 36 C
962 160 M
3 8 7 14 11 19 C
11 -3 20 -4 27 -5 C
11 0 80 11 208 32 C
10 0 16 -8 16 -24 C
0 -7 -4 -18 -11 -31 C
-26 -54 -56 -101 -90 -141 C
-22 14 -43 29 -63 45 C
-32 24 -66 44 -101 59 C
-12 4 -20 6 -24 6 C
7 11 16 25 27 40 C
cl
WE
0.00844 252.28 103.21 WB
816 1398 N
-11 0 -16 -2 -16 -8 C
-15 -36 -32 -64 -53 -84 C
-36 -36 -84 -69 -143 -97 C
-4 -1 -7 -3 -10 -5 C
-4 2 -7 3 -10 2 C
-9 1 -14 -4 -15 -13 C
-72 -32 -160 -65 -265 -99 C
0 -10 21 -16 64 -16 C
39 1 117 17 233 50 C
11 -21 20 -44 27 -71 C
8 -28 14 -106 17 -235 C
-127 -22 -230 -38 -311 -49 C
-72 -9 -144 -14 -214 -15 C
-16 0 -24 -2 -24 -8 C
0 -23 24 -47 74 -73 C
46 -20 75 -31 86 -31 C
5 0 17 3 35 8 C
127 35 229 59 308 73 C
-64 -134 -138 -248 -222 -342 C
-89 -105 -188 -197 -297 -275 C
0 -5 5 -8 16 -8 C
30 0 63 10 97 28 C
85 44 157 90 217 139 C
89 80 168 180 238 302 C
0 -18 0 -38 0 -60 C
0 -153 -10 -265 -28 -336 C
-14 -81 -31 -159 -52 -233 C
0 -45 7 -84 23 -116 C
18 -50 40 -76 65 -76 C
18 0 33 17 44 51 C
18 30 28 58 28 85 C
625 Y
0 16 0 28 0 36 C
2 -1 5 -4 10 -8 C
18 -12 52 -45 103 -101 C
35 -32 61 -54 79 -64 C
6 -10 17 -16 32 -16 C
17 0 31 8 41 24 C
10 20 15 39 15 56 C
0 18 -7 35 -21 51 C
-17 18 -51 37 -104 58 C
-41 14 -82 27 -123 38 C
-13 3 -24 4 -31 4 C
1 45 5 100 12 163 C
79 13 153 21 222 24 C
51 2 77 10 77 22 C
0 45 -38 69 -112 72 C
-15 0 -33 -1 -54 -5 C
-45 -8 -86 -15 -123 -23 C
6 50 15 111 28 183 C
8 14 13 26 13 37 C
0 35 -23 66 -68 93 C
-4 3 -8 5 -11 6 C
1 1 2 1 3 1 C
58 20 105 34 140 41 C
24 4 76 20 154 46 C
20 6 30 15 30 29 C
0 20 -29 45 -85 75 C
-74 30 -120 45 -139 45 C
1600 886 M
-14 0 -30 -4 -47 -13 C
-53 -22 -105 -40 -158 -52 C
-52 -11 -109 -20 -171 -26 C
-7 12 -23 24 -49 36 C
-34 10 -63 15 -87 15 C
-22 0 -32 -8 -32 -24 C
18 -23 32 -58 43 -107 C
15 -53 28 -127 38 -220 C
10 -152 23 -259 39 -321 C
0 -11 5 -26 17 -43 C
11 -19 24 -29 39 -29 C
24 0 37 24 40 72 C
-3 41 L
17 1 68 5 153 14 C
103 12 209 18 316 18 C
7 0 12 2 14 7 C
0 13 -15 34 -43 64 C
-7 7 -13 12 -19 15 C
17 103 44 186 81 249 C
19 42 46 79 81 110 C
13 11 20 22 20 34 C
0 24 -41 60 -122 108 C
-68 35 -118 52 -150 52 C
1235 731 M
26 4 74 12 143 23 C
81 14 133 20 158 20 C
42 0 64 -21 64 -64 C
0 -47 -5 -108 -15 -183 C
-10 -90 -20 -154 -31 -192 C
-42 -10 -95 -19 -159 -28 C
-59 -9 -102 -13 -131 -14 C
-29 438 L
cl
WE
0.00844 270.52 103.21 WB
1232 1446 N
-6 0 -13 -1 -21 -3 C
-38 -13 -74 -21 -109 -23 C
-73 -7 -167 -22 -282 -44 C
-17 -4 -40 -7 -68 -9 C
-1 1 -2 2 -3 2 C
-30 9 -56 13 -77 13 C
-22 0 -32 -8 -32 -24 C
22 -11 40 -29 54 -54 C
20 -27 36 -64 48 -111 C
14 -77 30 -132 50 -163 C
0 -11 5 -26 17 -43 C
11 -19 24 -29 39 -29 C
14 1 23 12 27 35 C
7 -1 14 -2 21 -3 C
17 0 63 6 139 18 C
87 14 175 21 265 21 C
6 0 10 3 12 9 C
0 11 -11 26 -31 45 C
20 47 43 89 70 125 C
18 30 46 57 85 80 C
13 11 20 21 20 30 C
0 15 -36 41 -106 77 C
-70 34 -110 51 -118 51 C
803 1305 M
1 1 2 1 4 1 C
78 20 152 35 224 43 C
47 6 85 9 113 9 C
37 -2 56 -15 56 -40 C
0 -41 -4 -81 -12 -121 C
-7 -33 -14 -61 -22 -84 C
-2 0 -3 0 -4 -1 C
-39 -12 -91 -22 -156 -31 C
-68 -11 -113 -17 -135 -18 C
-68 242 L
512 1070 M
-16 0 -24 -8 -24 -24 C
0 -15 6 -40 18 -77 C
9 -36 14 -66 14 -89 C
0 -32 -7 -63 -19 -93 C
-12 -22 -27 -39 -43 -51 C
-12 -7 -18 -13 -18 -18 C
0 -11 6 -26 20 -46 C
21 -28 41 -42 60 -42 C
12 0 35 6 70 16 C
79 32 173 58 284 78 C
1 -5 2 -10 4 -16 C
6 -12 10 -35 10 -70 C
0 -67 -9 -133 -26 -199 C
-316 -32 -526 -48 -630 -49 C
-16 0 -24 -2 -24 -8 C
0 -7 17 -23 52 -46 C
42 -22 81 -34 116 -34 C
28 0 57 5 86 14 C
131 27 257 46 379 57 C
-34 -91 -90 -176 -169 -255 C
-62 -71 -141 -134 -235 -189 C
-49 -34 -115 -67 -197 -99 C
0 -10 5 -16 16 -16 C
83 0 155 10 217 28 C
71 26 136 59 193 100 C
79 62 147 146 205 254 C
32 61 57 121 76 182 C
11 -8 23 -19 37 -33 C
44 -44 80 -83 108 -118 C
147 -201 268 -344 364 -430 C
12 -10 39 -15 80 -15 C
96 0 206 11 330 31 C
25 3 38 8 38 17 C
0 8 -3 14 -8 16 C
-234 89 -403 171 -508 247 C
-95 67 -195 153 -299 260 C
-14 14 -26 26 -38 36 C
109 7 252 10 429 9 C
42 0 93 -2 152 -8 C
95 -5 161 -8 200 -8 C
37 0 56 11 56 32 C
0 31 -24 62 -72 92 C
-55 24 -103 36 -144 36 C
-8 0 -19 -1 -34 -3 C
-70 -11 -139 -22 -206 -32 C
13 42 29 77 49 106 C
24 34 51 61 81 81 C
14 11 22 24 22 40 C
0 18 -33 46 -98 83 C
-63 36 -102 53 -118 53 C
-35 0 -82 -5 -140 -15 C
-356 -70 -568 -105 -636 -105 C
-6 0 -8 3 -8 8 C
0 15 3 31 10 47 C
14 41 31 73 52 97 C
17 10 26 18 26 24 C
0 17 -25 48 -75 95 C
-41 33 -70 49 -85 49 C
993 557 M
8 37 20 68 35 93 C
8 19 12 33 12 44 C
0 25 -14 42 -40 51 C
57 8 120 15 188 20 C
47 6 88 9 124 9 C
21 0 32 -16 32 -48 C
0 -35 -3 -69 -8 -104 C
-7 -52 -16 -90 -28 -114 C
-6 -6 -9 -12 -10 -18 C
-88 -11 -198 -25 -330 -40 C
8 29 16 64 25 107 C
cl
WE
0.00844 288.76 103.21 WB
936 1518 N
-16 -1 -24 -7 -24 -16 C
0 -15 27 -54 83 -117 C
48 -55 87 -83 117 -83 C
42 0 64 27 64 80 C
0 23 -8 43 -22 59 C
-15 16 -47 33 -95 50 C
-49 18 -90 27 -123 27 C
1472 1310 M
-25 0 -53 -3 -85 -9 C
-125 -27 -250 -50 -374 -69 C
-111 -16 -230 -31 -358 -47 C
-6 6 -18 10 -38 13 C
-53 16 -94 24 -121 24 C
-11 0 -16 -8 -16 -24 C
0 -8 6 -21 20 -40 C
13 -16 20 -45 20 -88 C
0 -162 -16 -326 -48 -491 C
-36 -169 -99 -334 -188 -494 C
-47 -91 -107 -178 -180 -263 C
0 -5 0 -8 0 -8 C
15 0 27 2 36 6 C
103 77 185 160 245 249 C
66 107 122 233 169 378 C
20 70 37 144 52 222 C
3 -3 8 -7 15 -13 C
35 -22 60 -34 75 -34 C
0 2 7 5 22 7 C
81 24 148 41 201 52 C
55 11 90 17 105 18 C
0 -3 0 -8 0 -14 C
0 -56 -1 -104 -1 -143 C
-92 -15 -201 -31 -327 -48 C
-11 0 -16 -2 -16 -8 C
0 -8 13 -19 41 -33 C
31 -15 58 -23 79 -23 C
8 0 24 3 48 9 C
63 13 121 22 174 28 C
-2 -103 -5 -211 -9 -323 C
-4 -118 -10 -195 -17 -230 C
-3 -24 -10 -36 -20 -36 C
-26 0 -79 14 -160 40 C
-11 0 -16 -8 -16 -24 C
104 -87 164 -147 180 -179 C
10 -24 30 -37 60 -37 C
15 0 34 18 56 53 C
26 51 40 103 40 155 C
-15 144 -25 290 -29 438 C
7 -5 16 -12 26 -22 C
39 -37 71 -70 96 -99 C
130 -168 238 -288 324 -360 C
11 -8 34 -13 71 -13 C
90 0 192 11 308 31 C
24 3 36 8 36 17 C
0 4 -3 7 -8 8 C
-213 75 -367 144 -462 208 C
-47 31 -91 63 -131 95 C
24 7 70 25 138 55 C
53 22 99 39 140 51 C
23 7 35 18 35 31 C
0 24 -19 51 -57 80 C
-41 32 -70 48 -87 48 C
-9 0 -16 -6 -22 -19 C
-27 -54 -53 -94 -78 -122 C
-30 -35 -64 -67 -104 -96 C
-27 22 -62 54 -107 96 C
-33 32 -66 55 -98 69 C
-11 5 -18 8 -21 8 C
-1 21 -2 50 -2 86 C
114 13 240 19 376 18 C
21 0 32 8 32 24 C
0 26 -16 47 -46 62 C
-17 9 -33 15 -46 18 C
10 28 22 72 38 134 C
55 2 118 3 190 2 C
27 0 58 -2 93 -8 C
37 -5 62 -8 75 -8 C
32 0 48 14 48 40 C
0 16 -22 36 -66 60 C
-47 19 -76 28 -86 28 C
-39 0 -91 -4 -158 -14 C
-27 -4 -52 -8 -75 -12 C
0 2 1 3 1 3 C
7 37 29 71 68 104 C
18 16 28 29 28 39 C
0 20 -28 43 -84 71 C
-61 22 -97 33 -108 33 C
-21 0 -49 -6 -82 -20 C
-66 -20 -120 -37 -163 -49 C
6 21 13 43 22 64 C
4 9 7 16 7 21 C
0 27 -19 49 -57 64 C
-17 10 -32 18 -44 22 C
149 18 322 27 517 26 C
21 0 32 8 32 24 C
0 26 -16 47 -46 62 C
-35 18 -68 26 -98 26 C
1104 613 M
0 33 0 65 2 97 C
46 6 95 11 146 14 C
31 2 60 3 87 4 C
-10 -59 -16 -101 -18 -126 C
-5 0 -11 -1 -16 -3 C
-70 -17 -137 -31 -201 -43 C
0 11 0 30 0 57 C
662 1086 M
0 7 1 15 5 24 C
2 1 3 1 5 0 C
11 0 32 4 64 12 C
83 18 155 30 216 37 C
0 0 0 0 0 -1 C
0 -5 2 -11 7 -20 C
28 -47 45 -103 52 -168 C
-3 0 -8 -1 -14 -3 C
-56 -11 -136 -18 -241 -22 C
-30 -3 -44 -9 -44 -19 C
0 -10 14 -20 43 -28 C
26 -8 49 -12 69 -12 C
34 1 98 9 192 24 C
4 -45 6 -95 7 -152 C
-65 -8 -170 -21 -314 -38 C
-36 -3 -68 -6 -95 -8 C
19 106 35 231 48 374 C
1115 869 M
1 23 3 42 7 59 C
53 10 121 23 206 38 C
26 0 40 -13 40 -40 C
0 -15 -6 -57 -17 -125 C
-67 -9 -148 -20 -243 -33 C
1 26 3 60 7 101 C
648 374 M
-9 0 -14 -5 -16 -16 C
0 -4 2 -9 8 -17 C
38 -71 67 -118 89 -140 C
10 -12 21 -19 31 -19 C
13 0 26 8 39 22 C
11 17 17 33 17 50 C
0 30 -9 53 -27 68 C
-22 18 -53 33 -95 45 C
-17 5 -33 7 -46 7 C
952 214 M
-8 0 -31 -10 -67 -30 C
-162 -87 -285 -148 -369 -182 C
-22 -11 -45 -17 -68 -20 C
-16 0 -24 -8 -24 -24 C
0 -13 16 -34 49 -65 C
40 -31 69 -47 87 -47 C
6 0 14 6 23 17 C
66 60 123 109 171 147 C
89 71 156 126 199 166 C
10 9 15 16 15 22 C
0 11 -6 16 -16 16 C
cl
WE
0.00844 307.00 103.21 WB
1184 1454 N
-16 0 -24 -8 -24 -24 C
-40 Y
0 -21 -5 -56 -14 -103 C
-21 -79 -48 -157 -82 -234 C
-45 -97 -104 -201 -176 -311 C
0 -10 2 -16 8 -16 C
9 0 28 13 58 38 C
50 40 103 97 159 171 C
23 -16 50 -24 79 -25 C
9 0 20 2 34 5 C
68 22 122 37 163 43 C
35 6 71 8 107 8 C
48 0 72 -16 72 -48 C
0 -41 -4 -88 -11 -142 C
-14 -103 -31 -184 -51 -244 C
-21 -62 -43 -94 -66 -94 C
-11 0 -51 11 -120 32 C
-6 0 -8 -2 -8 -8 C
0 -3 3 -7 9 -12 C
30 -37 60 -94 92 -172 C
6 -16 15 -24 27 -24 C
9 0 26 7 50 20 C
30 19 52 39 66 61 C
25 28 48 80 70 156 C
22 83 42 204 59 362 C
3 24 20 52 50 85 C
6 10 9 19 9 28 C
0 17 -24 39 -71 68 C
-45 30 -72 44 -81 44 C
-10 0 -18 -1 -26 -5 C
-62 -26 -115 -43 -159 -50 C
-112 -19 -199 -31 -259 -37 C
43 69 92 161 147 277 C
4 12 12 23 25 33 C
10 12 16 24 16 38 C
0 24 -17 49 -50 75 C
-41 30 -75 45 -102 45 C
528 1398 M
-32 0 -48 -10 -48 -32 C
0 -5 2 -12 7 -21 C
30 -54 48 -119 53 -196 C
8 -82 12 -175 12 -279 C
-71 -17 -178 -30 -320 -40 C
-11 0 -16 -2 -16 -8 C
0 -5 9 -14 27 -26 C
23 -20 73 -30 149 -30 C
35 0 88 7 159 20 C
0 0 0 0 0 0 C
0 -91 -2 -180 -5 -266 C
-139 -87 -251 -152 -335 -193 C
-29 -18 -60 -29 -91 -33 C
-16 0 -24 -8 -24 -24 C
0 -13 18 -37 55 -70 C
45 -33 77 -50 97 -50 C
8 0 19 8 32 23 C
90 85 169 154 235 208 C
12 10 21 18 27 22 C
-2 -37 -5 -77 -7 -120 C
-6 -127 -14 -209 -25 -247 C
-5 -25 -15 -38 -30 -38 C
-26 0 -79 16 -160 48 C
-11 0 -16 -8 -16 -24 C
104 -97 164 -164 180 -199 C
10 -27 30 -41 60 -41 C
16 0 36 19 60 57 C
29 55 44 111 44 167 C
-4 152 -6 312 -7 479 C
60 52 109 95 147 130 C
13 12 20 23 20 31 C
0 16 -6 24 -16 24 C
-11 0 -40 -16 -89 -49 C
-24 -15 -45 -29 -63 -41 C
0 60 0 127 0 201 C
0 7 0 14 0 20 C
65 13 131 28 200 45 C
13 2 23 9 31 19 C
6 9 9 19 9 29 C
0 11 -17 24 -51 38 C
-29 7 -49 10 -61 10 C
-10 0 -22 -3 -34 -11 C
-29 -13 -59 -24 -92 -35 C
2 48 5 101 11 158 C
3 65 20 135 51 209 C
5 10 8 18 8 23 C
0 29 -20 52 -59 69 C
-49 29 -91 43 -125 43 C
1192 734 M
-9 0 -24 -6 -44 -20 C
-32 -22 -67 -36 -103 -43 C
-29 -7 -58 -12 -88 -15 C
-21 21 -44 31 -69 30 C
-22 0 -32 -8 -32 -24 C
26 -37 40 -69 40 -96 C
0 -176 0 -325 0 -448 C
0 -42 7 -81 22 -116 C
20 -49 57 -90 111 -122 C
59 -31 124 -53 196 -65 C
64 -11 169 -17 315 -17 C
61 0 126 9 195 25 C
72 20 128 51 168 93 C
22 25 33 47 33 66 C
0 13 -4 29 -11 48 C
-14 25 -23 50 -29 75 C
-12 39 -20 89 -26 149 C
-6 38 -13 56 -22 56 C
-5 0 -9 -5 -11 -16 C
-11 -91 -24 -154 -38 -189 C
-20 -53 -46 -90 -77 -111 C
-38 -27 -80 -44 -126 -50 C
-74 -12 -144 -18 -208 -18 C
-136 0 -235 13 -296 38 C
-47 20 -78 48 -92 86 C
-11 22 -16 44 -16 68 C
0 100 0 172 2 217 C
1 0 3 0 6 -1 C
11 0 41 5 91 15 C
57 12 114 18 173 18 C
4 0 7 2 8 7 C
0 8 -11 23 -32 43 C
-2 2 -3 3 -5 3 C
7 25 18 51 33 80 C
10 27 40 65 91 114 C
6 7 9 15 9 24 C
0 14 -26 36 -78 66 C
-46 20 -76 30 -90 30 C
988 396 M
1 39 5 83 13 133 C
4 26 7 49 7 69 C
26 0 56 5 92 14 C
30 7 50 10 60 10 C
10 0 16 -5 16 -16 C
0 -37 -10 -95 -28 -174 C
-24 -9 -56 -18 -97 -26 C
-27 -6 -48 -10 -63 -13 C
0 2 0 3 0 3 C
cl
WE
showpage
%%EndDocument
 @endspecial 490 1372 a fq(\(T)l(o)13 b(my)f(parents,)h(W)l(en-Ching)f(and)g
(Kang-Bow\))914 2836 y(iv)p eop
%%Page: 5 7
 bop 75 408 a fk(Contents)75 715 y fl(Abstract)1675 b(i)75 856 y(Acknowledgem\
ents)1420 b(iii)75 997 y(1)50 b(Intr)o(oduction)1503 b(1)150 1081 y fq(1.1)52
b(T)o(raditional)11 b(Approach)48 b fh(:)25 b(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f
(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h
(:)93 b fq(2)150 1166 y(1.2)52 b(Our)12 b(New)h(Approach)45 b fh(:)24 b(:)h
(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f
(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)93 b fq(4)150 1250 y(1.3)52 b(Overview)12 b
(of)g(This)h(Thesis)23 b fh(:)h(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)93 b fq(5)75
1391 y fl(2)50 b(Multilist)11 b(Scheduling)1343 b(7)150 1475 y fq(2.1)52 b
(Computational)12 b(Model)g(for)g(T)m(ask)h(Scheduling)47 b fh(:)25 b(:)f(:)h
(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)93 b fq(7)150 1560
y(2.2)52 b(General)12 b(Approach)33 b fh(:)25 b(:)f(:)h(:)f(:)h(:)f(:)g(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)g(:)h(:)68 b fq(10)150 1644 y(2.3)52 b(Multilist)12 b(Scheduling)g(Mod\
el)42 b fh(:)24 b(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(15)150 1728 y(2.4)52 b(Discuss\
ion)28 b fh(:)d(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68
b fq(17)75 1869 y fl(3)50 b(Examples)13 b(of)f(Scheduling)e(Algorithms)988 b
(19)150 1954 y fq(3.1)52 b(Main)13 b(Examples)48 b fh(:)24 b(:)h(:)f(:)h(:)f
(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(19)264 2038 y(3.1.1)61 b(Parallel)11 b
(Best-First)h(Search)39 b fh(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(20)264 2122 y(3.1.2)61
b(Parallel)11 b(Divide-and-Conquer)47 b fh(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f(:)g
(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(23)264 2206 y(3.1.\
3)61 b(Parallel)11 b(Synchronous)h(Network)g(Simulation)g fh(:)24 b(:)g(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(27)150 2291 y(3.2)52 b
(Other)12 b(Examples)h(of)f(Scheduling)g(Algorithms)46 b fh(:)25 b(:)f(:)h
(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(28)264 2375
y(3.2.1)61 b(Parallel)11 b(Loops)i(with)f(the)h(Factoring)e(T)m(echnique)46 b
fh(:)25 b(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(29)264 2459 y
(3.2.2)61 b(Parallel)11 b(Alpha-Beta)h(Search)g(with)g(Principle)g(V)-6 b(ari\
ation)12 b(Splitting)f(Algorithm)40 b(30)264 2543 y(3.2.3)61 b(Parallel)11 b
(Quicksort)h(Algorithm)43 b fh(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(32)264 2628 y(3.2.4)61 b(Paral\
lel)11 b(Asynchronous)i(Network)e(Simulation)23 b fh(:)h(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(34)150 2712 y(3.3)52 b(Discussion)28 b
fh(:)d(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq
(35)1000 2836 y(v)p eop
%%Page: 6 8
 bop -4 53 a fl(4)49 b(Implementation)12 b(Issues)1272 b(37)70 137 y fq(4.1)
53 b(Maintaining)12 b(V)m(irtual)f(Lists)52 b fh(:)24 b(:)h(:)f(:)g(:)h(:)f
(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)g(:)69 b fq(37)185 220 y(4.1.1)60 b(Standard)12 b(Protocol)35 b fh(:)24 b
(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)g(:)69 b fq(37)185 303 y(4.1.2)60 b(Global)12 b(Protoc\
ol)38 b fh(:)25 b(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g
(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)69 b fq(40)70 387 y(4.2)53 b
(Maintaining)12 b(Physical)g(Lists)21 b fh(:)j(:)h(:)f(:)g(:)h(:)f(:)h(:)f
(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)69
b fq(47)185 470 y(4.2.1)60 b(Data)13 b(Structure)e(of)h(Priority)e(Queue)k fh
(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)g(:)69 b fq(49)70 553 y(4.3)53 b(Discussion)28 b fh(:)c(:)h(:)f(:)h(:)f
(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)69 b fq(53)-4 690 y fl(5)49 b(Sele\
cted)12 b(Theor)o(etical)g(T)l(opics)1172 b(57)70 773 y fq(5.1)53 b(Communica\
tion)11 b(Complexity)h(for)g(Parallel)f(Divide-and-Conquer)16 b fh(:)24 b(:)h
(:)f(:)h(:)f(:)h(:)f(:)g(:)69 b fq(57)185 856 y(5.1.1)60 b(Summary)11 b(of)h
(Results)27 b fh(:)e(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)69 b fq(58)185 940 y(5.1.2)60 b
(A)13 b(Scheduling)e(Algorithm)g(and)i(Upper)f(Bounds)k fh(:)24 b(:)g(:)h(:)f
(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)69 b fq(64)185 1023 y(5.1.3)60 b(A)13 b
(Simpli\256ed)e(V)-6 b(ersion)12 b(of)g(Theorem)h(5.1)37 b fh(:)25 b(:)f(:)h
(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)69 b fq(67)185 1106 y
(5.1.4)60 b(Proof)11 b(of)h(Theorem)h(5.1)40 b fh(:)24 b(:)g(:)h(:)f(:)h(:)f
(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)69
b fq(72)70 1190 y(5.2)53 b(Parallel)11 b(Range)i(Selection)25 b fh(:)g(:)f
(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)g(:)69 b fq(80)185 1273 y(5.2.1)60 b(Summary)11 b(of)h
(Results)27 b fh(:)e(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)69 b fq(81)185 1356 y(5.2.2)60 b
(Key)13 b(V)-6 b(alue)13 b(Distribution)e(Lists)16 b fh(:)24 b(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)69 b fq
(84)185 1439 y(5.2.3)60 b(Combining)16 b fh(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f
(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)g(:)69 b fq(86)185 1523 y(5.2.4)60 b(T)o(ime)12 b(Complexity)
43 b fh(:)24 b(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)69 b fq(98)185 1606 y(5.2.5)60 b
(Discussion)23 b fh(:)h(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)69 b fq
(99)-4 1742 y fl(6)49 b(Experimental)12 b(Results)1268 b(101)70 1826 y fq(6.1)
53 b(Environment)23 b fh(:)i(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f
(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)g(:)44 b fq(101)70 1909 y(6.2)53 b(Fibonacci)c fh(:)24 b(:)h(:)f(:)h(:)f
(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)44 b fq(104)70 1992 y(6.3)53 b(Set)
12 b(Covering)22 b fh(:)j(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g
(:)44 b fq(106)185 2076 y(6.3.1)60 b(PDC)28 b fh(:)d(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f
(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)44 b fq(108)185 2159 y(6.3.2)60 b(PBFS)47 b fh
(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)44 b fq(111)185
2242 y(6.3.3)60 b(Global)12 b(Load)h(Balancer)g(on)f(CABs)28 b fh(:)c(:)h(:)f
(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)44 b fq
(114)185 2326 y(6.3.4)60 b(Parallel)12 b(Hybrid)f(Search)18 b fh(:)24 b(:)g
(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)g(:)44 b fq(115)70 2409 y(6.4)53 b(Summary)13 b fh(:)24 b(:)g(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)44 b fq(115)-4 2545 y
fl(7)49 b(Conclusions)1468 b(117)70 2629 y fq(7.1)53 b(Summary)13 b fh(:)24 b
(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)44 b fq(117)70
2712 y(7.2)53 b(Contributions)48 b fh(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)g(:)44 b fq(119)914 2836 y(vi)p eop
%%Page: 7 9
 bop 150 53 a fq(7.3)52 b(Future)12 b(W)l(ork)32 b fh(:)24 b(:)h(:)f(:)h(:)f
(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)43 b fq(120)75 186 y fl(A)c(User)13 b
(Interface)1419 b(121)150 268 y fq(A.1)41 b(Interface)12 b(De\256nitions)27 b
fh(:)d(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)43 b fq(121)264 351 y(A.1.1)50
b(Initializing)11 b(the)h(Multilist)g(Scheduling)g(System)22 b fh(:)i(:)h(:)f
(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)43 b fq(121)264 433 y(A.1.2)50 b
(Physical)12 b(Lists)40 b fh(:)25 b(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)43 b fq
(122)264 516 y(A.1.3)50 b(Mer)o(ging)12 b(Physical)g(Lists)h(into)f(V)m(irtua\
l)g(Lists)46 b fh(:)24 b(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h
(:)43 b fq(123)264 598 y(A.1.4)50 b(Priority)10 b(Assignment)31 b fh(:)24 b
(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)g(:)h(:)43 b fq(125)150 681 y(A.2)e(Examples)50 b fh(:)25 b
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)43 b fq(125)75 813
y fl(Bibliography)1519 b(127)986 2836 y fq(vii)p eop
%%Page: 8 10
 bop 900 2836 a fq(viii)p eop
%%Page: 9 11
 bop 75 408 a fk(List)26 b(of)f(Figur)n(es)150 658 y fq(1.1)52 b(Three)13 b
(parallel)f(programming)e(layers)j(in)f(the)g(traditional)g(approach.)42 b fh
(:)24 b(:)h(:)f(:)h(:)f(:)g(:)h(:)93 b fq(3)150 742 y(1.2)52 b(Four)12 b(para\
llel)g(programming)e(layers)j(in)f(the)g(traditional)f(approach.)26 b fh(:)f
(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)93 b fq(4)150 868 y(2.1)52 b(T)m(asks)13 b(and)
g(messages.)30 b fh(:)24 b(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)93 b fq
(7)150 952 y(2.2)52 b(Computational)12 b(model)g(for)f(task)i(scheduling.)25 b
fh(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h
(:)93 b fq(9)150 1036 y(2.3)52 b(Partitioning)11 b(an)h(SNS)g(graph)g(over)g
(four)g(processors.)21 b fh(:)k(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)g(:)h(:)68 b fq(11)150 1120 y(2.4)52 b fh(p)p fq(-list)13 b(model.)33 b
fh(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(12)150
1205 y(2.5)52 b fh(p)288 1186 y fg(2)307 1205 y fq(-list)12 b(model.)j fh(:)
24 b(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(14)150 1289
y(2.6)52 b(Multilist)12 b(scheduling)h(model.)43 b fh(:)24 b(:)g(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g
(:)h(:)68 b fq(16)150 1414 y(3.1)52 b(Scheduling)17 b(algorithm)g(for)f fj
(PBFS-GPQ)p fq(:)j(\(a\))e(using)h(one)f(GPQ)h(and)f(\(b\))g(using)h(our)264
1475 y(model.)33 b fh(:)24 b(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g
(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)g(:)h(:)68 b fq(21)150 1559 y(3.2)52 b(Scheduling)12 b(pattern)g
(for)f fj(PDC-WK)p fq(.)48 b fh(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g
(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(25)150 1643 y(3.3)
52 b(PV)-5 b(-subtrees.)34 b fh(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g
(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)g(:)h(:)68 b fq(31)150 1769 y(4.1)52 b(An)13 b(example)f(of)g(the)
g(standard)g(protocol)g(\()p fh(P)7 b(L)1094 1776 y fg(1)1125 1769 y fq(is)13
b(mer)n(ged)g(to)f fh(V)f(L)1455 1776 y fg(2)1474 1769 y fq(\).)46 b fh(:)24 b
(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(38)150 1853 y(4.2)52 b(Omitting)12 b(repor\
ts)f(based)i(on)g(given)f(priority)f(ranges.)18 b fh(:)25 b(:)f(:)g(:)h(:)f
(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(39)150 1937 y(4.3)52 b(Ind\
ivisible)12 b(ranges)g(for)g(parallel)g(ANS)g(\(no)f(report)h(when)g(the)g
(phase)h(index)f(is)h(still)f(the)264 1997 y(same\).)39 b fh(:)24 b(:)g(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(39)150 2081
y(4.4)52 b(An)13 b(example)f(for)f(the)i(GLB)g(hierarchy)l(.)38 b fh(:)25 b
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g
(:)h(:)68 b fq(43)150 2165 y(4.5)52 b(A)13 b(2-3)f(tree.)31 b fh(:)25 b(:)f
(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(50)150 2250 y
(4.6)52 b(A)13 b(2-3)f(tree,)g(showing)g(load)h(variable)f(values.)43 b fh
(:)24 b(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h
(:)68 b fq(51)150 2334 y(4.7)52 b(Updating)12 b(load)g(variables.)28 b fh(:)c
(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(53)150 2459 y(5.1)52 b(At)13 b(most)f
fh(d)h fq(frontier)e(nodes)h(at)h(each)f(level)h(on)f(a)g(processor)h(\()p fh
(d)h ff(=)f fq(3\).)23 b fh(:)i(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(65)150
2544 y(5.2)52 b(Growing)12 b(the)g(current)g(tree)g(to)g(a)h ff(\()p fh(N)r
(;)8 b(h;)g(d)p ff(\))p fq(-tree.)30 b fh(:)25 b(:)f(:)h(:)f(:)g(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq(69)150 2628 y(5.3)52 b(T)m(wo)
13 b(areas)f(in)h(the)f(constructed)g(tree.)39 b fh(:)24 b(:)h(:)f(:)h(:)f
(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)68 b fq
(70)150 2712 y(5.4)52 b(T)o(ree)12 b(construction)g(procedure.)20 b fh(:)k
(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)g(:)h(:)68 b fq(74)993 2836 y(ix)p eop
%%Page: 10 12
 bop 70 53 a fq(5.5)53 b(Three)12 b(areas)h(in)f(the)h(constructed)f(tree.)49
b fh(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)g(:)69 b fq(74)70 136 y(5.6)53 b(Around)11 b(the)i(time)f(when)
g(condition)g(C1)g(becomes)h(true.)47 b fh(:)24 b(:)g(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)h(:)f(:)g(:)69 b fq(75)70 218 y(5.7)53 b(Expanded)12 b(cross)h(nod\
es)g(corresponding)e(to)i(P)-5 b(A-independent)11 b(subtrees.)51 b fh(:)25 b
(:)f(:)h(:)f(:)g(:)69 b fq(77)70 301 y(5.8)53 b(In)12 b(stage)i(1,)g(any)f
(non-cross)g(node')l(s)h(ancestors)f(in)g(area)g(2)g(must)g(have)h(been)f(gen\
erated)185 361 y(on)f(the)g(same)h(processor)m(.)27 b fh(:)d(:)h(:)f(:)h(:)f
(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)g(:)69 b fq(78)70 444 y(5.9)53 b(\(a\))15 b(A)h(key)f(value)h
(distribution)f(in)g(the)h(processor)g(subtree)g ff(\000)1293 451 y fe(i)1307
444 y fq(,)h(showing)f(a)g(KVD)g(list)185 504 y fh(\025)213 511 y fe(i)245 504
y fq(\(containing)g(\256ve)h(items\))g(which)g(is)g(2-deviant,)h(given)f fh
(M)26 b ff(=)21 b fq(9.)32 b(\(b\))17 b(Simpli\256ed)185 564 y(diagram)10 b
(to)h(show)h(the)f(possible)g(range)g(of)g fh(N)986 571 y fe(i)1000 564 y ff
(\()p fh(\031)q ff(\))p fq(,)h(given)f(the)g(2-deviant)f(KVD)h(list)h(in)f
(\(a\).)27 b(85)70 647 y(5.10)h(A)8 b(key)g(value)f(distribution)g(in)h(the)g
(processor)f(subtree)h ff(\000)1158 654 y fe(i)1173 647 y fq(,)h(showing)f
(the)g(2-deviant)f(KVD)185 707 y(list)i fh(\025)283 714 y fe(i)306 707 y fq
(\(containing)f(\256ve)h(items\))g(which)f(is)i(generated)e(by)h(the)g(Create)
g(Algorithm,)g(given)185 767 y fh(M)19 b ff(=)14 b fq(9.)g fh(:)25 b(:)f(:)g
(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)69 b fq(88)70 849 y
(5.11)28 b(An)12 b(example)g(of)g(the)h(mer)n(ge)g(operation)e(from)h fh(\025)
1041 856 y fe(l)1066 849 y fq(and)h fh(\025)1179 856 y fe(r)1211 849 y fq(int\
o)f fh(\025)1329 856 y fe(i)1343 849 y fq(,)h(given)f fh(M)19 b ff(=)14 b fq
(9.)i fh(:)24 b(:)g(:)69 b fq(91)70 932 y(5.12)28 b(An)12 b(example)g(of)g
(examining)g(property)f(V2.)38 b fh(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)69 b fq(93)70 1014 y(5.13)28 b(An)
12 b(example)g(of)g(removing)g(items.)37 b fh(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)69 b fq
(94)70 1097 y(5.14)28 b(\(a\))11 b(Removing)g(those)g(items)h(with)f(prioriti\
es)g(lower)g(than)g fh(M)s(=p)p ff(\(=)j fq(9)p fh(=)p fq(4)p ff(\))p fq(.)k
(\(b\))11 b(Increas-)185 1157 y(ing)h(the)g(key)h(values)f(less)i(than)e fh
(\031)772 1164 y fe(i)p fg(1)815 1157 y fq(to)g fh(\031)894 1164 y fe(i)p fg
(1)924 1157 y fq(.)33 b fh(:)25 b(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)69 b fq(96)70 1281 y(6.1)53 b(The)13 b(Nec\
tar)f(system.)j fh(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)44 b fq
(102)70 1364 y(6.2)53 b(GLB)13 b(trees)f(for)g(\(a\))g(one,)g(\(b\))g(two,)h
(\(c\))e(four)m(,)i(and)g(\(d\))e(eight)h(processors.)37 b fh(:)24 b(:)h(:)f
(:)h(:)f(:)g(:)44 b fq(103)70 1446 y(6.3)53 b(The)13 b(computation)e(tree)h
(for)g fh(F)6 b ff(\()p fq(3)p ff(\))p fq(.)47 b fh(:)24 b(:)h(:)f(:)h(:)f
(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)44
b fq(104)70 1529 y(6.4)53 b(Speedups)12 b(for)g(Problems)f(1-4)h(with)g(PDC.)
21 b fh(:)k(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)g(:)44 b fq(109)70 1611 y(6.5)53 b(Speedups)12 b(for)g(Problems)f
(1-4)h(with)g(PBFS.)40 b fh(:)24 b(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)44 b fq(112)70 1694 y(6.6)53 b(Ef)o(\256ci\
encies)13 b(with)f(PDC)g(\(installing)f(GLB)i(on)g(CABs\))31 b fh(:)25 b(:)f
(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)44 b fq(113)70 1776 y(6.7)
53 b(Ef)o(\256ciencies)13 b(with)f(PBFS)f(\(installing)h(GLB)h(on)f(CABs\))51
b fh(:)24 b(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)44 b fq(113)70
1859 y(6.8)53 b(Performance)11 b(results)h(for)g(parallel)g(hybrid)f(search.)
k fh(:)25 b(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)44 b
fq(114)70 1983 y(A.1)e(The)13 b(code)f(for)g(the)g fj(PBFS-GPQ)i fq(schedulin\
g)e(algorithm.)31 b fh(:)24 b(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g
(:)44 b fq(126)70 2065 y(A.2)e(The)13 b(code)f(for)g(the)g fj(PDC-WK)h fq(sch\
eduling)g(algorithm.)36 b fh(:)25 b(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f
(:)h(:)f(:)g(:)44 b fq(126)921 2836 y(x)p eop
%%Page: 11 13
 bop 75 408 a fk(List)26 b(of)f(T)-9 b(ables)150 656 y fq(6.1)52 b(The)17 b
(total)f(times)g(\(in)g(seconds\))g(and)g(simple)g(speedups/ef\256ciencies)g
(for)f(parallel)h(Fi-)264 717 y(bonacci.)41 b fh(:)24 b(:)h(:)f(:)h(:)f(:)h
(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f
(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)43 b fq(105)150 799 y(6.2)52 b(Mea\
sured)15 b(performance)d(results)i(for)g(the)f(PDC)h(scheduling)g(algorithm)f
(\()p fh(T)6 b fq(:)21 b(T)n(ime)14 b(in)264 859 y(seconds,)g fh(S)s fq(:)k
(speedup,)13 b(and)f fh(E)s fq(:)18 b(ef)o(\256ciency\).)46 b fh(:)24 b(:)h
(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)43 b fq
(109)150 942 y(6.3)52 b(A)m(veraged)20 b(scheduling)g(overhead)g(in)g(seconds)
i(when)e(using)g(the)h(PDC)f(scheduling)264 1002 y(algorithm.)39 b fh(:)25 b
(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h
(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h(:)43 b fq(109)150
1084 y(6.4)52 b(Number)12 b(of)g(sends/receive)h(pairs)f(for)g(the)g(PDC)g
(scheduling)h(algorithm.)h fh(:)25 b(:)f(:)h(:)f(:)g(:)h(:)43 b fq(110)150
1167 y(6.5)52 b(A)m(verage)12 b(idle)g(times)g(\(in)g(seconds\))h(when)f(usin\
g)h(the)f(PDC)g(scheduling)h(algorithm.)j fh(:)25 b(:)43 b fq(111)150 1249 y
(6.6)52 b(Measured)13 b(performance)e(results)h(for)f(the)h(PBFS)g(scheduling)
g(algorithm)f(\()p fh(T)6 b fq(:)18 b(T)n(ime)12 b(in)264 1310 y(seconds,)i fh
(S)s fq(:)k(speedup,)13 b(and)f fh(E)s fq(:)18 b(ef)o(\256ciency\).)46 b fh
(:)24 b(:)h(:)f(:)h(:)f(:)g(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)h(:)f(:)g(:)h
(:)43 b fq(111)150 1392 y(6.7)52 b(Measured)12 b(Number)f(of)g(sends/receives)
i(when)e(using)h(the)f(PBFS)g(scheduling)h(algorithm.)q(112)993 2836 y(xi)p
eop
%%Page: 12 14
 bop 907 2836 a fq(xii)p eop
%%Page: 1 15
 bop 75 490 a fk(Chapter)25 b(1)75 802 y(Intr)n(oduction)75 1113 y fq(Paralle\
l)8 b(programming)f(requires)i(task)g(scheduling)f(to)h(optimize)f(performanc\
e;)h(this)g(primarily)e(involves)75 1191 y(balancing)20 b(the)g(load)g(over)g
(the)h(processors.)42 b(T)m(ask)21 b(scheduling)f(can)g(be)h(classi\256ed)g
(into)e fj(static)i(task)75 1269 y(scheduling)7 b fq(or)g fj(dynamic)h(task)f
(scheduling)p fq(,)i(according)e(to)g(the)h(time)f(when)g(task)h(scheduling)f
(is)h(performed.)75 1348 y(Static)17 b(task)h(scheduling)g(is)g(typically)f
(done)g(by)h(distributing)e(the)i(load)f(of)g(tasks)i(evenly)e(\(or)g(roughly)
75 1426 y(evenly\))9 b(over)h(processors)g(at)g(the)g(beginning)f(of)h(the)g
(job.)17 b(This)11 b(can)f(be)g(done)g(with)f(the)h(help)g(of)g(compilers)75
1504 y([39)o(,)j(80,)g(100].)18 b(However)m(,)13 b(in)f(many)h(cases,)h(it)e
(is)g(critical)g(to)g(perform)f(task)i(scheduling)f(at)h(runtime:)148 1714 y
fi(\017)24 b fq(In)13 b(many)g(parallel)f(applications,)i(the)f(task)g(load)g
(cannot)g(be)g(accurately)g(predicted)g fj(a)g(priori)p fq(.)21 b(For)197 1792
y(example,)14 b(in)g(mathematical)f(optimization)g(problems)g([35,)h(76],)g
(which)g(usually)f(involve)h(lar)n(ge-)197 1871 y(scale)g(tree)f(searching,)h
(it)f(is)g(impossible)g(to)g(make)h(useful)f fj(a)g(priori)h fq(estimates)f
(on)g(the)h(size)f(of)g(the)197 1949 y(search)g(tree)f(or)g(the)g(sizes)h(of)
f(its)h(nodes.)148 2098 y fi(\017)24 b fq(In)d fj(network-based)h(multicomput\
ers)885 2080 y fg(1)904 2098 y fq(,)i(the)e(computational)e(power)i(of)f(each)
h(processor)f(may)197 2176 y(not)d(remain)f(constant.)36 b(For)17 b(example,)
j(in)e(a)g(network-based)g(multicomputer)l(,)i(someone)e(may)197 2254 y(unexp\
ectedly)d(come)g(to)h(work)f(on)g(one)g(of)g(the)h(participating)e(workstatio\
ns,)i(slowing)g(it)f(down.)197 2333 y(Static)g(task)g(scheduling)h(\(or)e(sta\
tic)h(load)h(balancing\))e(cannot)h(balance)h(the)f(load)g(well)g(in)g(such)h
(a)197 2411 y(situation.)75 2469 y 750 2 v 133 2500 a fd(1)150 2515 y fn(A)f
(network-based)f(multicomputer)f(is)i(a)g(number)g(of)g(computers)g(\(e.g.,)i
(workstations\),)d(connected)i(via)e(a)i(network,)75 2580 y(cooperating)11 b
(on)g(the)g(same)i(job.)19 b(As)12 b(networks)f(have)h(grown)f(more)h(ef)o
(\256cient,)g(network-based)f(multicomputers)g([61)o(])h(have)75 2644 y(recen\
tly)c(emer)q(ged)g(as)i(a)f(new)g(and)g(attractive)f(type)g(of)h(parallel)f
(system)h(due)g(to)f(resource)h(sharing)f(which)g(results)g(in)h(\257exibilit\
y)75 2709 y(and)h(low)g(cost.)15 b(W)m(e)c(expect)g(more)f(and)h(more)f(appli\
cations)f(to)h(run)g(on)g(such)g(multicomputers.)1000 2836 y fq(1)p eop
%%Page: 2 16
 bop 69 53 a fq(W)l(e)11 b(will)g(\256rst)f(describe)i(the)f(traditional)f
(approach)g(to)h(dynamic)g(task)h(scheduling)f(\(or)f(dynamic)h(load)-4 132 y
(balancing\))16 b(and)h(point)f(out)h(the)g(problem)f(of)g(the)h(approach)g
(in)g(Section)f(1.1.)33 b(Then,)19 b(we)e(will)f(brie\257y)-4 210 y(describe)
e(our)g(new)h(approach)f(in)g(Section)g(1.2.)26 b(Finally)-5 b(,)16 b(we)f
(will)f(give)g(an)h(overview)f(of)g(this)h(thesis)g(in)-4 288 y(Section)c(1.3\
.)-4 552 y ft(1.1)70 b(T)-5 b(raditional)19 b(Appr)o(oach)-4 748 y fq(The)c
(traditional)e(approach)i(to)f(dynamic)h(scheduling)f(is)h fj(ad)g(hoc)p fq
(:)22 b(for)14 b(each)h(application)f(or)h(each)g(class)-4 826 y(of)c(applica\
tions,)i(a)g(task)f(scheduling)h(algorithm)e(is)i(implemented)e(from)g(scratc\
h.)19 b(For)12 b(example:)68 1022 y fi(\017)24 b fq(For)12 b(a)g(lar)o(ge)g
(class)h(of)f(applications)g(which)g(can)g(be)h(solved)f(without)f(concern)h
(for)g(the)g(scheduling)117 1101 y(sequence)i(of)e(executable)g(tasks,)i(many)
e(researchers)h([31)o(,)g(67,)g(89,)g(107])f(have)h(proposed)f(various)117
1179 y(load)h(balancing)f(techniques)g(to)h(ef)n(\256ciently)f(parallelize)g
(the)g(applications.)68 1298 y fi(\017)24 b fq(For)e(tree)f(search)h(problems)
g(\(e.g.,)j fj(divide-and-conquer)c fq(\()p fj(D&C)p fq(\))g(problems\))g(whi\
ch)g(can)h(be)117 1376 y(ef)o(\256ciently)15 b(solved)h(by)g(using)g fj(depth\
-\256rst)g(sear)o(ch)g fq(\()p fj(DFS)p fq(\),)g(many)f(researchers)h([32)o
(,)h(33,)f(34,)g(44,)117 1454 y(82,)c(104,)f(105,)g(108])g(have)g(proposed)g
(scheduling)f(algorithms)h(which)f(can)i(reduce)f(the)f(amount)h(of)117 1533 y
(communication)h(while)g(balancing)g(the)g(load.)68 1652 y fi(\017)24 b fq
(For)10 b(tree)g(search)g(problems)g(which)g(can)g(be)g(ef)o(\256ciently)g
(solved)g(by)g(using)g fj(best-\256rst)h(sear)o(ch)f fq(\()p fj(BFS)p fq(\),)
117 1730 y(several)18 b(researchers)f([1,)h(5,)g(46)o(,)g(60,)g(76,)g(81)o
(,)g(101,)g(108])f(have)g(proposed)g(ways)h(to)f(parallelize)117 1808 y(BFS.)
68 1927 y fi(\017)24 b fq(For)15 b(game)h(tree)f(search)h(problems)f(which)h
(can)g(be)g(solved)f(by)h(using)g(alpha-beta)f(\()p fh(\013)p fq(-)p fh(\014)
r fq(\))g(search,)117 2005 y(researchers)g(have)g(proposed)f(many)g(dif)o(fer\
ent)f(kinds)i(of)f(parallel)g(scheduling)g(algorithms,)h(e.g.,)117 2084 y(the)
e fj(mandatory)f(work)h(\256rst)g fq(algorithm)e([4)o(],)h(the)h fj(principle)
f(variation)g(splitting)g fq(\()p fj(PVS)p fq(\))g(algorithm)117 2162 y([21,)
h(69],)f(and)g(other)g(variations)g([11,)g(45,)h(87].)68 2281 y fi(\017)24 b
fq(For)8 b(scienti\256c)h(applications)f(with)g(parallel)g(loops,)i(researche\
rs)f(have)f(proposed)h(ef)n(\256cient)g(runtime)117 2359 y(scheduling)j(algor\
ithms)e(using)h(the)g(following)f(techniques:)18 b(factoring)10 b(scheduling)
h([48)o(],)h(guided)117 2437 y(self-scheduling)g([78],)g(and)h(phase-based)f
(scheduling)h([70)o(].)69 2634 y(T)m(o)18 b(facilitate)f(comparison)h(with)g
(our)g(new)g(approach,)i(we)e(present)h(the)f(traditional)f(approach)h(in)-4
2712 y(terms)8 b(of)h(programming)e(layers,)j(as)g(illustrated)e(in)h(Figure)
f(1.1.)18 b(W)l(e)9 b(separate)g(application)f(programs)h(and)921 2836 y(2)p
eop
%%Page: 3 17
 bop 75 642 a @beginspecial @setspecial
%%BeginDocument: fig/3layers.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 2 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
1 12 /Symbol FMDEFINEFONT
612 792 0 FMBEGINPAGE
0 F
0 X
0 K
(Network Interface \050e.g., PVM\051) 85.79 15.66 T
(Network Interface Layer) 309.86 15.47 T
(Application Layer) 340.8 78.99 T
(Scheduling Layer) 343.46 49.42 T
(D&C) 141.98 132.05 T
(BFS) 69.44 132.05 T
(Parallel Loops) 233.01 116.82 T
1 F
(a-b) 184.11 132.05 T
28.8 71.36 426.47 71.36 2 L
0.5 H
2 Z
10 X
N
199.8 71.36 226.8 98.36 R
7 X
V
0 X
N
163.8 71.36 190.8 98.36 R
7 X
V
0 X
N
127.8 71.36 154.8 98.36 R
7 X
V
0 X
N
91.8 71.36 118.8 98.36 R
7 X
V
0 X
N
28.8 34.2 429.8 34.2 2 L
10 X
N
37.8 7.2 37.8 34.2 280.8 34.2 280.8 7.2 4 L
0 X
N
106.52 110.73 104.96 98.37 99.74 109.68 103.13 110.21 4 Y
V
24 90 18 27 86.97 98.36 A
145.22 110.48 140.3 99.22 138.5 111.37 141.86 110.92 4 Y
V
111 158 18 28.78 158.3 99.2 A
181.88 110.46 176.96 99.21 175.18 111.35 178.53 110.91 4 Y
V
108 158 18 28.75 194.97 99.2 A
219.17 109.43 212.62 99.23 212.77 111.35 215.97 110.39 4 Y
V
90 147 18 19.5 230.63 99.2 A
0 F
(...) 236.14 51.99 T
(...) 235.14 81.99 T
199.8 34.2 226.8 70.7 R
N
163.8 34.2 190.8 70.7 R
N
127.8 34.2 154.8 70.7 R
N
91.8 34.2 118.8 70.7 R
N
FMENDPAGE
%%EndDocument
 @endspecial 273 718 a fq(Figure)12 b(1.1:)18 b(Three)12 b(parallel)g(program\
ming)f(layers)h(in)g(the)h(traditional)e(approach.)75 923 y(scheduling)h(prog\
rams)g(into)g(two)g(dif)n(ferent)g(programming)f(layers,)h(the)h fj(applicati\
on)e(layer)i fq(\(high)f(level\))75 1002 y(and)k(the)h fj(scheduling)f(layer)
h fq(\(low)f(level\),)h(respectively)m(.)30 b(The)17 b(application)f(layer)g
(is)h(for)e(applications;)75 1080 y(the)21 b(scheduling)f(layer)g(is)h(for)f
(parallel)g(scheduling)h(algorithms,)h(with)e(each)h(algorithm)f(supporting)
75 1158 y(one)e(application)g(or)g(a)h(class)g(of)f(applications.)36 b(Progra\
mmers)17 b(in)h(the)h(application)f(layer)g(are)g(called)75 1236 y fj(applica\
tion)h(pr)n(ogrammers)i fq(\(they)e(are)g(not)h(expected)g(to)f(design)h(para\
llel)f(scheduling)g(algorithms\);)75 1315 y(programmers)c(in)h(the)h(scheduli\
ng)f(layer)g(are)h(called)f fj(scheduling)h(pr)n(ogrammers)p fq(.)32 b(In)16 b
(addition)g(to)g(the)75 1393 y(above)21 b(two)h(layers,)i(the)d fj(network)h
(interface)g(layer)g fq(provides)f(a)h(general)f(mechanism)g(for)g(network)75
1471 y(communication)9 b(and)h(supports)f(an)h(interface)f(for)g(the)h(schedu\
ling)f(layer)h(to)f(access)i(the)f(network)f(system.)75 1549 y(For)e(example,)
i(PVM)e([37],)i(Express)f([49)o(],)h(iPSC)e(primitives[50)o(],)h(Nectarine)g
([95)o(],)h(and)e(socket)h(packages)75 1628 y(for)g(TCP/IP)g([65)o(])g(would)
g(reside)h(in)f(the)g(network)g(interface)g(layer)m(.)17 b(Programmers)7 b
(in)h(this)h(layer)f(are)g(called)75 1706 y fj(system)13 b(designers)p fq(.)
19 b(Note)12 b(that)f(in)h(the)g(rest)g(of)f(this)h(thesis)g(when)g(we)g(refe\
r)f(to)h(a)g(generic)f(\252programmer\272,)75 1784 y(we)i(will)e(mean)i(the)f
(scheduling)g(programmer)l(.)148 1929 y(The)e(traditional)e(approach)g(has)i
(a)f(serious)g(problem:)15 b(it)9 b(requires)g(a)g(lar)o(ge)g(ef)n(fort)f(to)
h(implement)f(any)i(of)75 2008 y(these)j(dynamic)f(scheduling)h(algorithms.)
18 b(In)12 b(order)g(to)g(implement)g(a)h(dynamic)f(scheduling)h(algorithm,)
75 2086 y(the)22 b(programmer)e(usually)i(needs)g(to)g(write)f(the)h(details)
g(of)g(supportive)f(scheduling)h(routines,)i(e.g,)75 2164 y(those)12 b(for)e
(maintaining)g(task)i(lists)g(and)f(handling)f(interprocessor)h(communication)
f(for)h(load)g(balancing.)75 2242 y(Unfortunately)-5 b(,)17 b(it)d(is)i(very)
f(dif)n(\256cult)g(and)g(time-consuming)f(to)h(write)f(and)h(to)g(debug)g(the\
se)h(supportive)75 2321 y(routines.)30 b(\(Note)16 b(that)g(concurrent)g(debu\
gging,)h(in)f(particular)m(,)i(is)f(clearly)f(much)g(more)g(dif)n(\256cult)g
(than)75 2399 y(sequential)h(debugging,)h(due)e(to)h(nondeterminism.\))30 b
(For)16 b(example,)j(when)d(we)h(were)g(parallelizing)f(a)75 2477 y(solid)d
(modeling)f(program)g(\(called)g(Noodles)h([23]\))f(based)i(on)e(a)h(simple)g
(load)g(balancing)g(strategy)g([31)o(],)75 2555 y(it)20 b(took)g(us)g(months)
g(to)g(write)g(thousands)g(of)g(lines)g(of)g(load-balancing)f(code)h(in)g(C.)
h(From)e(this,)k(we)75 2634 y(understand)16 b(that)h(it)f(is)h(extremely)f
(important)g(to)g(provide)g(a)h fj(general)g fq(scheduling)f(system)h(which)g
(can)75 2712 y(hide)12 b(these)g(supportive)f(scheduling)g(operations)g(from)
g(the)h(programmer)e(such)i(that)f(programmers)f(only)1000 2836 y(3)p eop
%%Page: 4 18
 bop -4 53 a fq(need)12 b(to)g(focus)h(on)f(the)g(speci\256cation)g(of)g(the)
h(scheduling)f(policies.)-4 321 y ft(1.2)70 b(Our)18 b(New)g(Approach)-4 519 y
fq(Recently)l(,)12 b(researchers)e(have)h(begun)g(to)f(notice)g(that)h(these)
g(supportive)f(scheduling)g(operations)g(are)h(very)-4 597 y(similar)g(among)
h(many)f(scheduling)h(algorithms.)18 b(In)11 b(response,)i(some)g(systems)f
(have)h(begun)e(to)h(provide)-4 675 y(greater)j(generality)h(with)g(high-leve\
l)f(interfaces.)30 b(For)15 b(tree)h(search)h(problems,)34 b(W)n(u)17 b([103)
o(])f(proposed)-4 753 y(a)f(parallel)h(programming)e(system,)j(called)f fj
(dual-priority)f(task)i(scheduling)e fq(\(an)h(early)f(version)h(of)f(our)-4
832 y(present)d(system\),)h(which)g(supports)f(\257exible)g(scheduling)h(algo\
rithms)f(for)g(most)g(tree)h(search)g(problems.)-4 910 y(In)i(addition,)i(Nis\
hikawa)f(and)g(Steenkiste)f([70,)h(71])g(proposed)f(the)h(Aroma)f(language)h
(\(mainly)f(based)-4 988 y(on)g(phase-scheduling\))f(which)h(of)o(fers)g(a)g
(range)g(of)g(scheduling)g(algorithms)f(to)h(cover)g(many)g(scienti\256c)-4
1066 y(applications.)j(Still,)12 b(none)g(of)g(the)g(above)h(have)f(been)h
(claimed)f(to)g(be)g(general.)-4 1828 y @beginspecial @setspecial
%%BeginDocument: fig/4layers.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 2 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
1 12 /Symbol FMDEFINEFONT
612 792 0 FMBEGINPAGE
24.93 34.4 436.6 34.4 2 L
0.5 H
2 Z
10 X
0 K
N
0 F
0 X
(Network Interface \050e.g., PVM\051) 85.06 13.4 T
(Network Interface Layer) 312.16 15.66 T
(Application Layer) 343.1 96.49 T
(Scheduling Layer) 345.76 69.54 T
25.2 88.03 436.87 88.03 2 L
10 X
N
198.56 60.86 225.56 88.03 R
0 X
N
198.56 88.03 225.56 115.03 R
N
161.56 60.86 188.56 88.03 R
N
161.56 88.03 188.56 115.03 R
N
125.56 60.86 152.56 88.03 R
N
125.56 88.03 152.56 115.03 R
N
89.56 60.86 116.56 88.03 R
N
89.56 88.03 116.56 115.03 R
N
37.56 7.2 37.56 34.2 277.2 34.2 277.2 7.2 4 L
N
25.2 61.03 436.87 61.03 2 L
10 X
N
0 X
(Scheduling Support Layer) 304.78 42.6 T
52.2 34.2 268.2 61.03 R
7 X
V
0 X
N
(Multilist Scheduling) 109.13 42.22 T
(D&C) 138.71 148.38 T
(BFS) 61.83 149.38 T
(Parallel Loops) 230.74 133.16 T
1 F
(a-b) 180.84 148.38 T
103.26 127.06 101.7 114.7 96.47 126.01 99.86 126.54 4 Y
V
24 90 18 27 83.7 114.7 A
141.95 126.81 137.03 115.55 135.24 127.71 138.59 127.26 4 Y
V
111 158 18 28.78 155.03 115.53 A
178.62 126.79 173.7 115.54 171.91 127.69 175.26 127.24 4 Y
V
108 158 18 28.75 191.7 115.53 A
216.9 125.76 210.36 115.56 210.5 127.68 213.7 126.72 4 Y
V
90 147 18 19.5 228.37 115.53 A
0 F
(...) 228.87 74.99 T
(...) 229.4 99.8 T
FMENDPAGE
%%EndDocument
 @endspecial 205 1904 a(Figure)f(1.2:)18 b(Four)12 b(parallel)g(programming)e
(layers)j(in)f(the)g(traditional)f(approach.)69 2043 y(In)k(this)i(thesis,)h
(we)e(will)g(propose)f(a)i(general)f(approach)f(which)h(can)h(greatly)e(reduc\
e)h(the)g(ef)o(fort)f(of)-4 2122 y(developing)10 b(dynamic)h(scheduling)g(rou\
tines.)17 b(In)11 b(our)f(new)h(approach,)h(we)f(decompose)g(task)h(schedulin\
g)-4 2200 y(into)f(two)g(parts)h(\320)g(the)f(speci\256cation)h(of)f(scheduli\
ng)h(policies)g(and)g(the)f(implementation)g(of)g(supportive)-4 2278 y(schedu\
ling)h(operations)h(\320)g(and)g(then)g(hide)g(the)g(latter)f(from)g(the)h
(programmer)-5 b(.)21 b(W)l(e)13 b(call)g(this)g(approach)-4 2356 y fj(multil\
ist)g(scheduling)389 2338 y fg(2)408 2356 y fq(,)i(because)g(it)f(is)g(based)
h(on)f(a)g(uniform)f(scheduling)h(model)g(involving)f(the)h(use)h(of)-4 2404 y
750 2 v 54 2435 a fd(2)70 2450 y fn(In)10 b(the)h(area)g(of)f(compiler)g(desi\
gn,)h fm(list)e(scheduling)g fn([2,)i(59)o(])g(is)f(a)h(common)g(technique)f
(in)g(which)f(a)i(heuristic)f(function)f(is)-4 2515 y(used)h(to)f(indicate)h
(the)g(execution)g(sequence)h(of)f(tasks)g(\(or)g(instructions\))e(in)h(a)i
(scheduling)e(list.)14 b(Our)c(system)h(is)f(similar)f(to)h(list)-4 2580 y
(scheduling)g(in)i(this)f(sense.)21 b(However)n(,)13 b(the)f(list)f(schedulin\
g)g(technique)g(used)h(by)g(compilers)f(usually)g(sorts)h(the)g(scheduling)-4
2644 y(list)d(before)j(scheduling)e(tasks)h(from)g(it,)g(while)f(our)h(multil\
ist)d(scheduling)i(system)i(inserts)e(tasks)i(into)d(or)i(deletes)h(tasks)f
(from)-4 2709 y(scheduling)e(lists)g(at)h(runtime.)921 2836 y fq(4)p eop
%%Page: 5 19
 bop 75 53 a fq(multiple)11 b(scheduling)h(lists.)18 b(In)11 b(the)h(multilis\
t)f(scheduling)h(model,)g(programmers)e(only)i(need)g(to)f(specify)75 132 y
(scheduling)d(policies)h(based)g(on)f(scheduling)h(lists.)17 b(The)9 b(suppor\
tive)f(routines)g(for)g(the)g(implementation)g(of)75 210 y(scheduling)j(lists)
h(are)f(moved)g(into)g(the)h(system)g(and)f(hidden)g(from)f(the)i(programmer)
-5 b(.)18 b(These)13 b(supportive)75 288 y(routines)k(from)g(the)g(scheduling)
h(layer)f(form)g(a)h(new)f(layer)h(called)f(the)h fj(scheduling)f(support)h
(layer)h fq(as)75 366 y(shown)g(in)f(Figure)g(1.2.)37 b(In)18 b(the)g(past,)j
(the)e(scheduling)f(programmers)f(had)i(to)f(write)g(the)h(supportive)75 445 y
(routines;)12 b(now)l(,)h(this)g(will)f(be)g(the)g(responsibility)g(of)g(the)
g(system)h(designer)m(.)75 708 y ft(1.3)71 b(Overview)18 b(of)h(This)f(Thesis)
75 905 y fq(Chapter)13 b(2)f(will)h(describe)f(our)h(multilist)f(scheduling)g
(model)h(in)f(greater)g(detail)h(and)g(will)f(also)h(show)g(the)75 983 y(gene\
rality)j(of)g(the)g(model.)30 b(Chapter)16 b(3)g(will)g(illustrate)g(the)g
(generality)g(and)g(simplicity)g(of)g(the)g(model)75 1061 y(by)h(implementing)
f(several)i(interesting)f(scheduling)g(algorithms,)h(such)g(as)g(parallel)e
(D&C)i(and)f(BFS,)75 1140 y(based)e(on)g(the)g(model.)50 b(Chapter)15 b(4)g
(will)f(describe)h(the)g(current)e(implementation)h(and)h(will)f(show)h(that)
75 1218 y(our)g(general)h(approach)f(incurs)g(no)h(signi\256cant)f(performanc\
e)g(overhead)g(at)h(least)g(in)g(these)g(two)f(cases.)75 1296 y(Chapter)f(5)g
(will)f(present)h(some)g(theoretical)f(results)h(which)g(we)g(have)g(obtained)
g(while)f(developing)h(our)75 1374 y(model.)j(Since)10 b(these)g(theoretical)
f(results)i(have)f(no)f(strong)h(relation)f(to)h(the)g(rest)g(of)f(this)h(the\
sis,)i(the)e(reader)75 1453 y(may)h(skip)g(this)g(chapter)g(without)f(loss)h
(of)g(continuity)l(.)18 b(Chapter)11 b(6)g(will)f(demonstrate)h(good)f(perfor\
mance)75 1531 y(results)f(for)f(some)i(applications)f(that)g(are)g(based)g
(on)g(the)g(parallel)g(D&C)g(and)g(the)g(parallel)f(BFS)h(scheduling)75 1609 y
(algorithms,)k(such)h(as)g(the)g(set)f(covering)g(problem.)21 b(Chapter)13 b
(7)g(will)h(give)f(our)g(conclusions.)22 b(Appendix)75 1687 y(A)12 b(will)g
(de\256ne)h(the)f(user)g(interface)g(for)g(our)f(multilist)h(scheduling)g(mod\
el.)1000 2836 y(5)p eop
%%Page: 6 20
 bop 921 2836 a fq(6)p eop
%%Page: 7 21
 bop 75 490 a fk(Chapter)25 b(2)75 802 y(Multilist)f(Scheduling)75 1113 y fq
(In)14 b(Section)g(2.1,)i(we)f(will)f(de\256ne)g(a)h(computational)f(model)g
(for)f(task)i(scheduling.)25 b(In)14 b(Section)g(2.2,)i(we)75 1191 y(will)c
(give)h(a)g(general)f(introduction)g(to)g(the)h(multilist)f(scheduling)g(appr\
oach.)20 b(The)13 b(model)f(based)h(on)g(this)75 1269 y(new)i(approach)g(will)
f(be)i(formally)d(de\256ned)i(in)g(Section)g(2.3.)26 b(Finally)l(,)17 b(we)e
(will)f(discuss)i(this)g(model)e(in)75 1348 y(Section)e(2.4.)75 1703 y ft(2.1)
71 b(Computational)19 b(Model)f(for)h(T)-7 b(ask)19 b(Scheduling)75 2625 y
@beginspecial @setspecial
%%BeginDocument: fig/taskgraph.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 3 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
1 12 /ZapfChancery-MediumItalic FMDEFINEFONT
2 10 /ZapfChancery-MediumItalic FMDEFINEFONT
612 792 0 FMBEGINPAGE
202.79 97.47 190.79 97.22 200.84 103.79 201.81 100.63 4 Y
0 X
0 K
V
298.8 129.6 200.87 100.31 2 L
0.5 H
2 Z
N
331.59 107.09 338.4 97.21 327.39 101.98 329.49 104.54 4 Y
V
298.8 129.6 330.27 103.89 2 L
N
197.71 108.73 194.4 97.2 191.09 108.73 194.4 108.73 4 Y
V
194.4 129.6 194.4 107.73 2 L
N
0 F
(task ) 178.04 138.7 T
1 F
(T) 200.36 138.7 T
2 F
(1) 206.36 135.7 T
158.4 129.6 230.4 158.4 R
N
0 F
(Message ) 127.76 109.88 T
1 F
(M) 172.73 109.88 T
2 F
(1) 182.8 106.88 T
1 F
(M) 115.13 55.88 T
2 F
(4) 125.2 52.88 T
1 F
(M) 176.33 48.68 T
2 F
(5) 186.4 45.68 T
1 F
(M) 266.33 42.27 T
2 F
(6) 276.4 39.27 T
1 F
(M) 344.28 43.57 T
2 F
(7) 354.35 40.57 T
1 F
(T) 289.55 138.7 T
2 F
(2) 295.55 135.7 T
262.8 129.6 334.8 158.4 R
N
1 F
(T) 185.15 77.5 T
2 F
(3) 191.15 74.5 T
158.4 68.4 230.4 97.2 R
N
1 F
(T) 185.15 16.3 T
2 F
(6) 191.15 13.3 T
158.4 7.2 230.4 36 R
N
1 F
(T) 80.75 16.3 T
2 F
(5) 86.75 13.3 T
54 7.2 126 36 R
N
1 F
(T) 329.15 77.5 T
2 F
(4) 335.15 74.5 T
302.4 68.4 374.4 97.2 R
N
197.71 47.53 194.4 36 191.09 47.53 194.4 47.53 4 Y
V
194.4 68.4 194.4 46.53 2 L
N
98.39 36.28 86.4 36.03 96.44 42.6 97.42 39.44 4 Y
V
194.4 68.4 96.46 39.11 2 L
N
206.38 35.38 194.39 36.03 204.9 41.82 205.64 38.6 4 Y
V
338.4 68.4 204.67 38.35 2 L
N
1 F
(T) 365.15 16.3 T
2 F
(7) 371.15 13.3 T
338.4 7.2 410.4 36 R
N
367.59 45.89 374.39 36.01 363.39 40.79 365.49 43.34 4 Y
V
334.8 68.4 366.27 42.69 2 L
N
1 F
(M) 244.8 102.68 T
2 F
(2) 254.88 99.68 T
1 F
(M) 298.73 107.07 T
2 F
(3) 308.8 104.07 T
FMENDPAGE
%%EndDocument
 @endspecial 689 2701 a fq(Figure)12 b(2.1:)18 b(T)m(asks)13 b(and)f(messages\
.)1000 2836 y(7)p eop
%%Page: 8 22
 bop -4 53 a fq(The)18 b(computational)f(model)h(for)f(task)h(scheduling)g
(has)g(two)g(basic)g(elements:)29 b(tasks)19 b(and)f(messages.)-4 132 y fj
(T)-5 b(asks)13 b fq(are)g(the)f(basic)h(program)f(units)h(that)f(run)g(concu\
rrently;)g(a)h fj(message)g fq(is)g(a)g(piece)g(of)f(data)h(sent)g(from)-4 210
y(one)i(task)h(to)f(another)g(task.)28 b(Figure)14 b(2.1)i(illustrates)f(an)h
(example.)27 b(The)16 b(computational)e(model)h(obeys)-4 288 y(the)d(followin\
g)f(rules.)56 496 y(1.)24 b(The)14 b(system)g(creates)g(a)g(task)g fj(after)f
fq(all)h(the)f(expected)h(messages)h(describing)e(the)g(task)h(have)f(been)
117 575 y(received.)19 b(These)13 b(messages)h(will)e(be)g(subsequently)h(con\
sumed.)56 702 y(2.)24 b(After)12 b(all)g(the)h(expected)f(messages)i(have)e
(been)h(received,)f(a)h(task)g(ignores)f(further)f(messages.)56 829 y(3.)24 b
(A)13 b(processor)f(completes)h(a)f(task)h(before)f(switching)g(to)g(another)
g(task.)56 957 y(4.)24 b(A)14 b(task)h(can)f(generate)g(zero)f(or)h(more)f
(messages.)25 b(Note)14 b(that)f(for)h(simplicity)f(creating)g(messages)117
1035 y(only)f(happens)h(at)g(the)f(end)g(of)g(the)h(task')m(s)f(computation.)
56 1162 y(5.)24 b(A)13 b(task)g(frees)f(itself)g(immediately)f(before)h(it)g
(is)h(terminated.)69 1370 y(The)19 b(third)f(rule)g(implies)h(that)f(the)h
(entire)f(computation)g(of)g(a)h(task)g(is)g(executed)g(sequentially)g(on)-4
1449 y(a)d(processor)n(,)j(and)d(that)h(tasks)g(cannot)g(preempt)f(each)h(oth\
er)m(.)31 b(Therefore,)18 b(if)e(parallel)g(computation)g(is)-4 1527 y(desire\
d)d(within)h(a)g(task,)h(then)f(the)g(task)g(should)g(explicitly)g(be)g(decom\
posed)g(into)f(parallel)h(subtasks.)24 b(It)-4 1605 y(also)16 b(follows)f(tha\
t)h(this)g(model)f(cannot)h(handle)f(applications)h(that)g(depends)g(on)g(pre\
emption,)g(such)g(as)-4 1683 y(certain)11 b(real-time)h(applications.)69 1829
y(Consider)f(an)h(example)f(of)g(parallel)g(programming)f(which)h(requires)g
(the)h(following)e(primitives:)16 b(\(1\))-4 1907 y(fork)9 b(a)i fj(thr)n(ead)
p fq(,)g(\(2\))f(send)h(data)g(to)f(a)h(thread,)g(and)f(\(3\))g(receive)g(dat\
a)h(in)f(a)h(thread.)17 b(W)l(e)11 b(will)f(show)h(that)f(these)-4 1985 y(pri\
mitives)h(can)i(be)f(represented)g(in)g(the)h(above)f(computational)g(model)g
(as)g(follows.)-4 2193 y fl(Fork)g(a)g(thr)o(ead.)25 b fq(Create)c(a)h(messag\
e)g(which)f(subsequently)h(creates)g(a)f(task)h(corresponding)e(to)i(the)117
2272 y(thread.)28 b(For)15 b(example,)i(in)f(Figure)e(2.1,)k(task)e fi(T)980
2279 y fg(3)1014 2272 y fq(representing)f(some)h(thread)f(can)h(fork)f(anothe\
r)117 2350 y(thread)i(by)f(creating)h(a)g(message,)i(say)e fi(M)884 2357 y fg
(4)902 2350 y fq(;)i(then,)g(message)e fi(M)1297 2357 y fg(4)1332 2350 y fq
(will)g(in)f(turn)g(create)h(task)g fi(T)1839 2357 y fg(5)1858 2350 y fq(,)
117 2428 y(corresponding)12 b(to)g(the)g(new)h(thread.)-4 2555 y fl(Send)e
(data)h(to)g(a)g(thr)o(ead.)24 b fq(Create)14 b(a)g(corresponding)e(message)j
(\(the)e(delivery)g(and)h(the)f(destination)h(are)117 2634 y(part)d(of)f(the)
g(message\).)19 b(For)10 b(example,)h(in)f(Figure)g(2.1,)i(task)f fi(T)1211
2641 y fg(2)1241 2634 y fq(sends)g(a)g(message)g fi(M)1634 2641 y fg(2)1664
2634 y fq(to)f(a)h(thread)117 2712 y(represented)h(by)h(task)f fi(T)541 2719 y
fg(3)560 2712 y fq(.)921 2836 y(8)p eop
%%Page: 9 23
 bop 75 53 a fl(Receive)13 b(data)e(in)h(a)h(thr)n(ead.)25 b fq(Create)14 b
(a)h(message)g fi(M)f fq(\(containing)f(the)i(content)f(of)g(the)g(whole)g
(thread\))197 132 y(for)h(continuation)g(of)g(the)h(thread;)h(terminate)e(the)
h(current)f(task)h(\(corresponding)e(to)i(the)g(current)197 210 y(thread\);)
10 b(when)h(a)g(send)g(message)h(corresponding)d(to)i(the)g(receive)f(exists,)
j(create)d(a)h(new)g(task)g(from)197 288 y(the)17 b(send)h(message)g(and)f fi
(M)h fq(\(i.e.,)h(just)e(resume)h(the)f(execution)g(of)g(the)g(original)g(thr\
ead\).)32 b(For)197 366 y(example,)12 b(in)f(Figure)g(2.1,)h(when)g(task)g fi
(T)907 373 y fg(1)937 366 y fq(representing)f(some)h(thread)f(wants)g(to)h
(receive)f(message)197 445 y fi(M)257 452 y fg(2)275 445 y fq(,)g(the)e(task)
h(will)e(create)i(message)g fi(M)911 452 y fg(1)939 445 y fq(for)e(continuati\
on)g(of)h(the)g(thread.)17 b(Then,)11 b(when)e(message)197 523 y fi(M)257 530
y fg(2)288 523 y fq(is)k(created,)g(both)f fi(M)664 530 y fg(1)695 523 y fq
(and)g fi(M)839 530 y fg(2)870 523 y fq(will)g(create)h(a)f(new)h(task)g fi
(T)1342 530 y fg(3)1373 523 y fq(which)f(resumes)h(the)f(execution)197 601 y
(of)g(the)g(original)g(thread.)148 814 y(In)k(the)h(rest)g(of)f(this)h(thesis\
,)i(we)e(will)f(assume)i(that)e(a)h(thread)f(can)h(receive)g(messages)h(at)f
(any)f(time)75 892 y(during)10 b(its)g(execution,)i(but)e(that)g(a)h(task)g
(can)g(receive)f(messages)i(only)e(at)h(the)f(beginning)g(of)g(its)h(executio\
n.)75 970 y(So,)i(each)f(segment)h(of)f(a)g(thread)g(between)h(the)f(receipt)
g(of)g(messages)h(corresponds)g(to)f(a)g(complete)g(task.)148 1115 y(In)h(ord\
er)g(to)h(implement)f(task)h(scheduling,)h(the)e(programmer)f(needs)j(to)e
(write)g(a)h(procedure,)g(called)75 1194 y(the)d fj(task)g(scheduler)p fq(.)
19 b(Whenever)11 b(a)g(processor)g(is)g(idle,)h(the)f(system)g(applies)h(the)
f(task)g(scheduler)g(in)g(order)75 1272 y(to)e(schedule)g(a)g(new)g(task,)h
(based)g(on)f(the)f(state)i(of)e(the)h(whole)g(system)g(\(tasks,)i(messages,)
g(and)e(processors\).)75 1350 y(If)h(more)g(than)g(one)h(processor)g(tries)f
(to)h(schedule)g(tasks)g(simultaneously)l(,)h(only)e(one)h(processor)f(can)h
(apply)75 1428 y(the)h(scheduling)h(operation)e(at)i(a)f(time.)18 b(In)12 b
(other)g(words,)h(this)f(is)h(an)f fj(atomic)g fq(operation.)75 2256 y
@beginspecial @setspecial
%%BeginDocument: fig/tsm.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 3 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
1 12 /Times-Italic FMDEFINEFONT
2 10 /Times-Italic FMDEFINEFONT
612 792 0 FMBEGINPAGE
67.8 66.01 254.43 95.11 R
7 X
0 K
V
0.5 H
2 Z
0 X
N
0 F
(T) 120.02 75.98 T
(ask Scheduler) 126.51 75.98 T
67.8 30.24 102.13 47.7 R
7 X
V
0 X
N
125.01 30.24 159.34 47.7 R
7 X
V
0 X
N
216.55 30.24 250.87 47.7 R
7 X
V
0 X
N
1 F
(P) 79.24 35.93 T
2 F
(1) 86.57 32.93 T
1 F
(P) 136.45 35.93 T
2 F
(2) 143.78 32.93 T
1 F
(P) 227.99 35.93 T
2 F
(p) 235.32 32.93 T
87.64 59.24 84.33 47.7 81.02 59.24 84.33 59.24 4 Y
V
84.33 66.21 84.33 58.24 2 L
N
146.85 59.4 144.07 47.73 140.24 59.1 143.55 59.25 4 Y
V
143.27 65.38 143.6 58.22 2 L
N
237.65 58.59 234.35 47.05 231.04 58.59 234.35 58.59 4 Y
V
234.35 66.21 234.35 57.59 2 L
N
87.64 26.98 84.33 15.44 81.02 26.98 84.33 26.98 4 Y
V
84.33 30.24 84.33 25.98 2 L
N
147.39 26.98 144.08 15.44 140.77 26.98 144.08 26.98 4 Y
V
144.08 30.24 144.08 25.98 2 L
N
237.65 26.15 234.35 14.61 231.04 26.15 234.35 26.15 4 Y
V
234.35 29.42 234.35 25.15 2 L
N
264.81 157.98 253.26 161.23 264.78 164.6 264.8 161.29 4 Y
V
84.33 14.57 405.6 13.6 405.6 162.03 263.8 161.27 4 L
N
236.94 24.48 234.35 15.44 231.75 24.48 234.35 24.48 4 Y
V
234.35 24.48 234.35 23.48 2 L
N
146.67 25.31 144.08 16.26 141.49 25.31 144.08 25.31 4 Y
V
144.08 25.31 144.08 24.31 2 L
N
85.65 26.13 83.06 17.09 80.46 26.13 83.06 26.13 4 Y
V
83.06 26.13 83.06 25.13 2 L
N
0 F
(send \050create\051 more messages) 260.86 23.4 T
71.58 53.84 74.89 65.38 78.2 53.84 74.89 53.84 4 Y
V
74.89 48.85 74.89 54.84 2 L
N
129.72 54.67 133.03 66.21 136.34 54.67 133.03 54.67 4 Y
V
133.03 48.85 133.03 55.67 2 L
N
222.82 54 226.6 65.39 229.43 53.72 226.12 53.86 4 Y
V
225.92 48.85 226.17 54.85 2 L
N
(r) 262.5 57.15 T
(equests) 266.49 57.15 T
67.8 146.01 250.87 175.11 R
7 X
V
0 X
N
( Messages) 131.93 157.37 T
237.49 105.56 234.19 94.03 230.88 105.56 234.19 105.56 4 Y
V
234.19 144.38 234.19 104.56 2 L
N
81.06 111.38 218.66 132.87 R
7 X
V
0 X
N
( T) 135.67 119.01 T
(asks) 145.16 119.01 T
160.27 106.85 156.25 95.54 153.67 107.26 156.97 107.05 4 Y
V
157.23 110.94 156.92 106.02 2 L
N
160.05 143.61 156.74 132.08 153.43 143.61 156.74 143.61 4 Y
V
156.74 146.07 156.74 142.61 2 L
N
FMENDPAGE
%%EndDocument
 @endspecial 476 2332 a(Figure)f(2.2:)18 b(Computational)12 b(model)g(for)f
(task)i(scheduling.)148 2477 y(This)d(model)f(for)g(task)h(scheduling)f(will)
h(be)f(called)h(the)f fj(standar)o(d)g(scheduling)h(model)p fq(.)17 b(It)9 b
(is)h(illustrated)75 2555 y(in)15 b(Figure)f(2.2)i(with)f fh(p)h fq(processor\
s,)g(denoted)f(by)g fh(P)1003 2562 y fg(1)1022 2555 y fq(,)i(...,)h fh(P)1148
2562 y fe(p)1168 2555 y fq(.)27 b(In)15 b(accordance)g(with)g(the)g(de\256nit\
ions)g(of)75 2634 y(scheduling)9 b(programmer)d(and)j(application)f(programme\
r)f(in)h(Section)h(1.1,)h(the)e(scheduling)h(programmer)75 2712 y(is)k(respon\
sible)g(for)e(the)i(implementation)e(of)i(the)f(task)h(scheduler)n(,)g(and)g
(the)g(application)f(programmer)f(is)1000 2836 y(9)p eop
%%Page: 10 24
 bop -4 53 a fq(responsible)14 b(for)f(the)h(implementation)f(of)h(tasks)g
(and)g(messages.)25 b(In)14 b(the)g(rest)g(of)g(this)g(chapter)n(,)h(we)f(wil\
l)-4 132 y(develop)e(the)g(model)g(for)g(the)g(design)g(of)g(the)h(task)f(sch\
eduler)m(.)-4 435 y ft(2.2)70 b(General)19 b(Appr)o(oach)-4 640 y fq(On)12 b
(a)h(single)f(processor)n(,)h(a)g(task)f(scheduling)h(sequence)g(is)g(basical\
ly)f(a)h(list)f(of)g(tasks)h(ordered)f(according)-4 718 y(to)i(their)g fj(pri\
orities)p fq(,)j(the)e(preferences)f(of)h(scheduling)g(these)g(tasks.)26 b
(W)l(e)16 b(call)e(such)i(a)f(list)g(a)g fj(scheduling)-4 796 y(list)p fq(.)
28 b(In)15 b(a)h(parallel)f(system,)j(extending)d(the)h(above)g(paradigm,)g
(task)g(scheduling)g(requires)f(the)h(use)g(of)-4 875 y(multiple)h(scheduling)
h(lists)h(and)f(multiple)f(priority)g(assignments)i(per)f(task.)36 b(W)l(e)18
b(will)g(illustrate)g(this)-4 953 y(necessity)13 b(with)f(the)g(following)f
(example.)-4 1157 y fl(Synchr)n(onous)h(Network)g(Simulation)69 1326 y fj(Net\
work)g(simulation)f fq(is)g(a)h(common)f(computational)f(paradigm,)i(in)f(whi\
ch)g(data)h(dependencies)f(can)-4 1404 y(be)16 b(described)g(by)g(a)g(network)
g(or)f(graph.)30 b(Examples)16 b(of)g(network)g(simulation)f(computations)h
(include)-4 1483 y(\256nite)g(element)g(simulation)g(such)h(as)g(\257uid)f
(simulation)g([53)o(];)i(dif)o(ferential)e(equation)g(solving)g(such)h(as)-4
1561 y(weather)c(prediction)g([24)o(,)i(25];)f(digital)f(circuit)g(simulation)
h(such)g(as)g(gate-level)g(simulation)27 b([20)o(];)15 b(and)-4 1639 y(digita\
l)c(signal)i(processing)f(such)h(as)g(sonar)f(detection)g([80].)69 1784 y(A)f
(network)g(simulation)f(computation)h(can)g(be)h(represented)f(by)g(a)h(direc\
ted)e(graph,)i(in)f(which)g(a)h(node)-4 1862 y(represents)g(a)h(thread)f(and)
g(an)h(edge)g(represents)f(the)g(data)h(dependency)g(between)f(threads.)19 b
(If)12 b(there)g(is)g(an)-4 1941 y(edge)f(from)e(node)i(A)g(to)g(node)g(B,)h
(node)f(A)g(needs)g(to)g(send)g(data)g(to)g(node)g(B)g(at)g(the)g(end)g(of)g
(each)g(phase.)18 b(W)l(e)-4 2019 y(will)11 b(call)i(this)f(edge)h(an)f fj
(out-edge)g fq(for)g(A)g(and)g(an)h fj(in-edge)f fq(for)f(B.)69 2164 y(A)f fj
(synchr)o(onous)g(network)h(simulation)e fq(\()p fj(SNS)p fq(\))h(computation)
f(is)h(a)g(network)g(simulation)f(computation)-4 2242 y(in)22 b(which)g(all)g
(nodes)g(need)g(to)h(be)f(synchronized)g(in)g(each)g(phase.)49 b(\(Note)21 b
(that)h(an)h fj(asynchr)n(onous)-4 2321 y(network)17 b(simulation)f fq(comput\
ation)g(is)h(a)g(network)f(simulation)g(computation)f(without)h(the)h(constra\
int)-4 2399 y(of)e(synchronization;)j(we)e(will)g(discuss)i(this)e(case)h(in)
f(Section)g(3.2.4.\))31 b(For)15 b(SNS,)i(each)f(node)h(will)e(be)-4 2477 y
(executed)c(once)h(during)f(each)i(phase.)18 b(Then,)13 b(each)f(node)g(will)
f(send)i(data)e(to)h(neighboring)f(nodes)h(via)g(the)-4 2555 y(out-edges)e
(in)h(the)g(graph.)17 b(The)12 b(SNS)e(computation)g(can)h(advance)h(to)e(the)
h(next)g(stage)h(when)f(all)f(the)h(nodes)-4 2634 y(have)h(received)h(data)g
(from)e(their)i(neighboring)e(nodes)i(via)g(in-edges.)19 b(\(From)11 b(the)i
(task)g(de\256nition)f(in)h(the)-4 2712 y(previous)f(section,)h(each)f(node)h
(during)e(one)h(phase)h(can)g(be)f(considered)h(to)f(be)g(a)h(task.\))908 2836
y(10)p eop
%%Page: 11 25
 bop 148 53 a fq(The)11 b(traditional)e(approach)h(for)g(SNS)g(is)g(to)h(part\
ition)e(the)h(SNS)g(graph)g(over)g(processors)h(by)f(hand)g([62,)75 132 y(Sec\
tion)k(4])h(or)g(by)f(compilers)h([80)o(].)26 b(However)n(,)16 b(if)e(the)h
(grain)f(size)i(of)e(each)i(node)f(\(in)f(a)h(phase\))g(cannot)75 210 y(be)e
(known)g fj(a)g(priori)p fq(,)h(it)f(becomes)h(critical)e(to)h(partition)f
(the)h(graph)g(over)g(processors)g(at)g(runtime.)20 b(Here,)75 288 y(we)12 b
(propose)g(a)g(dynamic)g(load)g(balancing)g(strategy)f(based)i(on)f(the)g(cri\
terion)f(of)g(keeping)h(the)g(number)g(of)75 366 y fj(cr)o(oss)h(edges)g fq
(as)h(small)f(as)g(possible.)20 b(A)13 b(cross)g(edge)g(is)g(an)g(edge)g(betw\
een)g(two)f(nodes,)i(which)e(reside)h(on)75 445 y(dif)n(ferent)f(processors.)
75 1439 y @beginspecial @setspecial
%%BeginDocument: fig/sns.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 3 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
1 12 /Times-Bold FMDEFINEFONT
2 10 /Times-Bold FMDEFINEFONT
612 792 0 FMBEGINPAGE
136.68 142.67 167.85 169.66 13.5 RR
0.5 H
2 Z
0 X
0 K
N
199.01 142.67 230.18 169.66 13.5 RR
N
173.04 88.68 204.21 115.67 13.5 RR
N
74.34 102.17 105.51 129.17 13.5 RR
N
115.9 52.68 147.07 79.68 13.5 RR
N
183.43 25.69 214.6 52.68 13.5 RR
N
266.54 88.68 297.71 115.67 13.5 RR
N
339.27 16.69 370.43 43.68 13.5 RR
N
219.79 57.18 250.96 84.18 13.5 RR
N
271.74 34.69 302.9 61.68 13.5 RR
N
318.49 151.66 349.66 178.66 13.5 RR
N
266.54 165.16 297.71 192.16 13.5 RR
N
365.24 79.68 396.41 106.67 13.5 RR
N
375.63 147.17 406.8 174.16 13.5 RR
N
256.15 129.17 287.32 156.16 13.5 RR
N
79.54 16.69 110.71 43.68 13.5 RR
N
97.39 55.48 95.12 43.7 90.8 54.9 94.1 55.19 4 Y
V
89.93 102.17 94.19 54.18 2 L
N
171.57 41.07 183.42 39.21 172.38 34.51 171.98 37.79 4 Y
V
110.7 30.19 172.97 37.89 2 L
N
117.68 43.39 107.37 37.24 112.85 47.92 115.26 45.66 4 Y
V
123.38 54.22 114.58 44.9 2 L
N
117.58 87.23 122.37 76.23 112.48 83.02 115.03 85.13 4 Y
V
99.38 104.22 115.67 84.34 2 L
N
116.16 110.15 105.51 115.68 117.47 116.63 116.81 113.39 4 Y
V
173.04 102.17 115.83 113.58 2 L
N
198.89 64.71 199.01 52.71 192.55 62.82 195.72 63.76 4 Y
V
188.62 88.68 196.01 62.78 2 L
N
153.5 78.16 141.87 75.21 150.16 83.88 151.83 81.02 4 Y
V
173.04 93.17 150.97 80.48 2 L
N
259.69 83.21 248.37 79.25 255.88 88.61 257.78 85.91 4 Y
V
268.38 93.22 256.98 85.3 2 L
N
209.04 84.27 202.37 94.24 213.31 89.32 211.18 86.79 4 Y
V
221.38 78.22 210.42 87.41 2 L
N
259.97 46.1 271.73 43.71 260.49 39.5 260.23 42.8 4 Y
V
214.6 39.18 261.23 42.85 2 L
N
330.18 40.58 340.37 34.24 328.37 34.22 329.27 37.4 4 Y
V
304.38 44.22 330.25 37.1 2 L
N
366.7 70.94 375.36 79.24 372.41 67.61 369.55 69.28 4 Y
V
354.85 43.68 370.07 70.12 2 L
N
385.26 137.91 391.36 148.24 391.67 136.24 388.46 137.07 4 Y
V
380.82 106.67 388.73 138.02 2 L
N
360.45 159.92 349.65 165.17 361.58 166.44 361.02 163.18 4 Y
V
375.63 160.66 360.03 163.35 2 L
N
306.95 171.03 297.7 178.67 309.6 177.09 308.28 174.06 4 Y
V
318.49 169.66 307.37 174.45 2 L
N
254.57 175.16 266.53 174.18 255.87 168.67 255.22 171.92 4 Y
V
226.38 166.22 256.21 172.09 2 L
N
238.85 147.9 230.17 156.19 241.92 153.76 240.39 150.83 4 Y
V
256.15 142.67 239.51 151.27 2 L
N
179.38 152.86 167.85 156.16 179.38 159.47 179.38 156.16 4 Y
V
199.01 156.16 178.38 156.16 2 L
N
110.85 130.72 99.38 127.22 107.26 136.28 109.06 133.5 4 Y
V
138 152 108.22 132.95 2 L
N
281.04 127.64 282.12 115.68 274.87 125.25 277.95 126.44 4 Y
V
276.93 129.17 278.32 125.49 2 L
N
288.36 73.65 287.32 61.7 281.86 72.38 285.11 73.02 4 Y
V
282.13 88.68 285.31 72.02 2 L
N
214.66 54.83 225.37 60.24 219.15 49.98 216.91 52.41 4 Y
V
211.38 47.22 217.65 53.05 2 L
N
308.69 97.39 297.7 102.2 309.57 103.94 309.13 100.66 4 Y
V
365.24 93.17 308.15 100.77 2 L
N
299.21 144.26 287.31 142.68 296.56 150.33 297.89 147.29 4 Y
V
318.49 156.16 296.98 146.88 2 L
N
0 F
(Node \050thread\051) 100.32 179.85 T
(Data dependency) 102.3 204.41 T
80.37 211.35 91.91 208.05 80.37 204.74 80.37 208.05 4 Y
V
65.93 208.05 81.37 208.05 2 L
N
63.95 167.91 95.12 194.91 13.5 RR
N
188.62 174.16 188.62 138.17 266.54 75.18 245.76 16.69 4 L
3 H
N
1 F
(P) 208.85 13.85 T
2 F
(2) 216.17 10.85 T
1 F
(P) 386.13 58.3 T
2 F
(4) 393.46 55.3 T
144 25 171 61 255.6 118.8 406.8 129.6 4 L
N
1 F
(P) 54 110.76 T
2 F
(1) 61.33 107.76 T
1 F
(P) 354.88 186.36 T
2 F
(3) 362.2 183.36 T
159.61 132.58 155.99 144.03 165.12 136.24 162.37 134.41 4 Y
V
177 112 161.82 135.22 2 L
0.5 H
N
0 F
(x) 185.54 99.95 T
203.5 122.47 195 114 197.72 125.69 200.61 124.08 4 Y
V
211 143 200.13 123.2 2 L
N
FMENDPAGE
%%EndDocument
 @endspecial 416 1515 a(Figure)g(2.3:)18 b(Partitioning)11 b(an)h(SNS)g(graph)
g(over)g(four)f(processors.)148 1647 y(Let)i(us)g(consider)f(an)g(SNS)g(compu\
tation,)g(illustrated)f(in)i(Figure)e(2.3,)i(at)g(some)f(moment)g(of)g(a)g
(phase.)75 1725 y(Its)c(SNS)g(graph)h(is)f(partitioned)g(over)g(four)g(proces\
sors,)i fh(P)1074 1732 y fg(1)1093 1725 y fq(,)g fh(P)1146 1732 y fg(2)1165
1725 y fq(,)g fh(P)1218 1732 y fg(3)1237 1725 y fq(,)g(and)e fh(P)1370 1732 y
fg(4)1398 1725 y fq(\(the)g(partitioning)g(is)g(indicated)75 1803 y(by)j(the)
f(thick)h(lines)g(in)g(this)f(\256gure)g(and)h(nodes)g(are)g(represented)f
(by)h(circles\).)18 b(For)10 b(the)g(node)h(marked)f(with)75 1882 y(\252x\272\
,)16 b(each)e(processor)h(has)g(a)f(dif)o(ferent)f(preference)h(to)g(schedule)
h(this)f(node:)22 b(Processor)14 b fh(P)1710 1889 y fg(1)1744 1882 y fq(has)h
(a)f(very)75 1960 y(high)f(preference)f(to)h(schedule)g(the)g(node)g(because)
g(it)g(is)g(always)h(good)f(to)f(schedule)i(local)f(nodes)g(before)75 2038 y
(requesting)i(nodes)g(from)g(other)f(processors.)28 b(Processor)15 b fh(P)
1149 2045 y fg(4)1183 2038 y fq(has)h(a)f(very)g(low)g(preference)g(to)g(sche\
dule)75 2116 y(the)j(node)g(because)h(moving)f(the)g(task)h(to)f fh(P)882 2123
y fg(4)919 2116 y fq(will)g(incur)g(the)g(expense)h(of)f(many)g(more)f(cross)
i(edges.)75 2195 y(Similarly)-5 b(,)14 b(processors)f fh(P)537 2202 y fg(2)
569 2195 y fq(and)f fh(P)684 2202 y fg(3)716 2195 y fq(have)h(in-between)f
(preferences)h(of)f(scheduling)h(the)g(node.)19 b(One)13 b(can)75 2273 y(also)
h(apply)f(the)h(same)g(strategy)g(to)f(other)g(nodes)h(to)g(\256nd)f(the)h
(relative)f(priority)f(of)h(scheduling)h(any)g(task)75 2351 y(on)d(any)g(proc\
essor)m(.)18 b(This)12 b(shows)g(that)f(each)g(processor)h(can)f(have)g(its)h
(own)f(perspective)g(of)f(the)h(preferred)75 2429 y(task)i(scheduling)f(seque\
nce.)19 b(This)13 b(suggests)g(that)f(a)g fj(general)h fq(scheduling)f(model)
g(should)g(at)h(least)f(allow)75 2508 y(each)h(processor)f(to)g(express)h(its)
g(own)f(perspective)g(of)g(the)g(task)h(scheduling)f(sequence.)75 2712 y fh
(p)p fl(-List)h(Model)988 2836 y fq(11)p eop
%%Page: 12 26
 bop -4 642 a @beginspecial @setspecial
%%BeginDocument: fig/multiqueue.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 7 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
1 12 /Times-Italic FMDEFINEFONT
2 10 /Times-Italic FMDEFINEFONT
3 8 /Times-Roman FMDEFINEFONT
4 11 /ZapfChancery-MediumItalic FMDEFINEFONT
5 9 /Times-Italic FMDEFINEFONT
6 14 /Symbol FMDEFINEFONT
612 792 0 FMBEGINPAGE
60.81 12.19 171.06 34.5 R
7 X
0 K
V
0.5 H
2 Z
0 X
N
0 F
(CPU) 100.43 18.92 T
201.69 12.19 311.94 34.5 R
7 X
V
0 X
N
342.56 12.19 452.81 34.5 R
7 X
V
0 X
N
(...) 322.06 23.56 T
1 F
(P) 60.81 43.84 T
2 F
(1) 68.14 40.84 T
1 F
(P) 201.69 43.84 T
2 F
(2) 209.02 40.84 T
1 F
(P) 342.56 43.84 T
2 F
(p) 349.89 40.84 T
0 F
(CPU) 245.89 18.06 T
(CPU) 383.76 18.06 T
3 F
(1) 147.6 116.02 T
(2) 147.6 101.62 T
(5) 147.6 87.22 T
93.6 55.8 93.6 142.2 2 L
3 X
N
132.69 55.88 132.69 142.2 2 L
N
133.2 55.8 93.6 55.8 2 L
N
133.2 70.2 93.6 70.2 2 L
N
133.2 84.6 93.6 84.6 2 L
N
133.2 113.4 93.6 113.4 2 L
N
133.2 99 93.6 99 2 L
N
133.2 127.8 93.6 127.8 2 L
N
0 X
(6) 147.6 72.82 T
(8) 147.6 58.4 T
4 F
(T) 109.8 118.48 T
5 F
(5) 115.29 115.73 T
4 F
(T) 109.8 60.4 T
5 F
(2) 115.29 57.65 T
4 F
(T) 109.8 75.28 T
5 F
(4) 115.29 72.53 T
4 F
(T) 109.8 89.68 T
5 F
(3) 115.29 86.93 T
4 F
(T) 109.8 104.08 T
5 F
(1) 115.29 101.33 T
116.71 45.73 113.4 34.2 110.09 45.73 113.4 45.73 4 Y
3 X
V
113.4 55.8 113.4 44.73 2 L
N
6 F
0 X
(p) 289.72 132.88 T
2 F
(2) 297.4 129.88 T
3 F
(1) 291.6 116.02 T
(3) 291.6 101.62 T
(5) 291.6 87.22 T
237.6 55.8 237.6 142.2 2 L
3 X
N
276.69 55.88 276.69 142.2 2 L
N
277.2 55.8 237.6 55.8 2 L
N
277.2 70.2 237.6 70.2 2 L
N
277.2 84.6 237.6 84.6 2 L
N
277.2 113.4 237.6 113.4 2 L
N
277.2 99 237.6 99 2 L
N
277.2 127.8 237.6 127.8 2 L
N
0 X
(6) 291.6 72.82 T
(7) 291.6 58.4 T
4 F
(T) 253.8 118.48 T
5 F
(5) 259.29 115.73 T
4 F
(T) 253.8 60.4 T
5 F
(1) 259.29 57.65 T
4 F
(T) 253.8 75.28 T
5 F
(4) 259.29 72.53 T
4 F
(T) 253.8 89.68 T
5 F
(3) 259.29 86.93 T
4 F
(T) 253.8 104.08 T
5 F
(2) 259.29 101.33 T
260.71 45.73 257.4 34.2 254.09 45.73 257.4 45.73 4 Y
3 X
V
257.4 55.8 257.4 44.73 2 L
N
6 F
0 X
(p) 426.52 132.88 T
2 F
(p) 434.2 129.88 T
3 F
(2) 428.4 116.02 T
(3) 428.4 101.62 T
(4) 428.4 87.22 T
374.4 55.8 374.4 142.2 2 L
3 X
N
413.49 55.88 413.49 142.2 2 L
N
414 55.8 374.4 55.8 2 L
N
414 70.2 374.4 70.2 2 L
N
414 84.6 374.4 84.6 2 L
N
414 113.4 374.4 113.4 2 L
N
414 99 374.4 99 2 L
N
414 127.8 374.4 127.8 2 L
N
0 X
(7) 428.4 72.82 T
(9) 428.4 58.4 T
4 F
(T) 390.6 118.48 T
5 F
(4) 396.09 115.73 T
4 F
(T) 390.6 60.4 T
5 F
(5) 396.09 57.65 T
4 F
(T) 390.6 75.28 T
5 F
(1) 396.09 72.53 T
4 F
(T) 390.6 89.68 T
5 F
(3) 396.09 86.93 T
4 F
(T) 390.6 104.08 T
5 F
(2) 396.09 101.33 T
397.51 45.73 394.2 34.2 390.89 45.73 394.2 45.73 4 Y
3 X
V
394.2 55.8 394.2 44.73 2 L
N
6 F
0 X
(p) 145.72 132.88 T
2 F
(1) 153.4 129.88 T
FMENDPAGE
%%EndDocument
 @endspecial 689 718 a fq(Figure)11 b(2.4:)19 b fh(p)p fq(-list)12 b(model.)
69 862 y(In)c(a)h(parallel)g(system)g(with)g fh(p)g fq(processors)g(\(denoted)
g(by)f fh(P)1079 869 y fg(1)1099 862 y fq(,)i(...,)h fh(P)1211 869 y fe(p)
1231 862 y fq(\),)f(since)g(each)f(processor)g(may)f(have)-4 940 y(its)13 b
(own)g(perspective)g(of)g(the)h(task)f(scheduling)h(sequence,)g(we)g(assign,)
g(in)g(our)e(approach,)i(a)g(scheduling)-4 1018 y(list)j(to)g(each)h(processo\
r)m(.)33 b(Since)17 b(there)g(are)g fh(p)h fq(scheduling)f(lists)h(in)f(all,)
i(we)f(call)f(the)g(model)g(the)h fh(p)p fj(-list)-4 1096 y(model)p fq(.)24 b
(In)14 b(this)h(model,)g(the)f(programmer)f(only)h(needs)h(to)f(assign)h(to)g
(a)f(task)h fh(p)g fq(priorities,)g(\()p fh(\031)1685 1103 y fg(1)1703 1096 y
fq(,)g fh(\031)1758 1103 y fg(2)1777 1096 y fq(,)g(.)9 b(.)g(.,)-4 1175 y fh
(\031)24 1182 y fe(p)43 1175 y fq(\),)16 b(with)f(each)g fh(\031)326 1182 y fe
(i)355 1175 y fq(representing)f(the)h(priority)f(of)h(the)g(task)g(in)g(the)g
(scheduling)g(list)g(of)g fh(P)1610 1182 y fe(i)1624 1175 y fq(.)27 b(Figure)
14 b(2.4)-4 1253 y(illustrates)f(the)h fh(p)p fq(-list)f(model)h(with)f(\256v\
e)g(tasks)i(denoted)e(by)h fi(T)1098 1260 y fg(1)1117 1253 y fq(,)g fi(T)1170
1260 y fg(2)1189 1253 y fq(,)g fi(T)1242 1260 y fg(3)1261 1253 y fq(,)h fi
(T)1315 1260 y fg(4)1334 1253 y fq(,)f(and)g fi(T)1473 1260 y fg(5)1492 1253 y
fq(.)22 b(In)13 b(this)h(\256gure,)g(the)-4 1331 y(small-font)h(number)h(in)g
(the)h(right)f(hand)h(side)g(of)f(each)h(task)g(of)f(each)h(list)g(represents)
f(the)h(priority)1795 1313 y fg(1)1829 1331 y fq(of)-4 1409 y(the)e(task)h
(in)g(the)f(list.)29 b(For)15 b(example,)i(for)e(task)h fi(T)881 1416 y fg
(1)899 1409 y fq(,)i(its)d fh(\031)1019 1416 y fg(1)1056 1409 y ff(=)k fq(2,)
e fh(\031)1195 1416 y fg(2)1232 1409 y ff(=)h fq(7,)f(and)f fh(\031)1458 1416
y fe(p)1496 1409 y ff(=)i fq(7.)29 b(When)15 b(a)h(task)-4 1488 y(is)g(create\
d,)h(it)f(is)h(simultaneously)e(inserted)h(into)g(each)g fh(P)1035 1495 y fe
(i)1050 1488 y fq(')m(s)g(list)g(according)g(to)g(the)g(task')m(s)h(priority)
d fh(\031)1844 1495 y fe(i)1858 1488 y fq(.)-4 1566 y(\(Note)e(that)i(if)f
(a)g(task)h(is)g(absolutely)f(not)g(scheduled)h(by)f(some)h(processor)n(,)g
(say)g fh(P)1447 1573 y fe(i)1461 1566 y fq(,)g(then)g(we)f(can)h(set)g(the)
-4 1644 y(priority)f fh(\031)188 1651 y fe(i)216 1644 y fq(of)i(the)g(task)g
(to)f(an)h fj(unde\256ned)g fq(value)g(and)g(do)f(not)h(insert)f(the)h(task)g
(into)g(the)g(corresponding)-4 1722 y(scheduling)f(list.\))25 b(If)14 b(some)
h(processor)f(schedules)i(a)e(task)h(\(with)f(the)h(highest)g(priority\))d
(from)i(the)g(head)-4 1801 y(of)f(its)h(scheduling)g(list)g(for)f(execution,)
i(say)f(processor)g fh(P)1026 1808 y fg(2)1059 1801 y fq(schedules)h(task)f fi
(T)1388 1808 y fg(1)1407 1801 y fq(,)h(all)f(the)g(instances)g(of)g fi(T)1852
1808 y fg(1)-4 1879 y fq(in)d(other)f(scheduling)h(lists)h(will)f(also)g(be)h
(removed.)17 b(If)10 b(the)i(priorities)e(of)g(a)i(task)f(are)h(changed)f(at)
g(runtime,)-4 1957 y(the)h(location)g(of)g(the)g(task)h(in)f(each)h(list)f
(must)g(be)h(changed)f(accordingly)l(.)69 2102 y(A)c(very)h(important)e(resul\
t)i(for)f(the)g fh(p)p fq(-list)h(model)g(is)g(that)f(the)h(use)g(of)g fh(p)g
fq(scheduling)g(lists)g(is)g fj(suf\256cient)f fq(for)-4 2181 y(specifying)k
(all)i(parallel)e(scheduling)h(policies,)i(i.e.,)f(the)g fh(p)p fq(-list)f
(model)g(results)g(in)g(no)h(loss)f(of)g(generality)-4 2259 y(with)f(respect)
g(to)g(the)h(standard)f(scheduling)g(model)g(\(as)h(described)f(in)g(Section)
g(2.1\).)117 2470 y fl(Assertion)21 b fj(The)f fh(p)p fj(-list)g(model)h(r)n
(esults)g(in)f(no)g(loss)h(of)f(generality)h(with)f(r)o(espect)h(to)f(the)117
2548 y(standar)o(d)12 b(scheduling)g(model.)-4 2598 y 750 2 v 54 2629 a fd
(1)70 2644 y fn(Note)g(that)g(some)h(systems)f(use)h(a)g(small)f(number)g(to)
f(represent)i(a)g(high)e(priority)e(but)j(some)h(other)e(systems)i(use)g(a)f
(lar)o(ge)-4 2709 y(number)m(.)j(For)10 b(consistency)m(,)h(we)g(will)e(alway\
s)i(use)f(a)h(lar)o(ge)g(number)f(to)g(represent)g(a)h(high)e(priority)f(in)i
(this)f(thesis.)908 2836 y fq(12)p eop
%%Page: 13 27
 bop 197 53 a fl(Justi\256cation.)33 b fq(This)18 b(follows)f(from)g(the)g
(fact)h(that)f(we)h(can)g(recast)g(any)g(scheduling)g(al-)197 132 y(gorithm)d
fi(A)g fq(in)h(terms)f(of)h(our)f fh(p)p fq(-list)h(model,)g(as)h(follows.)28
b(Consider)16 b(how)f(scheduling)h(is)197 210 y(performed)8 b(when)i(a)f(proc\
essor)h(tries)g(to)f(schedule)h(a)g(task.)18 b(If)8 b(we)i(use)g(algorithm)f
fi(A)g fq(\(explic-)197 288 y(itly)k(coded\),)g(the)g(schedule)h(is)f(determi\
ned)f(by)h(executing)g(the)g(code;)h(while)f(if)f(we)i(use)f(the)197 366 y fh
(p)p fq(-list)g(model,)h(the)f(schedule)h(is)g(determined)f(by)g(relative)g
(task)g(priorities,)g(which)h(must)f(be)197 445 y(settled)g(before)g(task)h
(scheduling)f(time.)21 b(Since)13 b(priorities)f(may)h(be)g(changed)h(dynamic\
ally)197 523 y(in)g(the)g fh(p)p fq(-list)h(model,)f(we)h(only)f(need)g(to)g
(ensure)h(that)f(the)g(highest)g(priority)f(in)h(each)h(list)f(is)197 601 y
(always)h(assigned)g(to)f(the)g(\252correct\272)h(task.)24 b(T)m(o)15 b(be)f
(more)g(precise,)i(assume)f(that)f(each)h(task)197 679 y fi(T)224 686 y fe
(i)250 679 y fq(is)e(the)f(one)g(to)g(be)h(scheduled)f(on)g(processor)g fh
(P)1071 686 y fe(i)1098 679 y fq(by)g(algorithm)f fi(A)h fq(if)g(processor)g
fh(P)1695 686 y fe(i)1722 679 y fq(is)g(the)197 758 y(next)h(processor)h(to)f
(schedule)h(a)g(task.)22 b(In)13 b(the)g fh(p)p fq(-list)h(model,)g(the)f(pro\
grammer)f(can)i(assign)197 836 y(priorities)i(to)i(tasks)g(in)g(such)g(a)f
(way)h(that)f(task)h fi(T)1091 843 y fe(i)1123 836 y fq(has)g(the)g(highest)f
(priority)f(in)i fh(P)1702 843 y fe(i)1716 836 y fq(')m(s)g(list)197 914 y
(\(more)13 b(precisely)m(,)i(the)f fh(i)p fq(th)f(priority)g(of)h fi(T)925 921
y fe(i)953 914 y fq(is)h(the)f(highest)g(among)g(the)g fh(i)p fq(th)f(priorit\
ies)h(of)f(all)197 992 y(the)i(tasks\).)25 b(Thus,)17 b(whichever)d(processor)
h(requests)g(a)f(task)h(next,)h(the)f fh(p)p fq(-list)f(system)i(will)197 1071
y(schedule)g(the)g(same)g(task)g(as)h(algorithm)e fi(A)p fq(.)28 b(Thus)17 b
(the)f(priority)e(assignment)i(scheme)g(in)197 1149 y(the)c fh(p)p fq(-list)h
(model)f(realizes)g(algorithm)f fi(A)p fq(.)148 1322 y(The)23 b(above)f(asser\
tion)g(shows)h(that)f(the)g fh(p)p fq(-list)g(model)g(is)g(well)g(suited)g
(to)g(the)h(speci\256cation)f(of)75 1400 y(scheduling)11 b(policies.)18 b(How\
ever)n(,)12 b(we)g(do)f(not)g(want)g(to)h(naively)f(implement)f(each)i(schedu\
ling)f(list)h(on)f(its)75 1478 y(corresponding)i(processor)n(,)h(because)h
(such)f(a)g(straightforward)e(implementation)h(would)g(be)h(inef)n(\256cient)
75 1556 y(on)j(a)h(distributed-memory)d(system,)k(due)f(to)f(the)g(following)
f(two)i(communication)e(problems:)27 b(First,)75 1635 y(whenever)12 b(a)h(pro\
cessor)f(inserts)g(or)g(deletes)h(a)f(task,)i(the)e(processor)g(would)g(have)
g(to)h(inform)e(every)h(other)75 1713 y(processor)m(.)39 b(This)19 b(will)g
(result)g(in)g(a)g(lar)o(ge)g(amount)g(of)f(communication.)38 b(Second,)21 b
(processors)e(may)75 1791 y(compete)12 b(with)g(each)h(other)f(and)g(attempt)
g(to)g(schedule)h(the)f(same)h(task)g(simultaneously)l(.)75 1995 y fh(p)99
1977 y fg(2)118 1995 y fl(-List)f(Model)148 2164 y fq(In)i(order)f(to)h(solve)
g(these)h(problems)e(of)h(excessive)h(communication)e(and)h(scheduling)g(comp\
etition)75 2242 y(\(processor)e(race)g(conditions\),)g(we)g(want)g(to)g(avoid)
g(inserting/deleting)f(a)i(task)f(across)h(processors)f(while)75 2321 y(keepi\
ng)i(the)h(notion)f(of)h(using)f fh(p)h fq(scheduling)g(lists.)26 b(W)l(e)15 b
(will)f(modify)g(the)g fh(p)p fq(-list)h(model)f(as)i(illustrated)75 2399 y
(in)e(Figure)e(2.5.)23 b(Let)14 b(the)g(original)f(scheduling)g(list)h(of)f
(each)h(processor)g fh(P)1392 2406 y fe(i)1420 2399 y fq(become)g(a)g fj(virt\
ual)g(list)f fq(\()p fj(VL)p fq(\),)75 2477 y(denoted)k(by)f fh(V)c(L)389 2484
y fe(i)403 2477 y fq(,)19 b(and)d(let)h(each)g fh(P)728 2484 y fe(i)760 2477 y
fq(store)g fh(p)g fq(small)g fj(physical)g(lists)g fq(\()p fj(PLs)p fq(\),)h
(denoted)f(by)g fh(P)7 b(L)1774 2484 y fe(i)p fg(1)1805 2477 y fq(,)18 b fh
(P)8 b(L)1907 2484 y fe(i)p fg(2)1938 2477 y fq(,)75 2555 y fi(\001)g(\001)g
(\001)p fq(,)15 b fh(P)7 b(L)231 2562 y fe(ip)263 2555 y fq(.)24 b(Each)15 b
(individual)e fh(P)7 b(L)700 2562 y fe(ij)745 2555 y fq(is)14 b fj(physically)
h fq(maintained)e(by)h(processor)g fh(P)1544 2562 y fe(i)1559 2555 y fq(,)h
(while)f(each)g fh(V)d(L)1888 2562 y fe(i)1917 2555 y fq(is)75 2634 y fj(conc\
eptually)16 b fq(constructed)g(from)f(tasks)i(appearing)f(in)g fh(P)7 b(L)
1160 2641 y fg(1)p fe(i)1191 2634 y fq(,)18 b fh(P)7 b(L)1292 2641 y fg(2)p fe
(i)1323 2634 y fq(,)18 b fi(\001)8 b(\001)g(\001)p fq(,)18 b fh(P)7 b(L)1512
2641 y fe(pi)1544 2634 y fq(.)31 b(Since)16 b(there)g(are)g fh(p)1931 2616 y
fg(2)75 2712 y fq(PLs)d(in)f(the)g(entire)g(system,)h(we)g(call)f(the)g(model)
g(the)g fh(p)1040 2694 y fg(2)1059 2712 y fj(-list)g(model)p fq(.)18 b(In)12 b
(a)h(VL,)g(the)f(tasks)h(are)f(mer)o(ged)g(on)988 2836 y(13)p eop
%%Page: 14 28
 bop -4 1242 a @beginspecial @setspecial
%%BeginDocument: fig/psns.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 11 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
1 12 /Courier-Oblique FMDEFINEFONT
2 10 /Courier-Oblique FMDEFINEFONT
3 14 /Courier-Oblique FMDEFINEFONT
4 11 /Courier-Oblique FMDEFINEFONT
5 12 /Times-Italic FMDEFINEFONT
6 10 /Times-Italic FMDEFINEFONT
7 8 /Times-Roman FMDEFINEFONT
8 11 /ZapfChancery-MediumItalic FMDEFINEFONT
9 9 /Times-Italic FMDEFINEFONT
10 14 /Symbol FMDEFINEFONT
612 792 0 FMBEGINPAGE
36 14.4 158.5 279 R
0.5 H
2 Z
4 X
0 K
N
176.87 14.4 299.37 279 R
N
317.75 14.4 440.25 279 R
N
42.12 190.8 152.37 273.7 R
0 X
N
183 190.8 293.25 273.7 R
N
323.87 190.8 434.12 273.7 R
N
0 F
(Memory) 189.12 257.59 T
(Memory) 329.99 257.59 T
(Memory) 48.25 257.59 T
1 F
(PL) 85.86 244.88 T
2 F
(12) 100.26 241.88 T
1 F
(PL) 226.26 244 T
2 F
(22) 240.66 241 T
1 F
(PL) 366.67 244.44 T
2 F
(p2) 381.06 241.44 T
88.74 159.62 92.54 148.23 83.29 155.88 86.02 157.75 4 Y
4 X
V
59.4 197.05 86.59 156.89 2 L
N
238.11 158.18 234.8 146.65 231.49 158.18 234.8 158.18 4 Y
V
234.8 197.05 234.8 157.18 2 L
N
225.07 153.7 234.79 146.67 222.82 147.47 223.94 150.59 4 Y
V
94.4 197.05 224.89 150.23 2 L
N
366.08 158.07 375.19 150.27 363.33 152.05 364.7 155.06 4 Y
V
272.14 197 365.62 154.63 2 L
N
246.77 147.47 234.79 146.67 244.52 153.7 245.64 150.59 4 Y
V
375.2 197.05 244.71 150.23 2 L
N
104 149.85 92.14 148.02 101.22 155.86 102.61 152.86 4 Y
V
199.14 197 101.71 152.41 2 L
N
117.16 149.38 105.2 150.27 115.82 155.86 116.49 152.62 4 Y
V
338.14 198 115.51 152.39 2 L
N
1 F
0 X
(PL) 121.86 244.88 T
2 F
(1p) 136.26 241.88 T
1 F
(PL) 262.27 244 T
2 F
(2p) 276.66 241 T
1 F
(PL) 402.67 244.44 T
2 F
(pp) 417.06 241.44 T
388.21 155.85 379.13 148.02 382.68 159.48 385.45 157.67 4 Y
4 X
V
411.54 198 384.91 156.81 2 L
N
364.5 152.57 375.13 147.01 363.17 146.09 363.83 149.33 4 Y
V
128.54 197 364.82 149.12 2 L
N
3 F
0 X
(VL) 50.4 104.77 T
4 F
(1) 67.19 101.27 T
3 F
(VL) 192 104.67 T
4 F
(2) 208.79 101.17 T
3 F
(VL) 331 103.8 T
4 F
(P) 347.79 100.3 T
1 F
(PL) 50.39 244.83 T
2 F
(11) 64.78 241.83 T
1 F
(PL) 190.79 243.95 T
2 F
(21) 205.18 240.95 T
1 F
(PL) 331.19 244.39 T
2 F
(p1) 345.58 241.39 T
41.4 19.8 151.65 42.11 R
7 X
V
0 X
N
0 F
(CPU) 81.02 26.53 T
182.27 19.8 292.52 42.11 R
7 X
V
0 X
N
323.15 19.8 433.39 42.11 R
7 X
V
0 X
N
(...) 302.65 31.18 T
5 F
(P) 41.4 51.46 T
6 F
(1) 48.73 48.46 T
5 F
(P) 182.27 51.46 T
6 F
(2) 189.6 48.46 T
5 F
(P) 323.15 51.46 T
6 F
(p) 330.47 48.46 T
0 F
(CPU) 226.47 25.67 T
(CPU) 364.35 25.67 T
7 F
(1) 118.8 125.02 T
(2) 118.8 110.62 T
(5) 118.8 96.22 T
74.18 63.41 74.18 149.81 2 L
3 X
N
113.27 63.49 113.27 149.81 2 L
N
113.79 63.41 74.18 63.41 2 L
N
113.79 77.81 74.18 77.81 2 L
N
113.79 92.21 74.18 92.21 2 L
N
113.79 121.01 74.18 121.01 2 L
N
113.79 106.61 74.18 106.61 2 L
N
113.79 135.41 74.18 135.41 2 L
N
0 X
(6) 118.8 81.82 T
(8) 118.8 67.4 T
8 F
(T) 90.39 126.1 T
9 F
(5) 95.88 123.35 T
8 F
(T) 90.39 68.01 T
9 F
(2) 95.88 65.26 T
8 F
(T) 90.39 82.9 T
9 F
(4) 95.88 80.15 T
8 F
(T) 90.39 97.3 T
9 F
(3) 95.88 94.55 T
8 F
(T) 90.39 111.7 T
9 F
(1) 95.88 108.95 T
97.29 53.35 93.99 41.81 90.68 53.35 93.99 53.35 4 Y
3 X
V
93.99 63.41 93.99 52.35 2 L
N
7 F
0 X
(1) 261 123.22 T
(3) 261 108.82 T
(5) 261 94.42 T
218.19 63.41 218.19 149.81 2 L
3 X
N
257.27 63.49 257.27 149.81 2 L
N
257.79 63.41 218.19 63.41 2 L
N
257.79 77.81 218.19 77.81 2 L
N
257.79 92.21 218.19 92.21 2 L
N
257.79 121.01 218.19 121.01 2 L
N
257.79 106.61 218.19 106.61 2 L
N
257.79 135.41 218.19 135.41 2 L
N
0 X
(6) 261 80.02 T
(7) 261 65.6 T
8 F
(T) 234.39 126.1 T
9 F
(5) 239.88 123.35 T
8 F
(T) 234.39 68.01 T
9 F
(1) 239.88 65.26 T
8 F
(T) 234.39 82.9 T
9 F
(4) 239.88 80.15 T
8 F
(T) 234.39 97.3 T
9 F
(3) 239.88 94.55 T
8 F
(T) 234.39 111.7 T
9 F
(2) 239.88 108.95 T
241.29 53.35 237.99 41.81 234.68 53.35 237.99 53.35 4 Y
3 X
V
237.99 63.41 237.99 52.35 2 L
N
7 F
0 X
(2) 399.6 123.22 T
(3) 399.6 108.82 T
(4) 399.6 94.42 T
354.99 63.41 354.99 149.81 2 L
3 X
N
394.07 63.49 394.07 149.81 2 L
N
394.59 63.41 354.99 63.41 2 L
N
394.59 77.81 354.99 77.81 2 L
N
394.59 92.21 354.99 92.21 2 L
N
394.59 121.01 354.99 121.01 2 L
N
394.59 106.61 354.99 106.61 2 L
N
394.59 135.41 354.99 135.41 2 L
N
0 X
(7) 399.6 80.02 T
(9) 399.6 65.6 T
8 F
(T) 371.19 126.1 T
9 F
(4) 376.68 123.35 T
8 F
(T) 371.19 68.01 T
9 F
(5) 376.68 65.26 T
8 F
(T) 371.19 82.9 T
9 F
(1) 376.68 80.15 T
8 F
(T) 371.19 97.3 T
9 F
(3) 376.68 94.55 T
8 F
(T) 371.19 111.7 T
9 F
(2) 376.68 108.95 T
378.09 53.35 374.79 41.81 371.48 53.35 374.79 53.35 4 Y
3 X
V
374.79 63.41 374.79 52.35 2 L
N
49.8 198 49.8 239.4 2 L
0 X
N
67.8 198 67.8 239.4 2 L
N
67.8 198 49.8 198 2 L
N
67.8 212.4 49.8 212.4 2 L
N
67.8 226.8 49.8 226.8 2 L
N
8 F
(T) 55.2 202.67 T
9 F
(2) 60.7 199.92 T
8 F
(T) 55.2 217.55 T
9 F
(1) 60.7 214.8 T
7 F
(2) 71.4 215.02 T
(8) 71.4 200.6 T
85.8 198 85.8 239.4 2 L
N
103.8 198 103.8 239.4 2 L
N
103.8 198 85.8 198 2 L
N
103.8 212.4 85.8 212.4 2 L
N
103.8 226.8 85.8 226.8 2 L
N
8 F
(T) 91.2 202.67 T
9 F
(1) 96.7 199.92 T
8 F
(T) 91.2 217.55 T
9 F
(2) 96.7 214.8 T
7 F
(3) 107.4 215.02 T
(7) 107.4 200.6 T
121.8 198 121.8 239.4 2 L
N
139.8 198 139.8 239.4 2 L
N
139.8 198 121.8 198 2 L
N
139.8 212.4 121.8 212.4 2 L
N
139.8 226.8 121.8 226.8 2 L
N
8 F
(T) 127.2 202.67 T
9 F
(1) 132.7 199.92 T
8 F
(T) 127.2 217.55 T
9 F
(2) 132.7 214.8 T
7 F
(3) 143.4 215.02 T
(7) 143.4 200.6 T
190.2 198 190.2 239.4 2 L
N
208.2 198 208.2 239.4 2 L
N
208.2 198 190.2 198 2 L
N
208.2 212.4 190.2 212.4 2 L
N
8 F
(T) 195.6 202.67 T
9 F
(3) 201.1 199.92 T
7 F
(5) 211.8 200.6 T
226.2 198 226.2 239.4 2 L
N
244.2 198 244.2 239.4 2 L
N
244.2 198 226.2 198 2 L
N
244.2 212.4 226.2 212.4 2 L
N
8 F
(T) 231.6 202.67 T
9 F
(3) 237.1 199.92 T
7 F
(5) 247.8 200.6 T
262.2 198 262.2 239.4 2 L
N
280.2 198 280.2 239.4 2 L
N
280.2 198 262.2 198 2 L
N
280.2 212.4 262.2 212.4 2 L
N
8 F
(T) 267.6 202.67 T
9 F
(3) 273.1 199.92 T
7 F
(4) 283.8 200.6 T
330.6 198 330.6 239.4 2 L
N
348.6 198 348.6 239.4 2 L
N
348.6 198 330.6 198 2 L
N
348.6 212.4 330.6 212.4 2 L
N
348.6 226.8 330.6 226.8 2 L
N
8 F
(T) 336 202.67 T
9 F
(4) 341.5 199.92 T
8 F
(T) 336 217.55 T
9 F
(5) 341.5 214.8 T
7 F
(1) 352.2 215.02 T
(6) 352.2 200.6 T
366.6 198 366.6 239.4 2 L
N
384.6 198 384.6 239.4 2 L
N
384.6 198 366.6 198 2 L
N
384.6 212.4 366.6 212.4 2 L
N
384.6 226.8 366.6 226.8 2 L
N
8 F
(T) 372 202.67 T
9 F
(4) 377.5 199.92 T
8 F
(T) 372 217.55 T
9 F
(5) 377.5 214.8 T
7 F
(1) 388.2 215.02 T
(6) 388.2 200.6 T
402.6 198 402.6 239.4 2 L
N
420.6 198 420.6 239.4 2 L
N
420.6 198 402.6 198 2 L
N
420.6 212.4 402.6 212.4 2 L
N
420.6 226.8 402.6 226.8 2 L
N
8 F
(T) 408 202.67 T
9 F
(5) 413.5 199.92 T
8 F
(T) 408 217.55 T
9 F
(4) 413.5 214.8 T
7 F
(2) 424.2 215.02 T
(9) 424.2 200.6 T
10 F
(p) 118.72 51.86 T
6 F
(1) 126.4 48.86 T
10 F
(p) 260.92 51.88 T
6 F
(2) 268.6 48.88 T
10 F
(p) 399.52 51.86 T
6 F
(3) 407.2 48.86 T
0 F
(...) 394.21 247.42 T
(...) 253.8 247.4 T
(...) 113.4 247.4 T
FMENDPAGE
%%EndDocument
 @endspecial 680 1324 a fq(Figure)11 b(2.5:)18 b fh(p)940 1306 y fg(2)959 1324
y fq(-list)12 b(model.)-4 1549 y(the)j(basis)h(of)f(the)g(priorities)f(assign\
ed)i(to)f(them)g(on)h(the)f(corresponding)f(PLs.)28 b(When)15 b(creating)g
(a)h(task,)-4 1628 y(the)f(programmer)e(assigns)j fh(p)g fq(priorities)e(to)h
(the)g(task)h(and)f(designates)h(a)f(processor)n(,)h(say)g fh(P)1630 1635 y fe
(i)1644 1628 y fq(,)h(where)e(the)-4 1706 y(task)d(will)f(be)h(stored.)18 b
(\(Note)11 b(that)h(in)f(many)h(cases)h(the)f(designated)g(processor)g(is)g
(set)g(to)f(the)h(one)g(creating)-4 1784 y(the)h(task)g(so)g(that)g(the)g(ins\
ertion)g(operation)f(requires)h(no)g(communication.\))19 b(Subsequently)l(,)
14 b(the)f(system)-4 1862 y(will)i(insert)g(the)h(task)g(into)f(each)h fh(P)7
b(L)659 1869 y fe(ij)705 1862 y fq(according)15 b(to)h(the)f fh(j)s fq(th)h
(priority)e(of)h(the)h(task.)28 b(Whenever)15 b(some)-4 1941 y(processor)i
(wants)i(to)e(schedule)i(this)f(task,)i(say)e(processor)g fh(P)1114 1948 y fg
(2)1151 1941 y fq(schedules)h fi(T)1390 1948 y fg(1)1426 1941 y fq(in)f(Figur\
e)f(2.5,)j(we)e(can)-4 2019 y(delete)12 b(task)g fi(T)246 2026 y fg(1)277 2019
y fq(from)f(each)i fh(P)7 b(L)561 2026 y fg(1)p fe(j)596 2019 y fq(.)19 b(Alt\
hough)11 b(the)h(insertion)g(and)g(deletion)g(operation)f(only)h(updates)h
(the)-4 2097 y(PLs)f(on)h fh(P)179 2104 y fe(i)193 2097 y fq(,)g(implicitly)e
(each)i(VL)g(is)g(also)f(changed)h(accordingly)l(.)69 2242 y(There)19 b(are)g
(two)g(main)g(advantages)h(to)f(the)h fh(p)901 2224 y fg(2)920 2242 y fq(-lis\
t)f(model.)38 b(First,)21 b(if)e(several)g(processors)h(try)f(to)-4 2321 y
(simultaneously)h(schedule)h(a)g(task)f(which)h(is)g(stored)f(in)g(the)h(PLs)
g(on)g(some)f(processor)h fh(P)1673 2328 y fe(i)1687 2321 y fq(,)j(we)c(can)
-4 2399 y(resolve)e(this)h(by)g(letting)f fh(P)495 2406 y fe(i)528 2399 y fq
(determine)g(which)g(processor)h(can)g(schedule)g(the)g(task.)37 b(Second,)21
b(in)d(an)-4 2477 y(actual)10 b(implementation)g(of)h(the)g(model,)g(each)g
(processor)g fh(P)1057 2484 y fe(i)1083 2477 y fq(only)f(needs)i(to)f(maintai\
n)f(the)h(head)g(of)f fh(V)i(L)1844 2484 y fe(i)1858 2477 y fq(,)-4 2555 y
(because)h(this)f(is)h(the)f(place)h(from)e(which)h(processor)h fh(P)965 2562
y fe(i)992 2555 y fq(schedules)g(tasks.)19 b(\(Chapter)12 b(4)g(will)g(discus\
s)i(this)-4 2634 y(issue)d(in)f(greater)g(detail.\))17 b(Since)10 b(tasks)h
(in)f(the)h(tail)f(of)g fh(V)h(L)1011 2641 y fe(i)1036 2634 y fq(are)f(not)g
(interesting)g(to)g fh(P)1482 2641 y fe(i)1497 2634 y fq(,)h(we)g(may)f(elimi\
nate)-4 2712 y(the)i(communication)f(that)h(would)g(be)h(required)e(to)h(main\
tain)g(the)h(tail)f(of)g fh(V)f(L)1367 2719 y fe(i)1381 2712 y fq(.)908 2836 y
(14)p eop
%%Page: 15 29
 bop 148 53 a fq(W)l(e)20 b(can)h(further)e(improve)g(the)h(modi\256ed)f(mode\
l)h(in)g(the)g(following)f(two)h(situations:)33 b(The)20 b(\256rst)75 132 y
(situation)14 b(is)g(that)g(if)g(some)h(PLs)f(on)g(the)h(same)f(processor)g
(are)h(identical,)f(we)h(only)f(need)g(to)g(use)h(one)f(PL)75 210 y(to)g(repr\
esent)f(these)i(PLs.)24 b(For)13 b(example,)i(in)f(Figure)f(2.5,)i(we)f(can)g
(use)h(one)f(PL)g(to)g(stand)g(for)f fh(P)8 b(L)1829 217 y fg(12)1878 210 y fq
(and)75 288 y fh(P)f(L)146 295 y fg(1)p fe(p)183 288 y fq(,)13 b(if)f(they)g
(are)g(always)h(the)f(same.)148 433 y(The)g(second)h(situation)e(is)h(that)f
(if)h(certain)f(priorities)g(of)g(each)h(task)g(are)g(monotonically)e(related\
,)i(then)75 512 y(the)j(corresponding)g(PLs)g(can)h(be)f(reduced)g(to)g(a)h
(single)f(PL,)h(supplemented)f(with)g(a)g(set)h(of)f(monotonic)75 590 y(funct\
ions)j(for)f(deriving)h(the)g(other)g(PL)-5 b(')m(s.)37 b(For)17 b(example,)k
(if)c(the)i(priority)e(for)g(each)i(task)f(in)h(one)f(PL)75 668 y(\(denoted)
11 b(by)g fh(P)c(L)393 650 y fc(0)405 668 y fq(\))k(is)g(a)h(monotonic)e(func\
tion)h fh(f)16 b fq(of)11 b(its)g(priority)f(in)h(another)g(PL)g(\(denoted)g
(by)g fh(P)c(L)p fq(\),)12 b(then)75 746 y(the)i(system)h(can)f(perform)f(ope\
rations)h(on)g fh(P)7 b(L)918 728 y fc(0)945 746 y fq(based)14 b(on)g(the)h
(data)f(structure)g(of)f fh(P)8 b(L)14 b fq(and)g(the)h(priority)75 825 y(tra\
nslation)e(function)g fh(f)6 b fq(,)15 b(as)f(follows.)23 b(\(1\))13 b(W)l
(e)h(only)g(need)g(to)g(insert)f(tasks)i(into)f(and)g(delete)f(tasks)i(from)
75 903 y fh(P)7 b(L)p fq(,)20 b(not)d fh(P)7 b(L)330 885 y fc(0)342 903 y fq
(.)33 b(\(2\))17 b(When)g(some)h(processor)f(tries)g(to)g(schedule)h(a)g(task)
f(from)g fh(P)7 b(L)1604 885 y fc(0)1616 903 y fq(,)19 b(the)e(system)h(can)
75 981 y(schedule)d(the)f(task)h(from)e(the)h(head)h(of)f fh(P)7 b(L)15 b fq
(if)f(the)g(function)f fh(f)20 b fq(is)15 b(monotonically)e(increasing,)i(or)
f(from)75 1059 y(the)e(tail)g(of)g fh(P)7 b(L)349 1041 y fc(0)374 1059 y fq
(if)12 b fh(f)17 b fq(is)c(monotonically)e(decreasing.)19 b(W)l(e)12 b(call)g
fh(P)c(L)k fq(a)h fj(base)f(PL)h fq(and)f(call)h fh(P)7 b(L)1742 1041 y fc
(0)1766 1059 y fq(a)13 b fj(derived)75 1138 y(PL)p fq(.)75 1413 y ft(2.3)71 b
(Multilist)17 b(Scheduling)i(Model)75 1612 y fq(Now)m(,)13 b(we)f(can)h(modif\
y)e(the)i fh(p)600 1594 y fg(2)619 1612 y fq(-list)f(model)g(by)h(allowing)f
(the)g(programmer)f(to)h(use)h(one)g(list)f(to)g(represent)75 1690 y(another)
g(list\(s\),)g(and)h(formally)e(de\256ne)h(the)g(multilist)g(scheduling)g(mod\
el)g(as)h(follows.)148 1903 y fi(\017)24 b fq(On)14 b(each)g(processor)f fh
(P)612 1910 y fe(i)627 1903 y fq(,)h(the)g(programmer)e(creates)i(some)g(PLs,)
h(say)f fh(k)1468 1910 y fe(i)1497 1903 y fq(PLs,)h(denoted)e(by)h fh(P)7 b
(L)1907 1910 y fe(ij)1938 1903 y fq(,)197 1981 y(1)14 b fi(\024)f fh(j)k fi
(\024)d fh(k)403 1988 y fe(i)417 1981 y fq(.)148 2112 y fi(\017)24 b fq(For)
12 b(each)h fh(V)e(L)455 2119 y fe(i)469 2112 y fq(,)i(the)g(programmer)d(des\
ignates)k(certain)e(PLs)h(\(in)f(the)g(system\))h(which)f(are)h(mer)n(ged)197
2190 y(into)j fh(V)11 b(L)363 2197 y fe(i)378 2190 y fq(.)30 b(The)17 b(proce\
ssor)g fh(P)753 2197 y fe(i)784 2190 y fq(will)f(automatically)f(schedule)i
(a)g(task)g(from)e(the)h(head)h(of)f fh(V)11 b(L)1923 2197 y fe(i)1938 2190 y
fq(,)197 2268 y(which)g(is)h(constructed)f(from)f(these)i(designated)f(PLs.)
36 b(If)11 b(the)g(scheduled)h(task)f(is)h(from)e(processor)197 2346 y fh(P)
228 2353 y fe(i)240 2344 y fb(0)254 2346 y fq(,)15 b(then)f fh(P)412 2353 y fe
(i)424 2344 y fb(0)451 2346 y fq(will)g(subsequently)g(delete)g(the)g(task)h
(from)e fh(P)7 b(L)1302 2353 y fe(i)1314 2344 y fb(0)1325 2353 y fg(1)1344
2346 y fh(;)h fq(.)g(.)h(.)g fh(;)f(P)f(L)1521 2353 y fe(i)1533 2344 y fb(0)
1544 2353 y fe(k)1562 2363 y fa(i)1573 2356 y fb(0)1589 2346 y fq(.)24 b(Impl\
icitly)-5 b(,)15 b(some)197 2425 y(VLs)e(are)f(also)h(changed)g(accordingly)l
(.)148 2555 y fi(\017)24 b fq(At)18 b(runtime,)i(for)e(each)h(task)g(assumed)
g(to)f(be)h(stored)f(on)h(some)f(processor)h fh(P)1625 2562 y fe(i)1658 2555 y
fq(\(which)f(can)h(be)197 2634 y(designated)11 b(by)g(the)g(programmer\),)f
(the)h(programmer)e(assigns)j(to)f(the)g(task)g fh(k)1563 2641 y fe(i)1589
2634 y fq(priorities,)f(denoted)197 2712 y(by)22 b fh(\031)297 2719 y fg(1)
315 2712 y fh(;)8 b(\031)365 2719 y fg(2)383 2712 y fh(;)g(::::;)e(\031)509
2719 y fe(k)527 2724 y fa(i)542 2712 y fq(.)47 b(The)22 b(system)g(will)g(ins\
ert)f(the)h(task)g(into)f(each)h fh(P)8 b(L)1561 2719 y fe(ij)1613 2712 y fq
(according)21 b(to)h fh(\031)1920 2719 y fe(j)1938 2712 y fq(.)988 2836 y(15)
p eop
%%Page: 16 30
 bop -4 1242 a @beginspecial @setspecial
%%BeginDocument: fig/mpts.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 11 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Courier-Oblique FMDEFINEFONT
1 10 /Courier-Oblique FMDEFINEFONT
2 12 /Times-Roman FMDEFINEFONT
3 14 /Courier-Oblique FMDEFINEFONT
4 11 /Courier-Oblique FMDEFINEFONT
5 12 /Times-Italic FMDEFINEFONT
6 10 /Times-Italic FMDEFINEFONT
7 8 /Times-Roman FMDEFINEFONT
8 11 /ZapfChancery-MediumItalic FMDEFINEFONT
9 9 /Times-Italic FMDEFINEFONT
10 14 /Symbol FMDEFINEFONT
612 792 0 FMBEGINPAGE
0 F
0 X
0 K
(PL) 76.5 246.75 T
1 F
(11) 90.89 243.75 T
0 F
(PL) 216.9 245.88 T
1 F
(21) 231.29 242.88 T
0 F
(PL) 357.3 246.31 T
1 F
(p1) 371.69 243.31 T
0 F
(PL) 112.5 246.75 T
1 F
(1k) 126.89 243.75 T
0 F
(PL) 252.9 245.88 T
1 F
(2k) 267.29 242.88 T
0 F
(PL) 393.3 246.31 T
1 F
(pk) 407.69 243.31 T
(1) 136.66 237.87 T
(2) 277.5 237.87 T
(p) 418.05 239.26 T
27 14.4 149.5 279 R
0.5 H
2 Z
4 X
N
167.87 14.4 290.37 279 R
N
308.75 14.4 431.25 279 R
N
33.12 190.8 143.37 273.7 R
0 X
N
174 190.8 284.25 273.7 R
N
314.87 190.8 425.12 273.7 R
N
2 F
(Memory) 180.12 257.59 T
(Memory) 320.99 257.59 T
(Memory) 39.25 257.59 T
87.31 159.61 83.54 148.22 80.7 159.88 84.01 159.75 4 Y
4 X
V
85.65 199.8 83.97 158.72 2 L
N
229.11 158.18 225.8 146.65 222.49 158.18 225.8 158.18 4 Y
V
225.8 197.05 225.8 157.18 2 L
N
216.82 154.65 225.79 146.68 213.96 148.68 215.39 151.67 4 Y
V
121.65 196.2 216.3 151.21 2 L
N
357.08 158.07 366.19 150.27 354.33 152.05 355.7 155.06 4 Y
V
263.14 197 356.62 154.63 2 L
N
237.77 147.47 225.79 146.67 235.52 153.7 236.64 150.59 4 Y
V
366.2 197.05 235.71 150.23 2 L
N
95.12 148.72 83.14 148.02 92.92 154.96 94.02 151.84 4 Y
V
226.05 198 93.08 151.49 2 L
N
108.14 149.03 96.2 150.26 106.97 155.55 107.55 152.29 4 Y
V
366.45 198 106.57 152.1 2 L
N
379.21 155.85 370.13 148.02 373.68 159.48 376.45 157.67 4 Y
V
402.54 198 375.91 156.81 2 L
N
355.5 152.57 366.13 147.01 354.17 146.09 354.83 149.33 4 Y
V
119.54 197 355.82 149.12 2 L
N
3 F
0 X
(VL) 41.4 104.77 T
4 F
(1) 58.19 101.27 T
3 F
(VL) 183 104.67 T
4 F
(2) 199.79 101.17 T
3 F
(VL) 320.4 102.97 T
4 F
(P) 337.19 99.47 T
32.4 19.8 142.65 42.11 R
7 X
V
0 X
N
2 F
(CPU) 72.02 26.53 T
173.27 19.8 283.52 42.11 R
7 X
V
0 X
N
314.15 19.8 424.39 42.11 R
7 X
V
0 X
N
(...) 293.65 31.18 T
5 F
(P) 32.4 51.46 T
6 F
(1) 39.73 48.46 T
5 F
(P) 173.27 51.46 T
6 F
(2) 180.6 48.46 T
5 F
(P) 314.15 51.46 T
6 F
(p) 321.47 48.46 T
2 F
(CPU) 217.47 25.67 T
(CPU) 355.35 25.67 T
7 F
(1) 109.8 125.02 T
(2) 109.8 110.62 T
(5) 109.8 96.22 T
65.18 63.41 65.18 149.81 2 L
3 X
N
104.27 63.49 104.27 149.81 2 L
N
104.79 63.41 65.18 63.41 2 L
N
104.79 77.81 65.18 77.81 2 L
N
104.79 92.21 65.18 92.21 2 L
N
104.79 121.01 65.18 121.01 2 L
N
104.79 106.61 65.18 106.61 2 L
N
104.79 135.41 65.18 135.41 2 L
N
0 X
(6) 109.8 81.82 T
(8) 109.8 67.4 T
8 F
(T) 81.39 126.1 T
9 F
(5) 86.88 123.35 T
8 F
(T) 81.39 68.01 T
9 F
(2) 86.88 65.26 T
8 F
(T) 81.39 82.9 T
9 F
(4) 86.88 80.15 T
8 F
(T) 81.39 97.3 T
9 F
(3) 86.88 94.55 T
8 F
(T) 81.39 111.7 T
9 F
(1) 86.88 108.95 T
88.29 53.35 84.99 41.81 81.68 53.35 84.99 53.35 4 Y
3 X
V
84.99 63.41 84.99 52.35 2 L
N
7 F
0 X
(1) 252 123.22 T
(3) 252 108.82 T
(5) 252 94.42 T
209.19 63.41 209.19 149.81 2 L
3 X
N
248.27 63.49 248.27 149.81 2 L
N
248.79 63.41 209.19 63.41 2 L
N
248.79 77.81 209.19 77.81 2 L
N
248.79 92.21 209.19 92.21 2 L
N
248.79 121.01 209.19 121.01 2 L
N
248.79 106.61 209.19 106.61 2 L
N
248.79 135.41 209.19 135.41 2 L
N
0 X
(6) 252 80.02 T
(7) 252 65.6 T
8 F
(T) 225.39 126.1 T
9 F
(5) 230.88 123.35 T
8 F
(T) 225.39 68.01 T
9 F
(1) 230.88 65.26 T
8 F
(T) 225.39 82.9 T
9 F
(4) 230.88 80.15 T
8 F
(T) 225.39 97.3 T
9 F
(3) 230.88 94.55 T
8 F
(T) 225.39 111.7 T
9 F
(2) 230.88 108.95 T
232.29 53.35 228.99 41.81 225.68 53.35 228.99 53.35 4 Y
3 X
V
228.99 63.41 228.99 52.35 2 L
N
7 F
0 X
(2) 390.6 123.22 T
(3) 390.6 108.82 T
(4) 390.6 94.42 T
345.99 63.41 345.99 149.81 2 L
3 X
N
385.07 63.49 385.07 149.81 2 L
N
385.59 63.41 345.99 63.41 2 L
N
385.59 77.81 345.99 77.81 2 L
N
385.59 92.21 345.99 92.21 2 L
N
385.59 121.01 345.99 121.01 2 L
N
385.59 106.61 345.99 106.61 2 L
N
385.59 135.41 345.99 135.41 2 L
N
0 X
(7) 390.6 80.02 T
(9) 390.6 65.6 T
8 F
(T) 362.19 126.1 T
9 F
(4) 367.68 123.35 T
8 F
(T) 362.19 68.01 T
9 F
(5) 367.68 65.26 T
8 F
(T) 362.19 82.9 T
9 F
(1) 367.68 80.15 T
8 F
(T) 362.19 97.3 T
9 F
(3) 367.68 94.55 T
8 F
(T) 362.19 111.7 T
9 F
(2) 367.68 108.95 T
369.09 53.35 365.79 41.81 362.48 53.35 365.79 53.35 4 Y
3 X
V
365.79 63.41 365.79 52.35 2 L
N
76.8 198 76.8 239.4 2 L
0 X
N
94.8 198 94.8 239.4 2 L
N
94.8 198 76.8 198 2 L
N
94.8 212.4 76.8 212.4 2 L
N
94.8 226.8 76.8 226.8 2 L
N
8 F
(T) 82.2 202.67 T
9 F
(2) 87.7 199.92 T
8 F
(T) 82.2 217.55 T
9 F
(1) 87.7 214.8 T
7 F
(2) 98.4 215.02 T
(8) 98.4 200.6 T
112.8 198 112.8 239.4 2 L
N
130.8 198 130.8 239.4 2 L
N
130.8 198 112.8 198 2 L
N
130.8 212.4 112.8 212.4 2 L
N
130.8 226.8 112.8 226.8 2 L
N
8 F
(T) 118.2 202.67 T
9 F
(1) 123.7 199.92 T
8 F
(T) 118.2 217.55 T
9 F
(2) 123.7 214.8 T
7 F
(3) 134.4 215.02 T
(7) 134.4 200.6 T
217.2 198 217.2 239.4 2 L
N
235.2 198 235.2 239.4 2 L
N
235.2 198 217.2 198 2 L
N
235.2 212.4 217.2 212.4 2 L
N
8 F
(T) 222.6 202.67 T
9 F
(3) 228.1 199.92 T
7 F
(5) 238.8 200.6 T
253.2 198 253.2 239.4 2 L
N
271.2 198 271.2 239.4 2 L
N
271.2 198 253.2 198 2 L
N
271.2 212.4 253.2 212.4 2 L
N
8 F
(T) 258.6 202.67 T
9 F
(3) 264.1 199.92 T
7 F
(4) 274.8 200.6 T
357.6 198 357.6 239.4 2 L
N
375.6 198 375.6 239.4 2 L
N
375.6 198 357.6 198 2 L
N
375.6 212.4 357.6 212.4 2 L
N
375.6 226.8 357.6 226.8 2 L
N
8 F
(T) 363 202.67 T
9 F
(4) 368.5 199.92 T
8 F
(T) 363 217.55 T
9 F
(5) 368.5 214.8 T
7 F
(1) 379.2 215.02 T
(6) 379.2 200.6 T
393.6 198 393.6 239.4 2 L
N
411.6 198 411.6 239.4 2 L
N
411.6 198 393.6 198 2 L
N
411.6 212.4 393.6 212.4 2 L
N
411.6 226.8 393.6 226.8 2 L
N
8 F
(T) 399 202.67 T
9 F
(5) 404.5 199.92 T
8 F
(T) 399 217.55 T
9 F
(4) 404.5 214.8 T
7 F
(2) 415.2 215.02 T
(9) 415.2 200.6 T
10 F
(p) 109.72 51.86 T
6 F
(1) 117.4 48.86 T
10 F
(p) 251.92 51.88 T
6 F
(2) 259.6 48.88 T
10 F
(p) 390.52 51.86 T
6 F
(3) 398.2 48.86 T
5 F
( ..) 242.26 224 T
( ..) 100.05 227.47 T
( ..) 382.66 227.6 T
FMENDPAGE
%%EndDocument
 @endspecial 540 1318 a fq(Figure)12 b(2.6:)18 b(Multilist)12 b(scheduling)g
(model.)117 1445 y(Implicitly)l(,)i(some)f(VLs)h(are)f(also)h(changed)f(accor\
dingly)l(.)21 b(Note)13 b(that)g(priorities)f(of)h(a)h(task)f(can)g(be)117
1523 y(changed)g(dynamically)l(.)69 1706 y(The)d(programmer)e(uses)i(the)g
(\256rst)f(two)h(operations)f(to)g(specify)h(a)g(\252scheduling)f(pattern\272)
h(by)f(which)h(the)-4 1784 y(system)j(creates)g(PLs)h(and)f(mer)o(ges)g(PLs)h
(into)e(VLs.)21 b(Figure)13 b(2.6)g(is)g(an)g(example)g(of)g(scheduling)g(pat\
tern.)-4 1862 y(In)g(the)h fh(p)p fq(-list)h(and)f fh(p)353 1844 y fg(2)372
1862 y fq(-list)g(models,)h(we)f(have)g(mentioned)g(that)g(the)g(priorities)f
(of)h(a)g(task)h(are)f(allowed)g(to)-4 1941 y(be)h(changed)g(at)g(runtime.)26
b(In)15 b(the)g(multilist)g(scheduling)g(model,)h(the)f(scheduling)g(pattern)
g(can)g(be)g(also)-4 2019 y(changed)c(at)g(runtime.)17 b(Although)11 b(the)g
(scheduling)g(patterns)g(are)g(usually)g(\256xed,)h(we)f(will)g(present)g(a)h
(good)-4 2097 y(example)f(of)h(a)g(scheduling)g(algorithm)f(\(in)h(Section)f
(3.1.2.2\))i(whose)g(scheduling)f(pattern)f(is)h(changed)h(at)-4 2175 y(runti\
me.)69 2321 y(In)h(addition,)h(if)f(a)h(PL)f(can)h(be)g(derived)f(from)f(anot\
her)i(PL)f(with)h(a)f(monotonic)g(priority)f(translation)-4 2399 y(function)c
fh(f)c fq(,)11 b(the)f(programmer)e(only)i(needs)g(to)g(specify)g(this)g(deri\
vation)f(relation)g(for)g(the)h(derived)f(PL)i(and)-4 2477 y(does)i(not)h(nee\
d)f(to)g(assign)h(redundant)f(priorities.)21 b(The)14 b(system)g(will)f(only)
g(insert)g(tasks)h(into)f(and)h(delete)-4 2555 y(tasks)d(from)f(the)i(base)f
(PL,)h(not)f(the)g(derived)g(PL.)h(In)e(order)h(to)g(schedule)g(a)h(task)f
(from)f(the)h(derived)g(PL,)h(the)-4 2634 y(system)h(schedules)h(the)g(task)f
(from)g(the)g(head)h(or)f(the)g(tail)g(of)g(the)g(base)h(PL,)g(depending)f
(on)h(whether)e fh(f)19 b fq(is)-4 2712 y(monotonically)8 b(increasing)i(or)f
(decreasing.)18 b(Since)10 b(the)g(function)f fh(f)15 b fq(is)10 b(a)g(user)o
(-de\256ned)g(runtime)e(function)908 2836 y(16)p eop
%%Page: 17 31
 bop 75 53 a fq(and)13 b(it)f(can)h(also)g(depend)g(on)f(some)h(runtime)f(inf\
ormation,)f(this)i(potentially)f(provides)g(a)h(simple)g(way)f(to)75 132 y
(dynamically)g(change)g(priorities,)g(though)g(we)g(have)g(not)h(found)e(an)i
(appropriate)e(example)h(to)g(present)g(in)75 210 y(this)g(thesis.)148 355 y
(The)19 b(above)e(de\256nition)g(captures)h(the)g(essence)h(of)e(the)h(multil\
ist)f(scheduling)h(model.)34 b(Chapter)18 b(4)75 433 y(will)g(show)h(that)g
(the)f(addition)g(of)g(parameters)h(for)e(tasks,)22 b(PLs,)f(and)e(VLs)g(can)
g(further)e(improve)h(the)75 512 y(performance)11 b(of)h(the)h(system.)19 b
(For)12 b(example,)h(the)f(programmer)f(can)h(give)h(an)f(estimated)h(grain)f
(size)h(for)75 590 y(each)h(task)f(so)h(that)f(our)g(system)h(can)f(use)h(it)
f(to)h(balance)f(the)g(load.)22 b(Appendix)12 b(A)i(presents)f(the)h(interfac\
e)75 668 y(for)e(the)g(model.)148 813 y(After)e(the)i(programmers)d(specify)i
(the)g(above)h(information,)e(they)h(can)g(assume)h(that)f(the)g(system)g(wil\
l)75 892 y(schedule)18 b(tasks)h(in)f(an)g(order)g(roughly)f(corresponding)g
(to)h(the)g(speci\256ed)g(priorities.)34 b(However)n(,)20 b(this)75 970 y(ord\
er)13 b(may)h(vary)g(slightly)g(for)f(heuristic)h(reasons.)25 b(So,)14 b(prog\
rammers)f(should)h(not)g(reply)g(on)g(priorities)75 1048 y(for)e(program)f
(correctness.)75 1312 y ft(2.4)71 b(Discussion)75 1509 y fq(If)11 b(a)i(progr\
ammer)d(wants)j(to)e(implement)h(a)g(scheduling)g(algorithm)f(without)g(the)h
(help)g(of)g(our)g(model,)g(he)75 1587 y(or)g(she)h(needs)g(to)f(do)g(the)g
(following)g(work.)135 1774 y(1.)25 b(Set)12 b(up)g(the)h(scheduling)f(patter\
n)g(for)f(the)i(scheduling)f(algorithm.)135 1894 y(2.)25 b(Assign)13 b(priori\
ties)e(\(and)h(some)h(other)f(parameters\))f(to)h(each)h(task.)135 2014 y(3.)
25 b(Implement)11 b(each)i(PL)g(in)f(the)g(pattern.)135 2134 y(4.)25 b(Implem\
ent)11 b(the)i(details)f(of)g(scheduling)g(tasks)h(from)f(VLs)h(according)f
(to)g(the)g(pattern.)148 2321 y(The)18 b(multilist)e(scheduling)g(model)h(suc\
cessfully)g(decomposes)g(the)g(above)g(work)f(into)h(two)f(parts:)75 2399 y
(the)g(\256rst)f(two)g(items)h(and)f(the)h(last)g(two)f(items.)28 b(Programme\
rs)14 b(only)h(need)h(to)f(specify)h(the)f(scheduling)75 2477 y(policy)i(in)h
(the)g(\256rst)f(part,)j(while)d(the)h(second)g(part)g(\(the)f(details)h(of)f
(maintaining)g(PLs)i(and)f(VLs\))g(can)75 2555 y(be)e(hidden)f(from)g(program\
mers.)27 b(In)15 b(fact,)h(maintaining)f(PLs)h(and)g(VLs)h(is)f(the)f(most)h
(dif)n(\256cult)f(part)h(of)75 2634 y(writing)11 b(a)g(scheduling)h(algorithm\
.)17 b(Maintaining)11 b(VLs)i(is)e(especially)h(complicated)g(due)f(to)h(the)
f(need)h(for)75 2712 y(interprocessor)g(communication.)988 2836 y(17)p eop
%%Page: 18 32
 bop 69 53 a fq(The)19 b(decomposition)g(of)g(the)g(task)g(scheduling)g(proce\
ss)h(allows)f(the)g(programmers)f(to)h(focus)g(on)-4 132 y(designing)f(ef)o
(\256cient)g(scheduling)h(algorithms,)h(while)e(allowing)h(the)f(system)h(des\
igners)g(to)g(focus)g(on)-4 210 y(designing)d(ef)o(\256cient)h(supportive)f
(routines.)32 b(In)17 b(the)g(former)f(case,)j(programmers)d(are)h(encouraged)
g(to)-4 288 y(design)k(more)f(interesting)g(and)h(ef)o(\256cient)g(scheduling)
g(algorithms,)h(which)f(are)g(hard)g(to)f(implement)-4 366 y(without)13 b(the)
i(help)f(of)g(our)g(system.)25 b(Chapter)15 b(3)f(will)g(illustrate)g(several)
h(scheduling)f(algorithms)g(based)-4 445 y(on)f(this)g(model.)20 b(In)13 b
(the)g(latter)g(case,)h(the)g(system)f(designers)h(can)f(continue)g(to)g(deve\
lop)g(better)g(methods)-4 523 y(to)f(optimize)h(the)g(performance)f(of)h(the)
g(supportive)f(routines.)20 b(Chapter)13 b(4)g(will)g(propose)g(some)g(ef)o
(\256cient)-4 601 y(techniques)f(to)g(maintain)g(VLs)h(and)g(PLs)g(for)e(the)
h(current)g(implementation.)69 746 y(In)k(addition,)i(we)f(ar)o(gue)g(that)f
(it)h(is)g(easy)h(for)e(\(scheduling\))g(programmers)f(to)i(specify)g(schedul\
ing)-4 825 y(policies)e(\(items)f(1)h(and)g(2\))g(based)h(on)f(the)g(multilis\
t)f(scheduling)h(system.)27 b(When)15 b(programmers)f(come)-4 903 y(up)g(with)
h(scheduling)g(algorithms,)h(the)f(programmers)f(usually)h(can)g(easily)g(\
\256gure)g(out)g(the)g(scheduling)-4 981 y(sequences)e(of)f(tasks)h(\(actuall\
y)e(they)h(are)h(just)f(the)g(task)h(sequences)g(in)f(VLs\).)19 b(Therefore,)
12 b(we)h(ar)n(gue)g(that)-4 1059 y(they)i(should)h(be)g(able)h(to)e(specify)
h(the)g(scheduling)g(patterns)g(and)g(to)g(assign)h(priorities)e(correspondin\
g)-4 1138 y(to)h(the)h(scheduling)g(sequences.)33 b(W)l(e)17 b(illustrate)f
(the)h(simplicity)f(of)g(implementing)g(many)h(scheduling)-4 1216 y(algorithm\
s)e(based)i(on)f(this)h(model)f(in)g(the)g(next)h(chapter)l(.)31 b(At)16 b
(least,)i(it)f(is)f(less)i(painful)d(to)h(implement)-4 1294 y(scheduling)10 b
(algorithms)g(based)h(on)g(our)f(model)h(than)f(to)h(write)f(task)h(schedulin\
g)g(routines)f(from)g(scratch.)908 2836 y(18)p eop
%%Page: 19 33
 bop 75 490 a fk(Chapter)25 b(3)75 802 y(Examples)h(of)g(Scheduling)e(Algorit\
hms)75 1113 y fq(This)18 b(chapter)e(will)h(develop)f(multilist)h(scheduling)
f(schemes)i(for)e(several)h(scheduling)g(algorithms)f(to)75 1191 y(demonstrat\
e)c(how)g(easily)h(the)f(model)g(can)g(be)h(utilized)f(and)g(how)g(widely)g
(the)g(model)g(can)h(be)f(applied)g(to)75 1269 y(applications.)17 b(Section)8
b(3.1)i(will)e(show)h(several)g(main)g(examples)g(of)g(scheduling)g(algorithm\
s,)g(each)g(using)75 1348 y(one)k(distinct)f(scheduling)h(pattern)g(\(de\256n\
ed)f(in)g(Section)h(2.3\).)19 b(Section)13 b(3.2)g(will)f(show)i(other)e(exam\
ples)75 1426 y(of)j(scheduling)h(algorithms)f(whose)h(scheduling)g(patterns)g
(are)g(the)f(same)i(as)f(the)g(ones)g(in)g(Section)f(3.1.)75 1504 y(Finally)l
(,)e(Section)f(3.3)g(will)g(give)h(some)f(more)g(discussion.)75 1869 y ft(3.1)
71 b(Main)17 b(Examples)75 2086 y fq(This)11 b(section)f(will)g(show)g(severa\
l)g(main)g(examples)h(of)e(scheduling)h(algorithms,)h(each)f(using)g(one)g
(distinct)75 2164 y(scheduling)j(pattern.)18 b(Section)13 b(3.1.1)g(will)f
(propose)h(two)f(multilist)g(scheduling)h(schemes)g(to)g(implement)75 2242 y
(two)20 b(dif)o(ferent)f(scheduling)h(algorithms)g(for)f(parallel)h(best-\256\
rst)g(search.)42 b(In)20 b(both)g(of)g(the)g(schemes,)75 2321 y(each)13 b(pro\
cessor)g(needs)g(to)g(create)g(one)g(physical)g(list)g(\(PL\).)25 b(Section)
13 b(3.1.2)g(will)g(propose)f(two)h(multilist)75 2399 y(scheduling)g(schemes)
g(to)g(implement)e(two)i(dif)n(ferent)f(scheduling)h(algorithms)e(for)h(paral\
lel)g(divide-and-)75 2477 y(conquer)m(.)41 b(In)20 b(both)f(of)h(the)g(scheme\
s,)j(each)d(processor)g(needs)h(to)e(create)h(two)g(PLs.)42 b(Section)19 b
(3.1.3)75 2555 y(will)d(propose)g(a)g(multilist)g(scheduling)g(scheme)g(to)g
(implement)g(a)g(scheduling)g(algorithm)f(for)h(parallel)75 2634 y(synchronou\
s)f(network)g(simulation)g(problems.)27 b(In)15 b(this)h(scheme,)h(each)e(pro\
cessor)h(needs)g(to)f(create)h fh(p)75 2712 y fq(PLs,)d(if)f(there)g(are)h fh
(p)g fq(processors.)988 2836 y(19)p eop eos end TeXDict begin bos 300 @start
/fa df[<FFFFFFFFE0FFFFFFFFF07000001FF078000001F03C000000781C000000180E0000000C
0F000000040700000004038000000203C000000001E000000000E0000000007000000000780000
000038000000001C000000001E000000000F000000000700000000038000000003800000000300
000000070000000006000000000C000000001800000000380000000030000000006000000000C0
00000001C00000000180000002030000000406000000040E0000000C0C00000018180000007830
000001F07000001FF07FFFFFFFF0FFFFFFFFE0>39 42 2 42 44]80 dc dfe /fb 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 8 10 12 12 21 19 8 8 8
12 14 6 8 6 7 12 12 12 12 12 12 12 12 12 12 7 7 14 14 14 11 23 18 17 17 18 15
14 18 18 8 10 18 15 22 18 18 14 18 17 14 15 18 18 24 18 18 15 8 7 8 12 12 8 11
12 11 12 11 8 12 12 7 7 12 7 19 12 12 12 12 8 10 7 12 12 18 12 12 11 12 5 12
13 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 12 12
4 12 12 12 12 4 11 12 8 8 14 14 0 12 12 12 6 0 11 9 8 11 11 12 25 25 0 11 0 8
8 8 8 8 8 8 8 0 8 8 0 8 8 8 25 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 22 0 7 0 0 0 0
15 18 22 8 0 0 0 0 0 17 0 0 0 7 0 0 7 12 18 12 0 0 0 0 /Times-Roman 1000
393216 rf /fc df[<000001800000078000001E00000078000001E00000078000001E00000078
000001E00000078000001E00000078000000E0000000780000001E0000000780000001E0000000
780000001E0000000780000001E0000000780000001E0000000780000001800000000000000000
00000000000000000000000000000000000000007FFFFF00FFFFFF80>25 34 3 8 32]20 dc[<
C0000000F00000003C0000000F00000003C0000000F00000003C0000000F00000003C0000000F0
0000003C0000000F000000038000000F0000003C000000F0000003C000000F0000003C000000F0
000003C000000F0000003C00000070000000C00000000000000000000000000000000000000000
00000000000000000000007FFFFF00FFFFFF80>25 34 3 8 32]21 dc[<7FC0FFC0C000C000C0
00C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000
C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C0004000>10 42
7 11 18]100 dc[<FFC0FFC000C000C000C000C000C000C000C000C000C000C000C000C000C000
C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C0
00C000C000C000C000C000C00040>10 42 0 11 18]101 dc dfe /fd df[<003F800000E0E000
0380380007001C000E000E001C0007003C00078038000380780003C0780003C0700001C0F00001
E0F10011E0F1FFF1E0F1FFF1E0F1FFF1E0F10011E0F00001E0F00001E0700001C0780003C07800
03C0380003803C0007801C0007000E000E0007001C000380380000E0E000003F8000>27 30 2 1
32]2 dc[<007F000003C1E000070070001C001C003C001E0038000E0078000F0070000700F000
0780F0000780F0000780F0000780F00007807000070078000F0078000F0038000E001C001C001C
001C000E00380006003000060030008300608081004080810040804180C1007F80FF007F80FF00
7F80FF00>25 29 2 0 30]10 dc[<004000800100020006000C000C0018001800300030007000
600060006000E000E000E000E000E000E000E000E000E000E000E000E000600060006000700030
003000180018000C000C0006000200010000800040>10 42 3 11 16]40 dc[<80004000200010
0018000C000C000600060003000300038001800180018001C001C001C001C001C001C001C001C0
01C001C001C001C0018001800180038003000300060006000C000C0018001000200040008000>
10 42 2 11 16]41 dc[<7FFFFFC0FFFFFFE00000000000000000000000000000000000000000
000000000000000000000000FFFFFFE07FFFFFC0>27 12 2 -4 32]61 dc dfe /fe df[<0003
F800000E0E000038038000E001C001C001C0038000E0070000E00F0000F01E0000F01C0000F03C
0000F03C0000F0780000F0780000F0780000F0F00001E0F00001E0F00001E0F00003C0F00003C0
F0000780F0000780F0000F0070000E0070001C00380038003C0070001C01C0000707800001FC00
00>28 30 2 1 32]79 dc[<01F0030C0E0C1C1E383C301870007000E000E000E000E000E000E0
046008601030601F80>15 18 2 0 18]99 dc[<0001E0000630000E78000CF0001C60001C0000
1C00001C00003C0000380000380003FFC000380000380000700000700000700000700000700000
E00000E00000E00000E00000E00001C00001C00001C00001C00001C00001800003800003800063
0000F30000F60000E40000780000>21 37 2 8 20]102 dc[<007180018B800307800607800E07
000C07001C07001C0700380E00380E00380E00380E00381C00381C00381C00183C0008F8000738
00003800003800007000607000F06000F0E000E180007E0000>17 26 1 8 20]103 dc[<381F00
4E61804681C04701C08F01C08E01C00E01C00E01C01C03801C03801C03801C0700380710380710
380E10380E20700640300380>20 18 2 0 25]110 dc[<07878008C84010F0C020F1E020E3C040
E18000E00000E00001C00001C00001C00001C000638080F38080F38100E5810084C600787800>
19 18 2 0 24]120 dc dfe /ff df[<0102040C1818303070606060E0E0E0E0E0E0E0E0E0E060
606070303018180C040201>8 34 3 9 14]40 dc[<8040203018180C0C0E060606070707070707
070707070606060E0C0C181830204080>8 34 2 9 14]41 dc[<00300000300000300000300000
3000003000003000003000003000003000003000FFFFFCFFFFFC00300000300000300000300000
3000003000003000003000003000003000003000>22 24 2 4 27]43 dc dfe /fg 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 15 19 32 29 29 58 48 19
19 19 29 33 15 19 15 16 29 29 29 29 29 29 29 29 29 29 19 19 33 33 33 29 54 42
39 42 42 39 36 45 45 23 29 45 39 55 42 45 36 45 42 32 39 42 42 58 42 42 39 19
16 19 34 29 19 29 32 26 32 26 19 29 32 16 19 32 16 48 32 29 32 32 26 23 19 32
29 42 29 29 26 23 13 23 30 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 19 29 29 10 29 29 29 29 16 29 29 19 19 32 32 0 29 29 29 15 0
31 20 19 29 29 29 58 58 0 29 0 19 19 19 19 19 19 19 19 0 19 19 0 19 19 19 58 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 58 0 17 0 0 0 0 39 45 58 19 0 0 0 0 0 42 0 0 0
16 0 0 16 29 42 32 0 0 0 0 /Times-Bold 1000 917504 rf /fh df[<040C000000000070
58989830306064646830>6 18 2 0 11]105 dc dfe /fi df[<FFFFF0FFFFF0>20 2 3 -7 27]
0 dc[<060F0F0E1E1E1C3C383830707060E0C040>8 17 1 -1 10]48 dc[<01FF8007FF800E00
00180000300000600000600000600000C00000C00000FFFF80FFFF80C00000C000006000006000
006000003000001800000E000007FF8001FF80>17 22 3 3 24]50 dc[<FFFFF8FFFFF8006000
006000006000006000006000006000006000006000006000006000006000006000006000006000
006000006000006000006000006000002000>21 22 3 0 27]62 dc[<0000004001FFFF8007FF
FF0008030000100700002006000060060000C00E0000800E0000000C0000000C0000001C000000
1C00000018000000180000003800000030000000300000006000000060000000C0000000800000
07FC00000FF80000>26 24 1 0 19]84 dc dfe /fj 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 10 12 15 15 24 23 10 10 10 15 16 7 10 7 8 15
15 15 15 15 15 15 15 15 15 8 8 16 16 16 13 27 21 19 19 21 18 16 21 21 10 11 21
18 26 21 21 16 21 19 16 18 21 21 27 21 21 18 10 8 10 14 15 10 13 15 13 15 13
10 15 15 8 8 15 8 23 15 15 15 15 10 11 8 15 15 21 15 15 13 14 6 14 16 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 15 15 5 15 15
15 15 5 13 15 10 10 16 16 0 15 15 15 7 0 13 10 10 13 13 15 29 29 0 13 0 10 10
10 10 10 10 10 10 0 10 10 0 10 10 10 29 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 26 0 8
0 0 0 0 18 21 26 9 0 0 0 0 0 19 0 0 0 8 0 0 8 15 21 15 0 0 0 0 /Times-Roman
1000 458752 rf /fk df[<780218061806180C300C301830183030606060C061806600DC00E0
00>15 14 2 0 17]23 dc[<60F0F070101020204040>4 10 3 6 10]59 dc[<001F8100F06201
801607000E0E000E1C0004380004300004700004600000E00000E00000E00000C007FEC00070C0
0070E00070E000E06000E07000E03001E00C06C003F840>24 23 2 0 27]71 dc[<07FF0000E0
0000E00000E00000E00001C00001C00001C00001C0000380000380000380000380000700000700
080700080700100E00100E00300E00200E00601C01E0FFFFC0>21 23 1 0 24]76 dc[<071018
F0307060706060C060C060C06080C080C480C4C1C446C83870>14 14 2 0 19]97 dc[<00E203
1E060E0C0E0C0C180C180C180C101810181018183808F00730003000306060E060C1C07F00>15
20 0 6 17]103 dc[<1F0006000600060006000C000C000C000C0018F01B181C08180838183018
301830306030603160616062C022C03C>16 23 2 0 20]104 dc[<030003800300000000000000
0000000000001C002400460046008C000C0018001800180031003100320032001C00>9 23 1 0
12]105 dc[<00180038001000000000000000000000000001C002200430043008600060006000
6000C000C000C000C001800180018001806300E300C6007800>13 29 0 6 14]106 dc[<1F0006
000600060006000C000C000C000C00181C1866188E190C32003C003F00318060C060C460C460C8
C0C8C070>15 23 2 0 18]107 dc[<3E0C0C0C0C181818183030303060606060C0C8C8C8D070>
7 23 2 0 11]108 dc[<383C1E0044C6630047028100460301008E0703000C0603000C0603000C
060600180C0600180C0620180C0C20180C0C403018044030180780>27 14 1 0 31]109 dc[<38
3C0044C6004702004602008E06000C06000C06000C0C00180C00180C4018184018188030088030
0F00>18 14 1 0 21]110 dc[<07C00C20101020186018C018C018C01880308030C060C0C06180
3E00>13 14 2 0 17]111 dc[<1C3C22462382230346030603060306030C060C060C0C0C081A30
19E018001800300030003000FC00>16 20 0 6 18]112 dc[<38F04518463846308C000C000C00
0C00180018001800180030003000>13 14 1 0 16]114 dc[<07C00C201870187038001E000FC0
03E000606060E060C0C0C1803F00>12 14 2 0 16]115 dc[<030003000600060006000600FFC0
0C000C000C001800180018001800300030803080310031001E00>10 20 1 0 13]116 dc[<1C02
00260600460600460600860C000C0C000C0C000C0C001818001818801818801838800C5900078E
00>17 14 1 0 20]117 dc[<1C04260E4606460686040C040C040C0418081808181018100C6007
80>15 14 1 0 17]118 dc[<0F1F0011A18020C38020C300418000018000018000018000030000
030200C30200E70400C5080078F000>17 14 1 0 20]120 dc dfe /fl df[<000FE00000783C
0000E00E0003C00780078003C00F0001E00E0000E01E0000F03E0000F83C0000787C00007C7C00
007C7800003C7800003CF840043EF840043EF87FFC3EF87FFC3EF87FFC3EF840043EF840043EF8
00003EF800003E7800003C7C00007C7C00007C3C0000783C0000781E0000F00E0000E00F0001E0
078003C003C0078000E00E0000783C00000FE000>31 36 3 1 38]2 dc[<001FE00000F03C0001
C00E00078007800F0003C01F0003E01E0001E03E0001F03C0000F07C0000F87C0000F87C0000F8
7C0000F87C0000F87C0000F87C0000F83C0000F03E0001F03E0001F01E0001E01E0001E00E0001
C00F0003C00700038003000300038007000180060081800604808004044080040840C00C084040
08087FC00FF83FC00FF03FC00FF0>30 35 2 0 35]10 dc[<0020004000800100030006000400
0C000C00180018003000300030007000600060006000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E0006000600060007000300030003000180018000C000C00040006000300
0100008000400020>11 50 4 13 19]40 dc[<800040002000100018000C000400060006000300
030001800180018001C000C000C000C000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000C000C000C001C0018001800180030003000600060004000C001800100020004000
8000>11 50 3 13 19]41 dc[<0001800000018000000180000001800000018000000180000001
8000000180000001800000018000000180000001800000018000000180000001800000018000FF
FFFFFEFFFFFFFE0001800000018000000180000001800000018000000180000001800000018000
0001800000018000000180000001800000018000000180000001800000018000>31 34 3 5 38]
43 dc[<FFFFFFFEFFFFFFFE000000000000000000000000000000000000000000000000000000
0000000000FFFFFFFEFFFFFFFE>31 12 3 -6 38]61 dc dfe /fm 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 11 14 17 17 28 26 11 11 11 17 19 8
11 8 9 17 17 17 17 17 17 17 17 17 17 9 9 19 19 19 15 31 24 22 22 24 20 18 24
24 11 13 24 20 30 24 24 18 24 22 18 20 24 24 31 24 24 20 11 9 11 16 17 11 15
17 15 17 15 11 17 17 9 9 17 9 26 17 17 17 17 11 13 9 17 17 24 17 17 15 16 7 16
18 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 17
17 6 17 17 17 17 6 15 17 11 11 18 18 0 17 17 17 8 0 15 12 11 15 15 17 33 33 0
15 0 11 11 11 11 11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 30 0 9 0 0 0 0 20 24 30 10 0 0 0 0 0 22 0 0 0 9 0 0 9 17 24 17 0 0 0 0
/Times-Roman 1000 524288 rf /fn df[<003F000000E180000380C020070060400E0070401C
0070403C0070803C003880780039007800390078003A00F0003A00F0003C00F0003800F0003800
70003800700078003000B800380338401C1C188007E00F00>27 21 2 0 31]11 dc[<00007C00
000183000002018000040180000801C0001001C0002001C0002001C0004001C000400380008003
80008003000080070001000E000107FC0001083800010FDC0002000E0002000E0002000F000200
0F0004000F0004000F0004000F0004000F0008001E0008001E0008001C0008003C001400380014
0070001400E0001201C00021838000207C00002000000020000000400000004000000040000000
4000000080000000800000008000000080000000>26 45 2 10 28]12 dc[<0F00187F00380F00
380E00700E00700E00700E00E01C00E01C01C01C01801C0380380700380600380C003818007030
0070600070C000730000FC0000F00000>21 21 3 0 24]23 dc[<07FFFF1FFFFF3FFFFF304100
40410080410080C3000082000082000182000182000106000306000307000707000607000E0700
0E07001C03801C0380180300>24 21 2 0 28]25 dc[<00002000004000004000004000004000
0080000080000080000080000100000100000100000100000200001FC000F27001821807040C0E
04061C0406180407380807700807700807700807E0100EE0100EE0100C60101C60203870203030
20E01821C00E470003F80000400000400000800000800000800000800001000001000001000001
0000>24 45 3 10 29]30 dc[<0000001800000078000001E00000078000001E00000078000003
E000000F8000003C000000F0000003C000000F0000003C000000F0000000F00000003C0000000F
00000003C0000000F00000003C0000000F80000003E0000000780000001E0000000780000001E0
0000007800000018>29 28 4 2 38]60 dc[<0000800001800001800003000003000003000006
00000600000600000C00000C00000C000018000018000018000030000030000030000060000060
0000600000C00000C00000C0000180000180000180000180000300000300000300000600000600
000600000C00000C00000C00001800001800001800003000003000003000006000006000006000
00C00000C00000C00000>17 49 3 12 24]61 dc[<C0000000F00000003C0000000F00000003C0
000000F00000003E0000000F80000001E0000000780000001E0000000780000001E00000007800
000078000001E00000078000001E00000078000001E000000F8000003E000000F0000003C00000
0F0000003C000000F0000000C0000000>29 28 4 2 38]62 dc[<00007F00800003808100000E
00630000380027000070001F0000E0000E0001C0000E000380000E000700000E000F000004000E
000004001E000004003C000004003C00000800780000000078000000007800000000F000000000
F000000000F000000000F000000000F000000000E000000000E000002000E000002000E0000040
00E000004000F00000800070000080007000010000380002000018000400001C00080000060030
00000381C0000000FE000000>33 36 3 1 35]67 dc[<007FFFFFC000078003C000078000C000
078000C0000F0000C0000F0000C0000F000080000F000080001E000080001E000080001E008080
001E008000003C010000003C010000003C030000003C070000007FFE0000007806000000780600
00007806000000F004000000F004000000F004010000F000020001E000020001E000020001E000
040001E0000C0003C000080003C000180003C000300003C000700007C003F000FFFFFFE000>34
34 2 0 36]69 dc[<00007F00400003C0C080000E002180001C0013800070000F8000E0000700
01C0000700038000070007000007000F000002000E000002001E000002003C000002003C000004
00780000000078000000007800000000F000000000F000000000F000000000F000000000F0003F
FF00E00000F000E00000F000E00000F000E00001E000F00001E000F00001E000700001E0007000
03C000380003C000180007C0000C0009C00006001180000380E08000007F000000>34 36 3 1
38]71 dc[<007FFE000007C0000007800000078000000F0000000F0000000F0000000F0000001E
0000001E0000001E0000001E0000003C0000003C0000003C0000003C0000007800000078000000
7800000078000000F0000000F0000000F0001000F0001001E0002001E0002001E0004001E00040
03C000C003C0008003C0018003C0078007C01F00FFFFFF00>28 34 2 0 33]76 dc[<00007F00
000381C0000E0060003800380070003800E0001C01C0001E0380000E0700000E0F00000F0E0000
0F1C00000F3C00000F3C00000F7800000F7800000F7800000FF000001EF000001EF000001EF000
003CF000003CF000003CE0000078E0000078E00000F0F00000E0F00001E0F00003C07000078078
00070038000E001C0038000E0070000783C00000FE0000>32 36 3 1 37]79 dc[<007FFFF000
0007801C000007800F000007800700000F000380000F000380000F000380000F000380001E0007
80001E000780001E000780001E000F00003C000F00003C001E00003C003C00003C007000007801
E000007FFF00000078000000007800000000F000000000F000000000F000000000F000000001E0
00000001E000000001E000000001E000000003C000000003C000000003C000000003C000000007
C0000000FFFC000000>33 34 2 0 31]80 dc[<FFF8007FC00F80000F000F00000C000F000008
000F000010000F8000100007800020000780006000078000400007800080000780008000078001
0000078002000007C002000003C004000003C00C000003C008000003C010000003C010000003C0
20000003E040000003E040000001E080000001E180000001E100000001E200000001E200000001
E400000001F800000000F800000000F000000000E000000000E000000000C000000000C0000000
>34 35 3 1 28]86 dc[<00786001C4E00302E00601C00E01C01C01C03C01C038038078038078
0380780380F00700F00700F00700F00708F00E10700E10701E1030262018C6200F01C0>21 21 2
0 26]97 dc[<003F0000E0800380C00701C00E03C01C03C03C00003C0000780000780000780000
F00000F00000F00000F000007000407000403001803802001C1C0007E000>18 21 2 0 21]99
dc[<00001E00000063800000C7800001C7800001C3000001800000038000000380000003800000
0380000007000000070000000700000007000000FFF800000E0000000E0000000E0000000E0000
000E0000000E0000001C0000001C0000001C0000001C0000001C00000038000000380000003800
000038000000380000007000000070000000700000007000000060000000E0000000E0000000E0
000000C0000070C00000F1800000F1000000620000003C000000>25 45 2 10 24]102 dc[<00
F0000FE00000E00000E00000E00001C00001C00001C00001C00003800003800003800003800007
0000071F0007218007C0C00F00E00F00E00E00E00E00E01C01C01C01C01C01C01C01C038038038
0380380700380704700708700E08700E08700610E006206003C0>22 35 3 0 28]104 dc[<00E0
00E001E000C00000000000000000000000000000000000001E0023004380438083808380870007
000E000E000E001C001C0038003820384070407040308031001E00>11 34 2 0 17]105 dc[<00
00E00001E00001E00000C000000000000000000000000000000000000000000000000000000000
1E00002300004380008380010380010380010380000700000700000700000700000E00000E0000
0E00000E00001C00001C00001C00001C0000380000380000380000380000700000700000700070
E000F0C000F180006300003E0000>19 44 -1 10 20]106 dc[<00F0000FE00000E00000E00000
E00001C00001C00001C00001C0000380000380000380000380000700000700F00703080704380E
08780E10780E20300E40001C80001F00001FC0001C7000383800383800381C00381C1070382070
3820703820701840E00C80600700>21 35 3 0 25]107 dc[<01E01FC001C001C001C003800380
0380038007000700070007000E000E000E000E001C001C001C001C003800380038003800700070
0070007100E200E200E200620064001C00>11 35 3 0 15]108 dc[<3C07E01F00461830618047
201880C087401D00E087801E00E087801C00E087001C00E00E003801C00E003801C00E003801C0
0E003801C01C007003801C007003801C007007001C007007043800E007083800E00E083800E00E
083800E006107001C006203000C003C0>38 21 2 0 43]109 dc[<3C07C0461860472030874038
8780388700388700380E00700E00700E00700E00701C00E01C00E01C01C01C01C13801C2380382
3803823801847001883000F0>24 21 2 0 29]110 dc[<03C0F004631C04740E08780E08700708
700708700F00E00F00E00F00E00F00E00F01C01E01C01E01C01E01C03C03803803803803C07003
C0E0072180071E000700000700000E00000E00000E00000E00001C00001C00001C0000FFC000>
24 31 -1 10 24]112 dc[<007E0000810003008002018006038006030006000007000007F800
03FE0001FF00003F00000780000380700380F00300F00300E002004004003018000FE000>17 21
2 0 23]115 dc[<006000E000E000E000E001C001C001C001C00380FFFC038003800700070007
0007000E000E000E000E001C001C001C001C08381038103820182018C00700>14 31 1 0 18]
116 dc[<01E0F006310C081A1C101A3C201C3C201C18201C000038000038000038000038000070
0000700000700000700860E010F0E010F0E020E170404230803C1F00>22 21 2 0 28]120 dc
dfe /fo df[<FFFFFFFCFFFFFFFC>30 2 4 -11 39]0 dc[<00C00000C00000C00000C00000C0
00C0C0C0F0C3C038C7000EDC0003F00000C00003F0000EDC0038C700F0C3C0C0C0C000C00000C0
0000C00000C00000C000>18 21 3 -2 25]3 dc[<03F0000FFC001FFE003FFF007FFF807FFF80
FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC07FFF807FFF803FFF001FFE000FFC00
03F000>18 20 3 -2 25]15 dc[<C0000000F00000003C0000000F00000003C0000000F0000000
3C0000000F80000003E0000000780000001E0000000780000001E0000000780000001C00000078
000001E00000078000001E00000078000003E000000F8000003C000000F0000003C000000F0000
003C00000070000000C00000000000000000000000000000000000000000000000000000000000
0000000000007FFFFFF8FFFFFFFC>30 39 4 7 39]21 dc[<0000030000030000060000060000
0C00000C0000180000180000300000300000600000600000C00000C00000C00001800001800003
00000300000600000600000C00000C0000180000180000300000300000600000600000C00000C0
000180000180000300000300000300000600000600000C00000C00001800001800003000003000
00600000600000C00000400000>24 48 7 12 0]54 dc[<FFFFFFFEFFFFFFFE00030000000300
000003000000030000000300000003000000030000000300000003000000030000000300000003
000000030000000300000003000000030000000300000003000000030000000300000003000000
0300000003000000030000000300000003000000030000000300000003000000010000>31 32 4
0 39]62 dc[<0000000018001FFFFFE000FFFFFFC001FFFFFF0006001E00000E001E00001C003C
00003C003C000038003C000078007800007000780000C0007800000000F800000000F000000000
F000000000F000000001F000000001E000000001E000000001E000000003E000000003C0000000
03C000000003C00000000780000000078000000007000000000F000000000E000000001C000000
0018000000003000000001FFE0000003FFC000000FFF000000>37 35 1 0 27]84 dc[<7FF0FF
F0C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000
C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C0
00C000C000C000C000C000C000C000C0004000>12 50 9 13 22]100 dc[<FFF0FFF000300030
003000300030003000300030003000300030003000300030003000300030003000300030003000
300030003000300030003000300030003000300030003000300030003000300030003000300030
0030003000300030003000300010>12 50 0 13 22]101 dc dfe /fp 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 17 21 25 25 41 39 17 17 17 25
34 12 17 12 14 25 25 25 25 25 25 25 25 25 25 17 17 34 34 34 25 46 30 30 33 36
30 30 36 36 17 22 33 28 41 33 36 30 36 30 25 28 36 30 41 30 28 28 19 14 19 21
25 17 25 25 22 25 22 14 25 25 14 14 22 14 36 25 25 25 25 19 19 14 25 22 33 22
22 19 20 14 20 27 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 19 25 25 8 25 25 25 25 11 28 25 17 17 25 25 0 25 25 25 12 0 26 17 17
28 28 25 44 50 0 25 0 17 17 17 17 17 17 17 17 0 17 17 0 17 17 17 44 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 44 0 14 0 0 0 0 28 36 47 15 0 0 0 0 0 33 0 0 0 14 0 0 14
25 33 25 0 0 0 0 /Times-Italic 1000 786432 rf /fq 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 26 35 58 52 52 104 86 35 35 35 52 59 26 35
26 29 52 52 52 52 52 52 52 52 52 52 35 35 59 59 59 52 97 75 69 75 75 69 63 81
81 40 52 81 69 98 75 81 63 81 75 58 69 75 75 104 75 75 69 35 29 35 60 52 35 52
58 46 58 46 35 52 58 29 35 58 29 86 58 52 58 58 46 40 35 58 52 75 52 52 46 41
23 41 54 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
35 52 52 17 52 52 52 52 29 52 52 35 35 58 58 0 52 52 52 26 0 56 36 35 52 52 52
104 104 0 52 0 35 35 35 35 35 35 35 35 0 35 35 0 35 35 35 104 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 104 0 31 0 0 0 0 69 81 104 34 0 0 0 0 0 75 0 0 0 29 0 0 29 52
75 58 0 0 0 0 /Times-Bold 1000 1638400 rf /fr 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 17 28 25 25 50 41 17 17 17 25 28 12 17 12
14 25 25 25 25 25 25 25 25 25 25 17 17 28 28 28 25 46 36 33 36 36 33 30 39 39
19 25 39 33 47 36 39 30 39 36 28 33 36 36 50 36 36 33 17 14 17 29 25 17 25 28
22 28 22 17 25 28 14 17 28 14 41 28 25 28 28 22 19 17 28 25 36 25 25 22 20 11
20 26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17
25 25 8 25 25 25 25 14 25 25 17 17 28 28 0 25 25 25 12 0 27 17 17 25 25 25 50
50 0 25 0 17 17 17 17 17 17 17 17 0 17 17 0 17 17 17 50 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 50 0 15 0 0 0 0 33 39 50 16 0 0 0 0 0 36 0 0 0 14 0 0 14 25 36 28 0
0 0 0 /Times-Bold 1000 786432 rf /fs 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 10 14 17 21 21 35 32 14 14 14 21 23 10 14 10 12 21 21 21
21 21 21 21 21 21 21 12 12 23 23 23 18 38 30 28 28 30 25 23 30 30 14 16 30 25
37 30 30 23 30 28 23 25 30 30 39 30 30 25 14 12 14 19 21 14 18 21 18 21 18 14
21 21 12 12 21 12 32 21 21 21 21 14 16 12 21 21 30 21 21 18 20 8 20 22 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 14 21 21 7 21 21
21 21 7 18 21 14 14 23 23 0 21 21 21 10 0 19 15 14 18 18 21 42 42 0 18 0 14 14
14 14 14 14 14 14 0 14 14 0 14 14 14 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0
11 0 0 0 0 25 30 37 13 0 0 0 0 0 28 0 0 0 12 0 0 12 21 30 21 0 0 0 0
/Times-Roman 1000 655360 rf /ft 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 10 13 16 20 20 33 31 13 13 13 20 22 10 13 10 11 20 20 20 20
20 20 20 20 20 20 11 11 22 22 22 18 37 29 27 27 29 24 22 29 29 13 16 29 24 35
29 29 22 29 27 22 24 29 29 38 29 29 24 13 11 13 19 20 13 18 20 18 20 18 13 20
20 11 11 20 11 31 20 20 20 20 13 16 11 20 20 29 20 20 18 19 8 19 22 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 13 20 20 7 20 20 20
20 7 18 20 13 13 22 22 0 20 20 20 10 0 18 14 13 18 18 20 40 40 0 18 0 13 13 13
13 13 13 13 13 0 13 13 0 13 13 13 40 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 35 0 11 0
0 0 0 24 29 35 12 0 0 0 0 0 27 0 0 0 11 0 0 11 20 29 20 0 0 0 0 /Times-Roman
1000 629145 rf /fu 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 12 17 20 25 25 41 39 17 17 17 25 28 12 17 12 14 25 25 25 25 25 25 25 25 25
25 14 14 28 28 28 22 46 36 33 33 36 30 28 36 36 17 19 36 30 44 36 36 28 36 33
28 30 36 36 47 36 36 30 17 14 17 23 25 17 22 25 22 25 22 17 25 25 14 14 25 14
39 25 25 25 25 17 19 14 25 25 36 25 25 22 24 10 24 27 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 25 25 8 25 25 25 25 9 22 25 17
17 28 28 0 25 25 25 12 0 23 17 17 22 22 25 50 50 0 22 0 17 17 17 17 17 17 17
17 0 17 17 0 17 17 17 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 44 0 14 0 0 0 0 30 36
44 15 0 0 0 0 0 33 0 0 0 14 0 0 14 25 36 25 0 0 0 0 /Times-Roman 1000 786432
rf /fv 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 18 23
39 35 35 71 59 23 23 23 35 40 18 23 18 20 35 35 35 35 35 35 35 35 35 35 23 23
40 40 40 35 66 51 47 51 51 47 43 55 55 27 35 55 47 67 51 55 43 55 51 39 47 51
51 71 51 51 47 23 20 23 41 35 23 35 39 31 39 31 23 35 39 20 23 39 20 59 39 35
39 39 31 27 23 39 35 51 35 35 31 28 16 28 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 23 35 35 12 35 35 35 35 20 35 35 23 23 39 39
0 35 35 35 18 0 38 25 23 35 35 35 71 71 0 35 0 23 23 23 23 23 23 23 23 0 23 23
0 23 23 23 71 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 71 0 21 0 0 0 0 47 55 71 23 0 0
0 0 0 51 0 0 0 20 0 0 20 35 51 39 0 0 0 0 /Times-Bold 1000 1114112 rf end
 TeXDict begin @letter
%%Page: 20 34
 bop -4 53 a fg(3.1.1)57 b(Parallel)14 b(Best-First)g(Sear)o(ch)-4 233 y fp
(Best-\256rst)20 b(sear)o(ch)g fu(\()p fp(BFS)p fu(\))f(is)h(a)g(common)f(com\
putation)f(paradigm,)j(in)f(which)f(the)h(program)e(always)-4 311 y(schedules)
11 b(the)h(best)f(task)g(among)g(all)g(possible)h(tasks)g(for)e(execution.)18
b(Examples)11 b(of)g(BFS)g(computations)-4 389 y(include)d(some)g fp(branch-a\
nd-bound)f fu(\()p fp(B&B)p fu(\))h(problems)g(such)h(as)g(the)f(traveling)g
(salesman)h(problem)e(\(TSP\))-4 467 y([29)o(],)12 b(and)h(some)f(state-space)
h(search)g(problems)f(such)h(as)g(the)f(15-puzzle)g([75)o(].)69 613 y(A)h(BFS)
f(computation)g(can)h(be)g(viewed)g(as)g(a)g(process)h(of)e(expanding)h(a)g
(tree.)19 b(Each)14 b(node)e(in)h(the)g(tree)-4 691 y(corresponds)j(to)h(a)g
(problem)f(instance,)j(and)e(children)g(of)f(the)h(node)g(correspond)f(to)h
(its)g(subproblems.)-4 769 y(Each)h(node)h(has)g(an)f(associated)h(cost)g(of)
f(its)g(corresponding)g(problem)f(instance.)37 b(The)18 b(computation)-4 847 y
(always)c(chooses)g(the)g(node)f(with)g(the)h(least)g(cost)g(for)f(execution.)
22 b(A)13 b(node)h(is)g(called)f(a)h fp(solution)g(node)f fu(if)-4 926 y(it)f
(represents)i(a)f(solution.)20 b(A)13 b(BFS)g(computation)g(tries)g(to)g(\256\
nd)f(among)h(all)g(the)g(solution)g(nodes)g(the)h(one)-4 1004 y(with)e(the)g
(least)h(cost.)69 1149 y(Most)e(BFS)f(algorithms)g(maintain)h(an)f(invariant)
g(property)l(,)i(called)e fp(admissibility)h fu([75)o(],)g(in)g(which)g(the)
-4 1227 y(cost)j(of)g(each)g(node)g(is)g(less)h(than)f(or)g(equal)g(to)g(the)
g(costs)h(of)e(its)h(children.)23 b(In)14 b(these)g(algorithms,)h(a)f(BFS)-4
1306 y(computation)h(terminates)h(when)h(it)f(has)h(found)f(some)g(solution)g
(nodes,)j(the)d(least)h(cost)g(among)f(which)-4 1384 y(is)g fn(C)80 1391 y fk
(min)147 1384 y fu(,)h(and)f(it)g(has)h(expanded)f(all)g(nodes)h(with)f(costs)
g(smaller)g(than)g fn(C)1317 1391 y fk(min)1384 1384 y fu(.)30 b(Since)16 b
(the)g(descendants)-4 1462 y(of)f(current)g(nodes)i(all)f(have)g(no)g(smaller)
g(costs)g(due)g(to)g(admissibility)l(,)i(we)e(will)g(not)g(be)g(able)g(to)g
(\256nd)f(a)-4 1540 y(solution)c(node)h(with)f(a)i(cost)f(smaller)f(than)h fn
(C)795 1547 y fk(min)862 1540 y fu(.)18 b(Thus,)13 b(the)f(node)g(with)f(cost)
i fn(C)1426 1547 y fk(min)1504 1540 y fu(is)g(the)e(result)h(of)g(this)-4 1619
y(computation.)-4 1840 y fr(3.1.1.1)50 b(Scheduling)11 b(Algorithm)h(Based)h
(on)f(a)g(Global)f(Priority)i(Queue)-4 2019 y fu(In)c(order)g(to)h(solve)h
(BFS)f(ef)n(\256ciently)g(in)g(parallel,)g(we)h(can)f(use)h(a)f(simple)g(sche\
duling)g(algorithm)f(requiring)-4 2097 y(a)14 b fp(global)g(priority)h(queue)
f fu(\()p fp(GPQ)p fu(\),)h(as)g(shown)f(in)h(Figure)e(3.1\(a\).)25 b(This)15
b(scheduling)f(algorithm)f(will)h(be)-4 2175 y(called)f fp(PBFS-GPQ)h fu(\(Pa\
rallel)f(BFS)g(with)g(a)g(GPQ\))g(in)g(this)h(thesis.)21 b(In)13 b(this)h(alg\
orithm,)f(each)g(new)h(node)-4 2254 y(corresponding)9 b(to)i(a)g(task)g(is)g
(inserted)g(into)f(the)h(GPQ)f(in)h(accordance)f(with)h(the)g(cost)g(associat\
ed)g(with)g(the)-4 2332 y(node;)k(each)g(processor)g(schedules)h(the)f(node)f
(with)h(the)f(least)i(cost)f(in)f(the)h(GPQ.)g(Zhang)g([108])f(proved)-4 2410
y(that)19 b(the)g(algorithm)f(can)h(balance)h(the)f(load)g(very)g(well)g(\(wi\
thout)f(considering)g(the)i(communication)-4 2488 y(overhead\).)69 2634 y(The)
c fp(PBFS-GPQ)i fu(scheduling)e(algorithm)e(described)i(above)h(can)f(be)g
(easily)g(implemented)g(in)g(the)-4 2712 y(multilist)8 b(scheduling)i(model.)
17 b(The)11 b(algorithm,)e(whose)h(scheduling)g(pattern)f(is)h(shown)g(in)g
(Figure)f(3.1\(b\),)908 2836 y(20)p eop
%%Page: 21 35
 bop 75 2324 a @beginspecial @setspecial
%%BeginDocument: fig/pbfs.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 8 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Bold FMDEFINEFONT
1 14 /Courier-Oblique FMDEFINEFONT
2 12 /Times-Roman FMDEFINEFONT
3 12 /Times-Italic FMDEFINEFONT
4 10 /Times-Italic FMDEFINEFONT
5 12 /Courier-Oblique FMDEFINEFONT
6 10 /Courier-Oblique FMDEFINEFONT
7 11 /Courier-Oblique FMDEFINEFONT
612 792 0 FMBEGINPAGE
0 F
0 X
0 K
(\050b\051) 223.6 9.72 T
(\050a\051) 223.85 309.32 T
361.53 361.9 371.6 355.37 359.6 355.58 360.57 358.74 4 Y
4 X
V
231.2 397 361.53 358.44 2 L
0.5 H
2 Z
N
102.8 355.58 90.8 355.37 100.86 361.9 101.83 358.74 4 Y
V
231.2 397 100.88 358.44 2 L
N
233.65 365.54 230.34 354 227.03 365.54 230.34 365.54 4 Y
V
230.34 396.04 230.34 364.54 2 L
N
1 F
0 X
(GPQ) 263.71 410.7 T
37.47 328.92 147.72 351.23 R
7 X
V
0 X
N
2 F
( ) 68.1 335.65 T
(CPU) 77.1 335.65 T
178.35 328.92 288.6 351.23 R
7 X
V
0 X
N
319.22 328.92 429.47 351.23 R
7 X
V
0 X
N
0 F
(...) 298.72 340.3 T
3 F
(P) 37.47 360.58 T
4 F
(1) 44.8 357.58 T
3 F
(P) 178.35 360.58 T
4 F
(2) 185.68 357.58 T
2 F
(CPU) 219.55 334.8 T
(CPU) 360.42 334.8 T
3 F
(P) 319.22 360.58 T
4 F
(p) 326.55 357.58 T
5 F
(PL) 80.37 245.76 T
6 F
(1) 94.76 242.76 T
5 F
(PL) 220.77 244.88 T
6 F
(2) 235.16 241.88 T
5 F
(PL) 361.17 245.31 T
6 F
(p) 375.57 242.31 T
30.75 26.6 153.25 280.2 R
4 X
N
171.62 26.6 294.12 280.2 R
N
312.5 26.6 435 280.2 R
N
37 189.8 147.25 272.7 R
0 X
N
177.87 189.8 288.12 272.7 R
N
318.75 189.8 428.99 272.7 R
N
2 F
(Memory) 184 256.59 T
(Memory) 324.87 256.59 T
(Memory) 43.12 256.59 T
1 F
(VL) 45.15 116.97 T
7 F
(1) 61.94 113.47 T
1 F
(VL) 186.75 116.87 T
7 F
(2) 203.54 113.37 T
1 F
(VL) 324.15 115.17 T
7 F
(P) 340.94 111.67 T
36.15 32 146.4 54.31 R
7 X
V
0 X
N
2 F
(CPU) 75.77 38.73 T
177.02 32 287.27 54.31 R
7 X
V
0 X
N
317.9 32 428.14 54.31 R
7 X
V
0 X
N
(...) 297.4 43.38 T
3 F
(P) 36.15 63.66 T
4 F
(1) 43.48 60.66 T
3 F
(P) 177.02 63.66 T
4 F
(2) 184.35 60.66 T
3 F
(P) 317.9 63.66 T
4 F
(p) 325.22 60.66 T
2 F
(CPU) 221.22 37.88 T
(CPU) 359.1 37.88 T
68.93 75.61 68.93 142.98 2 L
3 X
N
108.02 75.67 108.02 142.98 2 L
N
108.54 75.61 68.93 75.61 2 L
N
108.54 86.84 68.93 86.84 2 L
N
108.54 98.07 68.93 98.07 2 L
N
108.54 120.52 68.93 120.52 2 L
N
108.54 109.29 68.93 109.29 2 L
N
108.54 131.75 68.93 131.75 2 L
N
92.04 65.55 88.74 54.01 85.43 65.55 88.74 65.55 4 Y
V
88.74 75.61 88.74 64.55 2 L
N
212.94 75.61 212.94 142.98 2 L
N
252.02 75.67 252.02 142.98 2 L
N
252.54 75.61 212.94 75.61 2 L
N
252.54 86.84 212.94 86.84 2 L
N
252.54 98.07 212.94 98.07 2 L
N
252.54 120.52 212.94 120.52 2 L
N
252.54 109.29 212.94 109.29 2 L
N
252.54 131.75 212.94 131.75 2 L
N
236.04 65.55 232.74 54.01 229.43 65.55 232.74 65.55 4 Y
V
232.74 75.61 232.74 64.55 2 L
N
372.84 65.55 369.54 54.01 366.23 65.55 369.54 65.55 4 Y
V
369.54 75.61 369.54 64.55 2 L
N
80.68 197 80.68 238.4 2 L
0 X
N
98.68 197 98.68 238.4 2 L
N
98.68 197 80.68 197 2 L
N
98.68 211.4 80.68 211.4 2 L
N
98.68 225.8 80.68 225.8 2 L
N
221.08 197 221.08 238.4 2 L
N
239.08 197 239.08 238.4 2 L
N
239.08 197 221.08 197 2 L
N
239.08 211.4 221.08 211.4 2 L
N
361.48 197 361.48 238.4 2 L
N
379.48 197 379.48 238.4 2 L
N
379.48 197 361.48 197 2 L
N
379.48 211.4 361.48 211.4 2 L
N
379.48 225.8 361.48 225.8 2 L
N
92.83 160.68 89.53 149.15 86.22 160.68 89.53 160.68 4 Y
4 X
V
89.53 196.2 89.53 159.68 2 L
N
233.23 157.34 229.93 145.8 226.62 157.34 229.93 157.34 4 Y
V
229.93 196.2 229.93 156.34 2 L
N
373.63 158.68 370.33 147.15 367.02 158.68 370.33 158.68 4 Y
V
370.33 196.2 370.33 157.68 2 L
N
220.19 152.85 229.92 145.82 217.95 146.62 219.07 149.73 4 Y
V
89.53 196.2 220.02 149.38 2 L
N
360.44 156.21 370.32 149.41 358.33 149.93 359.39 153.07 4 Y
V
229.93 196.2 360.34 152.75 2 L
N
241.89 146.62 229.92 145.82 239.65 152.85 240.77 149.73 4 Y
V
370.33 196.2 239.84 149.38 2 L
N
101.51 149.93 89.53 149.41 99.41 156.21 100.46 153.07 4 Y
V
229.93 196.2 99.51 152.75 2 L
N
348.72 154.67 359.51 149.42 347.58 148.15 348.15 151.41 4 Y
V
89.53 196.2 349.15 151.22 2 L
N
112.25 148.15 100.32 149.42 111.11 154.67 111.68 151.41 4 Y
V
370.33 196.2 110.7 151.22 2 L
N
349.99 76.24 349.99 143.6 2 L
3 X
N
389.07 76.3 389.07 143.6 2 L
N
389.59 76.24 349.99 76.24 2 L
N
389.59 87.46 349.99 87.46 2 L
N
389.59 98.69 349.99 98.69 2 L
N
389.59 121.15 349.99 121.15 2 L
N
389.59 109.92 349.99 109.92 2 L
N
389.59 132.37 349.99 132.37 2 L
N
212.4 396.4 212.4 465.8 2 L
N
251.49 396.46 251.49 465.8 2 L
N
252 396.4 212.4 396.4 2 L
N
252 407.97 212.4 407.97 2 L
N
252 419.53 212.4 419.53 2 L
N
252 442.67 212.4 442.67 2 L
N
252 431.1 212.4 431.1 2 L
N
252 454.23 212.4 454.23 2 L
N
FMENDPAGE
%%EndDocument
 @endspecial 75 x fu(Figure)11 b(3.1:)17 b(Scheduling)11 b(algorithm)f(for)h
fp(PBFS-GPQ)p fu(:)h(\(a\))f(using)h(one)f(GPQ)g(and)h(\(b\))f(using)g(our)g
(model.)988 2836 y(21)p eop
%%Page: 22 36
 bop -4 53 a fu(is)12 b(described)h(as)f(follows:)68 281 y fo(\017)24 b fu
(On)13 b(each)f(processor)n(,)h(create)g(one)f(PL.)68 424 y fo(\017)24 b fu
(For)15 b(each)g(node)g(\(corresponding)e(to)i(a)g(task\))g(with)g(cost)g fn
(C)t fu(,)h(assign)f(a)h(priority)-5 b(,)16 b fn(\031)j fl(=)e fo(\000)p fn
(C)s fu(.)27 b(Note)117 502 y(that)13 b(minimum)e(cost)i(translates)f(to)g
(highest)h(priority)-5 b(.)68 646 y fo(\017)24 b fu(For)13 b(each)g(processor)
g fn(P)539 653 y fk(i)553 646 y fu(,)h(mer)n(ge)f(all)g(the)g(PLs)g(\(from)f
(all)g(the)h(processors\))g(into)g fn(V)e(L)1608 653 y fk(i)1622 646 y fu(.)
20 b(Thus,)14 b(each)117 724 y(virtual)e(list)g(\(VL\))g(is)h(actually)f(iden\
tical)g(to)g(the)h(GPQ.)69 951 y(Since)e(each)h(processor)f(schedules)h(a)g
(task)g(from)e(its)i(VL)g(which)f(is)h(identical)f(to)g(the)h(GPQ,)f(the)h
(above)-4 1030 y(multilist)g(scheduling)i(scheme)g(realizes)g(the)g fp(PBFS-G\
PQ)h fu(scheduling)f(algorithm.)21 b(Note)14 b(that)f(this)h(is)g(a)-4 1108 y
(basic)e(technique)g(to)h(form)e(a)i(GPQ.)69 1253 y(The)d(scheduling)g(patter\
n)f(for)h fp(PBFS-GPQ)h fu(will)e(recur)h(throughout)e(this)i(chapter)m(.)18 b
(W)l(e)10 b(therefore)f(\256nd)-4 1331 y(it)j(useful)g(to)g(de\256ne)g(a)h
(\252global)f(scheduling)g(subpattern\272,)h(as)g(follows.)117 1712 y fr(De\
\256nition)e(3.1)25 b fp(A)11 b(subpattern)f(of)g(a)h(scheduling)f(pattern)g
(is)h(called)f(a)g(\252global)g(scheduling)117 1790 y(subpattern\272)16 b(if)
g(it)g(contains)g(at)f(least)h(one)g(PL)h(on)e(each)i(pr)n(ocessor)l(,)g(and)
f(all)f(its)h(PLs)h(ar)n(e)117 1868 y(mer)o(ged)12 b(into)g(all)g(VLs.)69 2096
y fu(As)i(for)g(the)g(interface)g(to)g(the)h(application)f(layer)m(,)i(applic\
ation)d(programmers)h(only)g(need)g(to)g(do)h(the)-4 2174 y(following)c(two)h
(things:)68 2401 y fo(\017)24 b fu(Declare)10 b(initially)f(that)g(the)h fp
(PBFS-GPQ)g fu(scheduling)g(algorithm)e(will)h(be)h(used.)18 b(\(This)10 b
(establishes)117 2480 y(the)j(appropriate)e(scheduling)h(pattern)g(in)g(the)h
(scheduling)f(layer)m(.\))68 2623 y fo(\017)24 b fu(Declare)15 b(the)f(cost)h
(of)f(a)h(node)f(whenever)g(one)g(is)h(created.)25 b(\(This)14 b(allows)h(the)
f(node')m(s)h(priority)e(to)117 2701 y(be)g(calculated)f(in)h(the)f(schedulin\
g)g(layer)m(.\))908 2836 y(22)p eop
%%Page: 23 37
 bop 75 53 a fr(3.1.1.2)51 b(Scheduling)11 b(Algorithm)g(with)h(Randomization)
75 233 y fu(For)i(parallel)h(best-\256rst)f(search,)j(Karp)d(and)h(Zhang)h
([57)o(])f(proposed)g(a)g(scheduling)g(algorithm)e(with)i(the)75 311 y(techni\
que)g(of)f(randomization.)26 b(This)15 b(scheduling)g(algorithm)f(will)h(be)g
(called)g fp(PBFS-R)h fu(\(Parallel)e(BFS)75 390 y(with)j(Randomization\))f
(in)h(this)h(thesis.)33 b(In)17 b(this)h(algorithm,)f(each)h(processor)f(has)
h(one)f(local)h(priority)75 468 y(queue.)h(Whenever)12 b(a)h(node)f(is)h(crea\
ted,)g(we)f(randomly)g(select)h(a)g(destination)f(processor)g(and)h(then)f
(store)75 546 y(the)h(task)g(into)f(the)h(local)g(priority)e(queue)i(of)f(tha\
t)h(processor)n(,)g(according)f(to)h(the)g(cost)g(of)f(the)h(node.)19 b(Each)
75 624 y(processor)d(always)g(schedules)h(tasks)g(for)e(execution)h(from)f
(its)h(own)g(local)g(priority)e(queue.)29 b(Karp)16 b(and)75 703 y(Zhang)d
(also)f(proved)g(that)g(this)h(algorithm)e(can)i(balance)f(the)g(load)h(well)
f(with)g(a)h(very)f(high)g(probability)-5 b(.)148 848 y(The)15 b fp(PBFS-R)g
fu(scheduling)f(algorithm)f(described)h(above)g(can)g(also)h(be)f(easily)g
(implemented)f(in)h(the)75 926 y(multilist)e(scheduling)g(model,)g(as)h(follo\
ws:)148 1131 y fo(\017)24 b fu(On)12 b(each)h(processor)n(,)g(create)f(one)h
(PL.)148 1256 y fo(\017)24 b fu(When)15 b(a)g(node)f(\(corresponding)f(to)i
(a)g(task\))f(with)h(cost)g fn(C)j fu(is)d(created,)h(designate)f(a)f(process\
or)h(at)197 1334 y(random)d(to)g(store)g(the)g(task,)i(and)e(then)g(assign)h
(a)g(priority)-5 b(,)13 b fn(\031)i fl(=)f fo(\000)p fn(C)s fu(,)f(to)f(the)h
(task.)148 1459 y fo(\017)24 b fu(For)15 b(each)g(processor)h fn(P)626 1466 y
fk(i)640 1459 y fu(,)h(only)e(mer)n(ge)h(its)f(local)h fn(P)7 b(L)1158 1466 y
fk(i)1188 1459 y fu(into)15 b fn(V)c(L)1353 1466 y fk(i)1367 1459 y fu(.)28 b
(Thus,)17 b(each)f fn(V)11 b(L)1714 1466 y fk(i)1744 1459 y fu(is)k(actually)
197 1537 y(identical)e(to)g fn(P)7 b(L)505 1544 y fk(i)519 1537 y fu(.)21 b
(So,)13 b(we)g(perform)f(communication)g(only)h(when)g(a)g(task)g(is)h(create\
d,)f(not)g(when)197 1616 y(a)g(task)f(is)h(scheduled.)148 1821 y(Hence,)18 b
(this)e(multilist)f(scheduling)h(scheme)h(above)f(realizes)h(the)f(Karp)f(and)
h(Zhang')n(s)g(scheduling)75 1899 y(algorithm.)26 b(This)17 b(is)e(a)h(good)f
(example)h(of)f(an)g(algorithm)g(in)g(which)g(a)h(task)g(is)f(stored)h(in)f
(the)g(PLs)i(on)e(a)75 1977 y(dif)n(ferent)d(processor)g(from)g(the)g(one)g
(creating)g(the)h(task.)75 2219 y fg(3.1.2)57 b(Parallel)15 b(Divide-and-Conq\
uer)75 2399 y fp(Divide-and-Conquer)7 b fu(\()p fp(D&C)p fu(\))g(is)h(another)
g(common)f(computation)g(paradigm,)i(in)e(which)h(the)g(solution)g(of)75 2477
y(a)j(problem)f(is)i(obtained)e(by)h(solving)g(its)g(subproblems)f(recursivel\
y)m(.)18 b(Examples)11 b(of)g(D&C)g(computations)75 2555 y(include)16 b(vario\
us)h(sorting)f(methods)h(such)g(as)g(quicksort)f([43],)i(computational)e(geom\
etry)f(procedures)75 2634 y(such)f(as)g(convex)g(hull)g(calculation)f([79)o
(],)i(AI)e(search)h(heuristics)g(such)g(as)g(constraint)g(satisfaction)f(tech\
-)75 2712 y(niques)19 b([40)o(],)i(adaptive)e(data)g(classi\256cation)g(proce\
dures)g(such)g(as)h(generation)e(and)h(maintenance)g(of)988 2836 y(23)p eop
%%Page: 24 38
 bop -4 53 a fu(quadtrees)16 b([86],)h(and)g(numerical)f(methods)h(such)g(as)
g(multigrid)e(algorithms)h([72])g(for)g(solving)g(partial)-4 132 y(dif)n(fere\
ntial)11 b(equations.)69 277 y(A)j(D&C)f(computation)h(can)g(be)g(viewed)f
(as)i(a)f(process)g(of)g(expanding)f(and)h(shrinking)f(a)h(tree.)23 b(Each)-4
355 y(node)18 b(in)h(the)g(tree)g(corresponds)g(to)g(a)g(problem)f(instance;)
k(children)d(of)f(the)h(node)g(correspond)g(to)f(its)-4 433 y(subproblems.)f
(During)12 b(the)g(computation,)f(each)i(internal)e(\(non-leaf\))f(node)i(goe\
s)g(through)f(two)h(phases.)-4 512 y(The)g(\256rst)g(phase)g(is)h(the)f fp
(divide)f(phase)i fu(during)e(which)h(the)g(problem)f(instance)h(associated)h
(with)f(the)g(node)-4 590 y(is)f(divided)g(into)g(subproblems.)18 b(The)12 b
(second)f(phase)h(is)g(the)f fp(combine)g(phase)h fu(during)e(which)i(the)f
(solution)-4 668 y(of)18 b(the)h(problem)f(instance)h(associated)g(with)g(the)
g(node)f(is)h(derived)g(by)f(combining)g(solutions)h(of)g(the)-4 746 y(subpro\
blems)10 b(associated)h(with)f(the)h(node')l(s)g(children.)17 b(Each)11 b(lea\
f)g(after)f(its)g(creation)g(will)g(perform)f(some)-4 825 y(computation)15 b
(and)h(return)f(the)h(results)g(to)g(its)h(parent.)29 b(At)16 b(a)g(given)g
(time,)h(nodes)f(on)g(a)h(wavefront)e(that)-4 903 y(cuts)g(across)i(all)e(pat\
hs)h(from)f(the)g(root)g(to)h(leaves)g(can)g(be)g(active)g(in)f(performing)f
(divide,)i(combine,)h(or)-4 981 y(compute)12 b(operations.)20 b(Along)12 b
(each)i(path)f(the)f(wavefront)g(\256rst)h(moves)g(down)g(from)f(the)h(root)f
(to)h(its)g(leaf)-4 1059 y(and)e(then)g(up)g(from)g(the)g(leaf)g(to)g(the)h
(root.)17 b(For)10 b(simplicity)h(of)g(discussion,)i(we)e(will)g(ignore)g(the)
g(shrinking)-4 1138 y(phase.)25 b(It)15 b(will)f(be)h(useful)f(to)h(de\256ne)
f(a)h fp(fr)o(ontier)f(node)h fu(as)g(a)g(node)g(which)f(has)h(been)g(generat\
ed)g(but)f(has)-4 1216 y(not)c(been)i(expanded)f(and)g(a)h fp(local)f(fr)n
(ontier)g(node)g fu(of)g(a)h(processor)f(as)g(a)h(frontier)e(node)h(whose)g
(parent)g(was)-4 1294 y(expanded)h(\(or)f(executed\))h(on)h(this)f(processor)
m(.)-4 1525 y fr(3.1.2.1)50 b(W)o(u-Kung')l(s)13 b(Scheduling)e(Algorithm)-4
1706 y fu(In)18 b(order)h(to)f(perform)g(D&C)h(ef)o(\256ciently)g(in)f(parall\
el,)j(we)f([105)o(])f(designed)g(an)g(ef)o(\256cient)g(scheduling)-4 1784 y
(algorithm,)d(called)g fp(PDC-WK)i fu(\(Parallel)d(D&C)h(with)g(W)n(u)h(and)f
(Kung')l(s)h(method\))f(in)g(this)g(thesis.)31 b(The)-4 1862 y fp(PDC-WK)20 b
fu(scheduling)f(algorithm)e(schedules)j(nodes)g(according)e(to)h(the)g(follow\
ing)f(rules.)38 b(First,)21 b(if)-4 1941 y(a)c(processor)h(has)g(local)f(fron\
tier)f(nodes,)k(it)d(must)h(schedule)f(the)h(deepest)g(among)f(them.)34 b(Thi\
s)18 b(is)g(the)-4 2019 y fp(depth-\256rst)j(sear)o(ch)i fu(which)f(can)g(min\
imize)f(the)h(local)h(memory)e(requirement)g(and)h(avoid)g(wasteful)-4 2097 y
(interprocessor)16 b(communications.)32 b(Second,)18 b(when)f(a)h(processor)f
(runs)g(out)g(of)f(local)h(frontier)f(nodes,)-4 2175 y(it)f(follows)f fp(br)o
(eadth-\256rst)h fu(search)h(to)f(schedule)h(a)f(frontier)f(node)h(closest)h
(to)f(the)h(root,)f(from)g(all)g(\(other\))-4 2254 y(processors.)j(Note)11 b
(that)g(the)g(node)g(closest)g(to)g(the)g(root)g(is)g(likely)g(to)g(contain)g
(the)g(lar)n(gest)h(subtrees,)g(which)-4 2332 y(will)f(have)i(the)f(most)h
(locality)f(and)g(therefore)f(will)h(need)h(the)f(least)h(communication.)69
2477 y(W)l(e)i(also)g(proved)f(that,)h(among)g(all)f(the)h(scheduling)g(algor\
ithms)f(which)g(can)h(split)g(the)f(load)h(nearly)-4 2555 y(evenly)l(,)i(our)
e(algorithm)f(is)h(optimal)g(with)g(respect)h(to)f(the)g fp(communication)g
(cost)p fu(,)i(which)e(is)h(de\256ned)f(to)-4 2634 y(be)h(equal)g(to)g(the)g
(total)f(number)h(of)f fp(cr)o(oss)i(nodes)p fu(.)30 b(\(A)15 b(cross)i(node)
f(is)g(a)h(node)f(which)g(is)g(generated)g(by)-4 2712 y(one)c(processor)g(but)
g(expanded)h(by)f(another)g(processor)m(.\))36 b(A)13 b(more)f(detailed)g(des\
cription)g(for)f(the)i(above)908 2836 y(24)p eop
%%Page: 25 39
 bop 75 1212 a @beginspecial @setspecial
%%BeginDocument: fig/pdc.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 7 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Courier-Oblique FMDEFINEFONT
1 10 /Courier-Oblique FMDEFINEFONT
2 12 /Times-Roman FMDEFINEFONT
3 14 /Courier-Oblique FMDEFINEFONT
4 11 /Courier-Oblique FMDEFINEFONT
5 12 /Times-Italic FMDEFINEFONT
6 10 /Times-Italic FMDEFINEFONT
612 792 0 FMBEGINPAGE
96.57 147.19 93.26 135.65 89.95 147.19 93.26 147.19 4 Y
4 X
0 K
V
93.26 186.05 93.26 146.19 2 L
0.5 H
2 Z
N
236.97 147.19 233.66 135.65 230.35 147.19 233.66 147.19 4 Y
V
233.66 186.05 233.66 146.19 2 L
N
377.37 147.19 374.06 135.65 370.75 147.19 374.06 147.19 4 Y
V
374.06 186.05 374.06 146.19 2 L
N
223.93 142.7 233.65 135.67 221.68 136.48 222.8 139.59 4 Y
V
93.26 186.05 223.75 139.23 2 L
N
364.17 146.06 374.06 139.26 362.07 139.78 363.12 142.92 4 Y
V
233.66 186.05 364.07 142.6 2 L
N
245.63 136.48 233.65 135.67 243.38 142.7 244.5 139.59 4 Y
V
374.06 186.05 243.57 139.23 2 L
N
105.25 139.78 93.26 139.26 103.15 146.06 104.2 142.92 4 Y
V
233.66 186.05 103.25 142.6 2 L
N
352.46 144.52 363.25 139.27 351.32 138 351.89 141.26 4 Y
V
93.26 186.05 352.88 141.07 2 L
N
115.99 138 104.06 139.27 114.85 144.52 115.42 141.26 4 Y
V
374.06 186.05 114.44 141.07 2 L
N
398.53 145.66 391.39 136.02 392.34 147.99 395.43 146.83 4 Y
3 X
V
410.4 187 395.1 145.87 2 L
1 H
N
257.54 143.66 250.39 134.02 251.34 145.99 254.44 144.83 4 Y
V
269.4 185 254.1 143.87 2 L
N
115.54 144.66 108.4 135.02 109.35 146.99 112.44 145.83 4 Y
V
127.4 186 112.1 144.87 2 L
N
0 F
0 X
(GL) 86.5 237.75 T
1 F
(1) 100.89 234.75 T
0 F
(GL) 226.9 236.88 T
1 F
(2) 241.29 233.88 T
0 F
(GL) 367.3 237.31 T
1 F
(p) 381.69 234.31 T
0 F
(LL) 122.5 237.75 T
1 F
(1) 136.89 234.75 T
0 F
(LL) 262.9 236.88 T
1 F
(2) 277.29 233.88 T
0 F
(LL) 403.3 237.31 T
1 F
(p) 417.69 234.31 T
35 11.4 157.5 269 R
0.5 H
4 X
N
175.87 11.4 298.37 269 R
N
316.75 11.4 439.25 269 R
N
41.12 179.8 151.37 262.7 R
0 X
N
182 179.8 292.25 262.7 R
N
322.87 179.8 433.12 262.7 R
N
2 F
(Memory) 188.12 246.59 T
(Memory) 328.99 246.59 T
(Memory) 47.25 246.59 T
3 F
(VL) 49.4 101.77 T
4 F
(1) 66.19 98.27 T
3 F
(VL) 191 101.67 T
4 F
(2) 207.79 98.17 T
3 F
(VL) 328.4 99.97 T
4 F
(P) 345.19 96.47 T
40.4 16.8 150.65 39.11 R
7 X
V
0 X
N
2 F
(CPU) 80.02 23.53 T
181.27 16.8 291.52 39.11 R
7 X
V
0 X
N
322.15 16.8 432.39 39.11 R
7 X
V
0 X
N
(...) 301.65 28.18 T
5 F
(P) 40.4 48.46 T
6 F
(1) 47.73 45.46 T
5 F
(P) 181.27 48.46 T
6 F
(2) 188.6 45.46 T
5 F
(P) 322.15 48.46 T
6 F
(p) 329.47 45.46 T
2 F
(CPU) 225.47 22.67 T
(CPU) 363.35 22.67 T
73.18 60.41 73.18 130.81 2 L
3 X
N
112.27 60.48 112.27 130.81 2 L
N
112.79 60.41 73.18 60.41 2 L
N
112.79 72.15 73.18 72.15 2 L
N
112.79 83.88 73.18 83.88 2 L
N
112.79 107.35 73.18 107.35 2 L
N
112.79 95.61 73.18 95.61 2 L
N
112.79 119.08 73.18 119.08 2 L
N
96.29 50.35 92.99 38.81 89.68 50.35 92.99 50.35 4 Y
V
92.99 60.41 92.99 49.35 2 L
N
217.19 60.41 217.19 130.81 2 L
N
256.27 60.48 256.27 130.81 2 L
N
256.79 60.41 217.19 60.41 2 L
N
256.79 72.15 217.19 72.15 2 L
N
256.79 83.88 217.19 83.88 2 L
N
256.79 107.35 217.19 107.35 2 L
N
256.79 95.61 217.19 95.61 2 L
N
256.79 119.08 217.19 119.08 2 L
N
240.29 50.35 236.99 38.81 233.68 50.35 236.99 50.35 4 Y
V
236.99 60.41 236.99 49.35 2 L
N
353.99 60.41 353.99 130.81 2 L
N
393.07 60.48 393.07 130.81 2 L
N
393.59 60.41 353.99 60.41 2 L
N
393.59 72.15 353.99 72.15 2 L
N
393.59 83.88 353.99 83.88 2 L
N
393.59 107.35 353.99 107.35 2 L
N
393.59 95.61 353.99 95.61 2 L
N
393.59 119.08 353.99 119.08 2 L
N
377.09 50.35 373.79 38.81 370.48 50.35 373.79 50.35 4 Y
V
373.79 60.41 373.79 49.35 2 L
N
84.8 187 84.8 228.4 2 L
0 X
N
102.8 187 102.8 228.4 2 L
N
102.8 187 84.8 187 2 L
N
102.8 201.4 84.8 201.4 2 L
N
102.8 215.8 84.8 215.8 2 L
N
120.8 187 120.8 228.4 2 L
N
138.8 187 138.8 228.4 2 L
N
138.8 187 120.8 187 2 L
N
138.8 201.4 120.8 201.4 2 L
N
138.8 215.8 120.8 215.8 2 L
N
225.2 187 225.2 228.4 2 L
N
243.2 187 243.2 228.4 2 L
N
243.2 187 225.2 187 2 L
N
243.2 201.4 225.2 201.4 2 L
N
261.2 187 261.2 228.4 2 L
N
279.2 187 279.2 228.4 2 L
N
279.2 187 261.2 187 2 L
N
279.2 201.4 261.2 201.4 2 L
N
365.6 187 365.6 228.4 2 L
N
383.6 187 383.6 228.4 2 L
N
383.6 187 365.6 187 2 L
N
383.6 201.4 365.6 201.4 2 L
N
383.6 215.8 365.6 215.8 2 L
N
401.6 187 401.6 228.4 2 L
N
419.6 187 419.6 228.4 2 L
N
419.6 187 401.6 187 2 L
N
419.6 201.4 401.6 201.4 2 L
N
419.6 215.8 401.6 215.8 2 L
N
FMENDPAGE
%%EndDocument
 @endspecial 564 1288 a fu(Figure)11 b(3.2:)18 b(Scheduling)12 b(pattern)g
(for)f fp(PDC-WK)p fu(.)75 1432 y(results)i(will)e(be)i(presented)f(in)h(Sect\
ion)e(5.1.)148 1577 y(The)21 b fp(PDC-WK)g fu(scheduling)f(algorithm)f(descri\
bed)h(above)g(can)g(be)h(easily)f(implemented)f(in)h(the)75 1655 y(multilist)
14 b(scheduling)g(model.)24 b(The)15 b(algorithm,)f(whose)h(scheduling)f(patt\
ern)g(is)h(shown)f(in)h(Figure)e(3.2,)75 1733 y(is)g(described)f(as)h(follows\
.)148 1959 y fo(\017)24 b fu(Create)12 b(two)h(PLs,)g fp(local)f(list)g fu
(\()p fp(LL)p fu(\))f(and)i fp(global)f(list)g fu(\()p fp(GL)p fu(\),)g(on)g
(each)h(processor)m(.)148 2101 y fo(\017)24 b fu(For)13 b(each)i(processor)f
fn(P)622 2108 y fk(i)637 2101 y fu(,)h(mer)o(ge)f(all)g(the)g(GLs)h(\(from)e
(all)h(the)g(processors\))h(and)f(its)g(own)g(LL)h(into)197 2179 y fn(V)c(L)
269 2186 y fk(i)283 2179 y fu(.)39 b(According)19 b(to)f(De\256nition)h(3.1,)
i(this)e(scheduling)g(also)h(includes)f(a)g(global)g(scheduling)197 2257 y
(subpattern)c(like)h fp(PBFS-GPQ)p fu(,)i(but)d(each)h(processor)g(may)g(also)
g(schedule)g(nodes)g(from)f(its)h(own)197 2335 y(LL.)148 2477 y fo(\017)24 b
fu(For)12 b(each)h(node)f(\(corresponding)f(to)i(a)g(task\),)g(assign)g(to)f
(it)g(two)h(priorities:)k(local)12 b(priority)f fn(\031)1842 2484 y fk(L)1882
2477 y fl(=)j fn(l)197 2555 y fu(\(corresponding)c(to)h(LL\))g(and)g(global)g
(priority)f fn(\031)1056 2562 y fk(G)1099 2555 y fl(=)j fo(\000)p fn(l)f fu
(\(corresponding)e(to)h(GL\),)g(where)g fn(l)h fu(is)f(the)197 2634 y(level)h
(of)g(the)g(node)g(in)g(the)g(tree.)18 b(A)12 b(node)g(is)h(said)f(to)g(be)g
(at)h(tree)e(level)h fn(i)g fu(if)g(it)g(is)g(the)g fn(i)p fu(th)g(node)g(on)
g(the)197 2712 y(path)g(from)f(the)i(root)e(to)i(the)f(node.)18 b(The)13 b
(root)f(is)h(at)f(tree)g(level)g(0.)988 2836 y(25)p eop
%%Page: 26 40
 bop 69 53 a fu(The)17 b(above)f(multilist)g(scheduling)g(scheme)h(satis\256e\
s)g(the)g(scheduling)f(rules)g(of)g fp(PDC-WK)p fu(,)i(as)f(we)-4 132 y(shall)
g(now)g(show)m(.)33 b(Since)17 b fn(\031)513 139 y fk(L)559 132 y fl(=)k fn
(l)q fu(,)e(the)e(processor)g(always)h(follows)e(depth-\256rst)h(search)g(to)
g(schedule)-4 210 y(a)e(local)h(node,)h(if)e(one)h(exists;)i(otherwise,)f(bec\
ause)f fn(\031)975 217 y fk(G)1023 210 y fl(=)i fo(\000)p fn(l)q fu(,)f(the)e
(processor)h(always)g(schedules)h(the)-4 288 y(node)g(closest)h(the)g(root)f
(from)f(processors.)34 b(Thus,)20 b(this)e(scheme)g(realizes)g(the)f fp(PDC-W\
K)i fu(scheduling)-4 366 y(algorithm.)69 512 y(Since)12 b fn(\031)220 519 y fk
(L)261 512 y fl(=)j fo(\000)p fn(\031)381 519 y fk(G)423 512 y fu(in)d(the)h
(above)g(scheduling)g(scheme,)h(we)g(can)f(further)e(improve)i(it)f(by)h(lett\
ing)g(LL)-4 590 y(be)f(a)h(derived)f(PL)g(based)h(on)g(GL)g(with)f(the)g(prio\
rity)f(translation)h(function)g fn(f)5 b fl(\()p fn(\031)q fl(\))14 b(=)g fo
(\000)p fn(\031)r fu(.)k(This)13 b(is)g(a)g(good)-4 668 y(example)f(showing)g
(that)g(derived)g(PLs)h(can)g(be)f(used)h(to)f(optimize)g(the)g(performance.)
69 813 y(As)22 b(for)g(the)g(interface)f(to)h(the)g(application)g(layer)n(,)j
(application)c(programmers)g(need)i(to)f(do)g(the)-4 892 y(following)11 b(two)
h(things.)68 1121 y fo(\017)24 b fu(Declare)14 b(initially)f(that)g(the)g fp
(PDC-WK)i fu(scheduling)e(algorithm)g(will)g(be)h(used.)22 b(\(This)14 b(esta\
blishes)117 1199 y(the)f(appropriate)e(scheduling)h(pattern)g(in)g(the)h(sche\
duling)f(layer)m(.\))68 1344 y fo(\017)24 b fu(Declare)10 b(the)g(tree)g(leve\
l)g fn(l)h fu(of)e(a)i(node)e(whenever)h(a)g(new)g(node)g(is)h(created.)17 b
(\(This)10 b(allows)g(the)g(node')m(s)117 1422 y(priorities)i fn(\031)338 1429
y fk(L)376 1422 y fu(and)g fn(\031)488 1429 y fk(G)530 1422 y fu(to)g(be)h
(calculated)f(from)f fn(l)i fu(in)g(the)f(scheduling)g(layer)m(.\))-4 1667 y
fr(3.1.2.2)50 b(Scheduling)11 b(Algorithm)h(Based)h(on)f(the)g(Round-Robin)e
(Strategy)-4 1851 y fu(For)15 b(parallel)h(D&C,)h(some)g(researchers)g(in)f
([34,)h(44,)g(82)o(])g(have)f(used)h(another)f(scheduling)h(algorithm)-4 1929
y(based)g(on)g(a)g(round-robin)d(strategy)m(.)32 b(This)17 b(scheduling)g(alg\
orithm,)g(called)g fp(PDC-RR)h fu(\(Parallel)e(D&C)-4 2008 y(with)9 b(the)h
(Round-Robin)g(strategy\))f(in)i(this)f(thesis,)h(is)g(the)f(same)h(as)f(the)
g fp(PDC-WK)i fu(scheduling)e(algorithm)-4 2086 y(except)i(for)g(the)h(follow\
ing:)18 b(in)12 b fp(PDC-RR)i fu(an)f(idle)g(processor)f(will)h(try)f(to)h
(schedule)g(the)g(node)f(closest)i(to)-4 2164 y(the)9 b(root)f(among)h(those)
h(on)f(its)g fp(pr)o(e-selected)g fu(processor)h(\(not)e(in)h(the)h(whole)f
(system)h(as)f fp(PDC-WK)p fu(\),)i(which)-4 2242 y(is)17 b(dynamically)g(cha\
nged)g(in)g(a)h(round-robin)d(fashion)i(as)h(follows.)33 b(Each)18 b(processo\
r)f(has)h(a)f(variable)-4 2321 y fn(s)p fu(,)e(representing)f(the)h(ID)f(of)g
(the)h(pre-selected)f(processor)m(.)26 b(When)14 b(the)h(processor)g(is)g(idl\
e,)g(it)f(requests)h(a)-4 2399 y(frontier)d(node)i(from)f(processor)h fn(P)
617 2406 y fk(s)649 2399 y fu(\(as)h(above\))e(and)h(lets)g(the)g(next)g fn
(s)g fu(be)g fl(\()p fn(s)g fu(mod)f fn(p)p fl(\))g(+)f fu(1)i(such)g(that)g
(the)-4 2477 y(next)i(node)h(request)g(will)g(be)g(sent)h(to)f(the)g(next)f
(processor)i fn(P)1106 2485 y ff(\()p fk(s)r fm(mod)q fk(p)p ff(\)+)p fm(1)
1277 2477 y fu(.)32 b(One)17 b(possible)h(drawback)e(for)-4 2555 y fp(PDC-RR)
11 b fu(is:)17 b(since)11 b(the)g(node)f(scheduled)h(by)g(the)f(idle)h(proces\
sor)f(is)h(closest)g(to)g(the)f(root)g(only)g(on)h fn(P)1761 2562 y fk(s)1790
2555 y fu(\(not)-4 2634 y(globally\),)h(some)h(other)g(processors)g(may)g(hav\
e)g(nodes)h(much)f(closer)g(to)g(the)g(root,)g(i.e.,)h(it)f(is)g(very)g(likel\
y)-4 2712 y(that)f(the)g(scheduled)h(node)f(has)h(not)f(the)g(lar)o(gest)h
(subtree.)908 2836 y(26)p eop
%%Page: 27 41
 bop 148 53 a fu(Since)11 b(the)g(dif)o(ference)f(between)h(the)g fp(PDC-RR)i
fu(and)e fp(PDC-WK)h fu(scheduling)f(algorithms)f(is)i(in)f(the)g(set)75 132 y
(of)e(processors)h(from)e(which)h(an)g(idle)g(processor)h(will)f(schedule)g
(a)h(node,)g(we)g(can)f(implement)g fp(PDC-RR)h fu(by)75 210 y(modifying)g fp
(PDC-WK)i fu(as)g(follows:)k(For)11 b(each)g(processor)g fn(P)1145 217 y fk
(i)1160 210 y fu(,)h(mer)n(ge)g(the)f(GL)h(on)f(processor)g fn(P)1763 217 y fk
(s)1779 222 y fh(i)1806 210 y fu(and)g(the)75 288 y(LL)j(on)f fn(P)243 295 y
fk(i)271 288 y fu(into)f fn(V)f(L)433 295 y fk(i)448 288 y fu(,)i(where)g fn
(s)631 295 y fk(i)658 288 y fu(is)h(a)f(variable)f(on)h fn(P)1007 295 y fk
(i)1022 288 y fu(.)20 b(After)13 b(processor)g fn(P)1408 295 y fk(s)1424 300 y
fh(i)1453 288 y fu(is)g(requested,)h(the)f(variable)75 366 y fn(s)98 373 y fk
(i)130 366 y fu(is)18 b(changed)f(to)h fl(\()p fn(s)463 373 y fk(i)491 366 y
fu(mod)13 b fn(p)p fl(\))i(+)e fu(1.)34 b(Thus,)21 b(this)c(above)h(schedulin\
g)f(policy)h(based)g(on)f(the)h(multilist)75 445 y(scheduling)c(model)g(reali\
zes)h(the)f fp(PDC-RR)i fu(scheduling)e(algorithm.)24 b(This)15 b(scheduling)
f(algorithm)f(is)i(a)75 523 y(good)d(example)g(showing)h(that)f(the)g(schedul\
ing)g(pattern)g(may)g(be)h(changed)f(dynamically)l(.)75 769 y fg(3.1.3)57 b
(Parallel)15 b(Synchr)o(onous)g(Network)g(Simulation)75 949 y fu(Section)g
(2.2)h(de\256ned)f(the)g fp(Synchr)o(onous)g(Network)h(Simulation)f fu(\()p fp
(SNS)p fu(\))g(problem)f(by)h(using)h(a)f(graph)g(to)75 1027 y(represent)h
(it.)30 b(In)15 b(that)h(section,)i(we)f(also)f(mentioned)g(a)g(dynamic)g(sch\
eduling)g(strategy)g(based)h(on)f(the)75 1106 y(criterion)d(of)g(keeping)h
(the)g(total)f(number)g(of)h(cross)g(edges)g(\(also)g(see)h(the)f(de\256nitio\
n)e(in)i(that)g(section\))g(as)75 1184 y(small)f(as)h(possible.)22 b(In)13 b
(this)g(section,)i(we)e(will)g(\256rst)g(describe)g(the)h(scheduling)f(algori\
thm)f(based)i(on)f(the)75 1262 y(dynamic)f(scheduling)g(strategy)g(and)h(then)
f(propose)g(a)h(corresponding)e(multilist)h(scheduling)g(scheme.)148 1407 y
(In)19 b(this)g(scheduling)h(algorithm,)g(we)f(partition)g(the)g(graph)g(of)g
(nodes)g(\(each)g(corresponding)g(to)g(a)75 1486 y(thread\))12 b(over)h(the)g
(processors)h(at)f(the)g(beginning)g(of)g(the)g(computation.)20 b(Then,)15 b
(during)d(each)i(phase,)g(we)75 1564 y(dynamically)e(balance)g(the)h(load)f
(as)h(follows:)135 1773 y(1.)25 b(If)7 b(a)i(processor)f(has)g(some)h(local)f
(nodes)g(\(residing)g(on)g(the)g(processor\))g(that)g(have)g(not)g(been)g(exe\
cuted)197 1852 y(yet,)15 b(it)f(always)h(schedules)g(the)f(local)g(nodes)h
(which)f(are)g(connected)h(to)f(no)g(cross)h(edges;)g(then,)g(it)197 1930 y
(schedules)e(the)f(local)h(nodes)f(which)h(are)f(connected)g(to)g(some)h(cros\
s)g(edges.)135 2058 y(2.)25 b(When)10 b(a)h(processor)f(has)g(executed)h(all)
f(local)g(nodes,)h(it)f(schedule)h(a)f(node)g(from)f(another)h(processor)197
2136 y(such)j(that)f(the)g(total)g(number)g(of)g(cross)h(edges)f(increases)i
(the)e(least.)148 2346 y(The)e(scheduling)f(algorithm)f(described)h(above)g
(can)g(be)g(easily)h(implemented)e(in)h(the)g(multilist)f(model.)75 2424 y
(The)k(algorithm,)f(whose)g(scheduling)h(pattern)e(is)i(the)f(same)h(as)g(the)
g(one)f(in)g(Figure)g(2.5,)h(for)e(a)i fn(p)p fu(-processor)75 2502 y(system)
h(is)g(described)f(as)h(follows:)148 2712 y fo(\017)24 b fu(Create)12 b fn
(p)h fu(PLs)g(on)g(each)f(processor)m(.)19 b(Let)13 b fn(P)7 b(L)1001 2719 y
fk(ij)1044 2712 y fu(denote)12 b(the)g fn(j)s fu(th)h(PL)f(on)g(processor)h fn
(P)1704 2719 y fk(i)1718 2712 y fu(.)988 2836 y(27)p eop
%%Page: 28 42
 bop 68 53 a fo(\017)24 b fu(For)12 b(each)h(processor)f fn(P)537 60 y fk(i)
552 53 y fu(,)h(mer)n(ge)g(all)f(the)g fn(i)p fu(th)g(PLs)h(\(i.e.,)g fn(P)8 b
(L)1180 60 y fk(j)r(i)1222 53 y fu(for)k(all)g fn(j)s fu(\))g(into)g fn(V)g
(L)1570 60 y fk(i)1584 53 y fu(.)68 166 y fo(\017)24 b fu(Assign)13 b fn(p)g
fu(priorities)f(to)g(a)g(node)h(on)f fn(P)786 173 y fk(i)813 166 y fu(as)h
(follows:)175 279 y fr(\261)25 b fu(The)14 b fn(j)s fu(th)g(priority)f(of)g
(a)h(node)g fn(\027)t fu(,)g fn(j)20 b fo(6)p fl(=)c fn(i)p fu(,)e(is)g fn
(\031)1024 286 y fk(j)1058 279 y fl(=)j fn(E)1149 286 y fk(\027;j)1206 279 y
fo(\000)12 b fn(E)1293 286 y fk(\027;i)1334 279 y fu(,)j(where)f fn(E)1533 286
y fk(\027;k)1596 279 y fu(is)g(the)g(number)225 357 y(of)e(edges)h(\(includin\
g)e(in-edges)h(and)g(out-edges\))g(between)h fn(\027)i fu(and)e(all)f(the)g
(nodes)h(on)f fn(P)1770 364 y fk(k)1792 357 y fu(.)175 449 y fr(\261)25 b fu
(If)13 b(a)g(node)h fn(\027)i fu(is)e(connected)g(to)f(some)h(cross)g(edges,)
h(its)e fn(i)p fu(th)g(priority)f fn(\031)1468 456 y fk(i)1496 449 y fu(is)i
(set)f(to)h fn(E)1700 456 y fk(max)1784 449 y fl(+)d fu(1,)225 527 y(where)e
fn(E)392 534 y fk(max)473 527 y fu(is)g(the)g(maximum)f(number)h(of)f(edges)i
(which)f(each)g(node)g(can)g(have;)h(otherwise,)225 606 y(the)i(priority)f
(is)i(set)f(to)h(an)f(even)h(higher)e(priority)l(,)h(say)h fn(E)1216 613 y fk
(max)1299 606 y fl(+)e fu(2.)69 777 y(One)f(can)h(verify)f(that)g(the)h(above)
f(multilist)g(scheduling)h(scheme)g(satis\256es)g(the)g(two)f(scheduling)h
(rules)-4 855 y(for)g(parallel)h(SNS.)69 1000 y(W)l(e)f(note)h(that)f(this)h
(scheduling)f(algorithm)g(needs)h(to)f(change)h(priorities)e(at)i(run)f(time.)
17 b(When)12 b(a)g(node)-4 1078 y(is)f(moved)g(to)h(another)f(processor)n(,)h
(some)g fn(E)765 1085 y fk(\027;i)818 1078 y fu(values)g(may)f(be)h(changed)f
(and)h(therefore)e(the)i(priorities)e(of)-4 1157 y(the)h(node')l(s)h(neighbor\
s)f(will)f(be)i(changed)f(accordingly)l(.)18 b(This)12 b(is)f(a)h(good)e(exam\
ple)i(showing)f(the)g(need)g(of)-4 1235 y(changing)h(priorities)f(dynamically)
l(.)69 1380 y(As)j(for)g(the)g(interface)g(to)g(the)h(application)f(layer)m
(,)i(application)d(programmers)h(only)g(need)g(to)g(do)h(the)-4 1458 y(follow\
ing:)68 1629 y fo(\017)24 b fu(Initialize)18 b(the)g(scheduling)g(algorithm)f
(for)g(parallel)h(SNS)f(by)h(describing)g(its)g(graph)g(of)g(nodes,)117 1708 y
(corresponding)c(to)g(threads)h(or)f(tasks.)26 b(\(This)15 b(establishes)g
(the)g(appropriate)e(scheduling)i(pattern,)117 1786 y(and)10 b(allows)f(the)g
(priorities)f(of)h(the)g(nodes)g(to)g(be)h(calculated)f(from)f(their)g(enviro\
nment)h(in)g(the)g(graph,)117 1864 y(in)k(the)f(scheduling)g(layer)m(.\))-4
2124 y fv(3.2)70 b(Other)19 b(Examples)g(of)f(Scheduling)h(Algorithms)-4 2321
y fu(This)9 b(section)f(will)g(present)h(some)f(more)g(examples)h(of)f(schedu\
ling)g(algorithms:)15 b(the)8 b(factoring)g(algorithm)-4 2399 y(for)j(paralle\
l)g(loops)h(in)g(Section)f(3.2.1,)i(the)f(principle)f(variation)g(splitting)h
(algorithm)e(\(slightly)h(modi\256ed)-4 2477 y(from)h([21)o(,)i(69]\))f(for)f
fn(\013)q fu(-)p fn(\014)j fu(search)f(in)f(Section)g(3.2.2,)i(the)e(scheduli\
ng)g(algorithm)g(for)f(parallel)h(quicksort)-4 2555 y(in)e(Section)g(3.2.3,)i
(and)e(the)g(scheduling)h(algorithm)e(for)h(parallel)g(asynchronous)g(network)
g(simulation)g(in)-4 2634 y(Section)f(3.2.4.)18 b(The)11 b(scheduling)g(patte\
rns)f(for)g(these)h(scheduling)f(algorithms)g(are)g(the)h(same)g(as)g(the)f
(ones)-4 2712 y(used)i(in)g(the)h(previous)f(section.)908 2836 y(28)p eop
%%Page: 29 43
 bop 75 53 a fg(3.2.1)57 b(Parallel)15 b(Loops)f(with)h(the)g(Factoring)g(T)
-5 b(echnique)75 253 y fu(Parallel)16 b(loops)g(\(without)g(dependencies)g
(between)h(their)f(iterations\))f(are)i(very)f(rich)g(resources)g(where)75 331
y(we)g(can)f(exploit)g(parallelism)g(in)h(many)f(applications,)i(especially)e
(for)g(scienti\256c)h(applications.)27 b(Since)75 410 y(the)14 b(amount)g(of)
g(computation)f(in)h(each)g(iteration)g(may)g(not)g(be)g(\256xed,)h(an)f(ef)o
(\256cient)g(algorithm)f(needs)h(to)75 488 y(balance)f(the)f(load)g(at)h(runt\
ime)e(while)h(minimizing)f(the)i(amount)f(of)f(communication.)148 633 y(Humme\
l)e fp(et)g(al.)17 b fu([48)o(])9 b(proposed)f(an)h(ef)o(\256cient)g(runtime)
f(technique,)h(called)g fp(factoring)p fu(.)17 b(Consider)9 b(how)75 711 y
(to)k(parallelize)g(a)g(parallel)g(loop)g(with)g fn(m)g fu(iterations)g(on)g
fn(p)h fu(processors.)21 b(W)n(ithout)13 b(loss)h(of)f(generality)l(,)h(we)75
790 y(assume)f fn(m)f fu(to)g(be)h fn(p)p fl(\()p fu(2)468 772 y fk(k)500 790
y fo(\000)e fu(1)p fl(\))p fu(,)i(where)f fn(k)i fu(is)f(an)f(integer)m(.)18 b
(In)12 b(the)h(factoring)e(technique,)h(iterations)g(are)g(\256rst)75 868 y
(grouped)e(into)h(tasks)g(such)h(that)f(there)f(are)h fn(p)g fu(tasks)h(each)
f(of)g(which)g(will)f(execute)h(2)1529 850 y fk(k)q fi(\000)p fm(1)1606 868 y
fu(iterations,)g fn(p)g fu(tasks)75 946 y(each)g(of)g(which)f(will)h(execute)
g(2)639 928 y fk(k)q fi(\000)p fm(2)704 946 y fu(,)h(...,)h(and)e fn(p)g fu
(tasks)h(each)f(of)f(which)h(will)f(execute)h(one)g(iteration.)17 b(Then,)75
1024 y(each)11 b(processor)g(always)h(schedules)f(the)g(task)h(with)e(the)h
(lar)o(gest)g(number)g(of)f(iterations)h(next)f(because)i(the)75 1103 y(\256n\
e)j(grained)f(tasks)i(should)f(be)g(preserved)f(for)g(better)h(load)g(balanci\
ng)f(near)h(the)g(end.)26 b(Since)15 b(the)f(total)75 1181 y(number)d(of)g
(tasks)i(is)f fn(pk)s fu(,)g(we)g(schedule)g(tasks)h(at)f(most)f fn(pk)k fu
(times,)d(which)g(is)g(a)g(very)f(small)h(number)f(when)75 1259 y(compared)h
(with)g fn(m)p fu(.)148 1404 y(W)l(e)17 b(can)h(implement)e(this)h(algorithm)
f(in)h(our)f(multilist)h(model)f(by)h(simply)g(using)g(the)g(scheduling)75
1483 y(pattern)10 b(of)g(the)h fp(PBFS-GPQ)h fu(scheduling)f(algorithm)e(and)
i(letting)f(each)h(task)g(with)f(2)1563 1464 y fk(i)1588 1483 y fu(iterations)
g(have)h(the)75 1561 y(priority)g fn(i)p fu(.)148 1706 y(Nishikawa)k([70])f
(has)i(recently)f(suggested)g(the)g(following)f(modi\256cation)g(to)h(further)
f(reduce)h(com-)75 1784 y(munication)h(in)i(a)f(distributed-memory)e(system.)
33 b(Initially)l(,)19 b(we)e(evenly)g(distribute)g(these)h(tasks)f(over)75
1862 y(the)e(processors)h(such)f(that)g(each)h(processor)f(has)g fp(one)h fu
(task)f(with)g(2)1279 1844 y fk(k)q fi(\000)p fm(1)1359 1862 y fu(iterations,)
h fp(one)f fu(task)h(with)f(2)1885 1844 y fk(k)q fi(\000)p fm(2)75 1941 y fu
(iterations,)e(...,)h(and)f(one)f(task)h(with)f(one)h(iteration.)18 b(Basical\
ly)m(,)c(each)e(processor)h(executes)g(its)g(own)f(tasks)75 2019 y(based)h
(on)f(the)g(same)h(strategy:)18 b(schedule)13 b(the)f(task)h(with)f(the)g(lar)
o(gest)g(number)g(of)g(iterations)g(\256rst.)18 b(How-)75 2097 y(ever)n(,)11 b
(when)f(a)g(processor)g(\(say)g fn(P)657 2104 y fm(1)677 2097 y fu(\))f(\252f\
alls)h(far)g(behind\272)g(another)f(processor)h(\(say)g fn(P)1539 2104 y fm
(2)1559 2097 y fu(\),)g fn(P)1629 2104 y fm(1)1659 2097 y fu(will)f(\252of)o
(f-load\272)75 2175 y(some)k(task)h(to)e fn(P)369 2182 y fm(2)389 2175 y fu
(.)20 b(T)m(o)13 b(be)g(more)f(precise,)i(let)f(us)g(consider)g(the)g(situati\
on)g(in)g(which)g(processor)g fn(P)1811 2182 y fm(1)1843 2175 y fu(is)g(the)
75 2254 y fp(slowest)f fu(processor)f(which)g(has)h(the)f(task)h(with)f(2)935
2236 y fk(i)960 2254 y fu(iterations)g(and)g(processor)g fn(P)1473 2261 y fm
(2)1504 2254 y fu(is)g(the)g fp(fastest)h fu(processor)75 2332 y(which)i(has)
h(the)f(task)g(with)g(2)589 2314 y fk(j)622 2332 y fu(iterations,)g(where)g fn
(i)i(>)h(j)r fu(.)24 b(The)15 b(programmer)e(can)h(decide)g(a)h(threshold)e fn
(t)75 2410 y fu(\(a)g(positive)f(integer\).)20 b(Then,)13 b(if)g(and)g(only)f
(if)h fn(i)e fo(\000)g fn(j)18 b(>)c(t)p fu(,)f(processor)g fn(P)1332 2417 y
fm(2)1364 2410 y fu(will)g(schedule)g(the)g(task)g(with)g(2)1936 2392 y fk
(i)75 2488 y fu(iterations)f(from)f fn(P)413 2495 y fm(1)432 2488 y fu(.)148
2634 y(Nishikawa')m(s)g(scheduling)g(algorithm)e(can)i(also)g(be)f(easily)h
(implemented)f(in)g(our)g(multilist)g(model)g(by)75 2712 y(using)i(the)g(sche\
duling)g(pattern)g(of)g fp(PDC-WK)p fu(.)h(Initially)l(,)f(we)h(partition)e
(tasks)h(as)h(above)f(and)g(then)g(assign)988 2836 y(29)p eop
%%Page: 30 44
 bop -4 53 a fu(priorities)15 b(to)h(each)h(task)f(with)g(2)581 35 y fk(i)612
53 y fu(iterations)f(as)i(follows:)26 b(the)16 b(local)g(priority)f fn(\031)
1445 60 y fk(L)1490 53 y fl(=)k fn(i)d fu(and)h(the)f(global)-4 132 y(priorit\
y)8 b fn(\031)183 139 y fk(G)227 132 y fl(=)13 b fn(i)7 b fo(\000)f fn(t)p fu
(.)18 b(For)9 b(the)i(situation)f(given)g(in)g(the)h(previous)f(paragraph,)g
(the)h(task)f(with)h(2)1661 114 y fk(i)1685 132 y fu(iterations)-4 210 y(on)j
(processor)h fn(P)297 217 y fm(1)331 210 y fu(has)h(a)f(global)f(priority)g fn
(i)e fo(\000)g fn(t)j fu(while)f(the)h(task)g(with)g(2)1292 192 y fk(j)1325
210 y fu(iterations)f(on)h fn(P)1621 217 y fm(2)1655 210 y fu(has)h(a)f(local)
-4 288 y(priority)9 b fn(j)s fu(.)18 b(If)10 b fn(i)d fo(\000)h fn(j)17 b(>)c
(t)e fu(\(i.e.,)h fn(i)c fo(\000)f fn(t)14 b(>)f(j)s fu(\),)f(then)e fn(P)887
295 y fm(2)917 288 y fu(will)h(schedule)g(the)g(task)g(with)g(2)1479 270 y fk
(i)1504 288 y fu(iterations)f(from)g fn(P)1839 295 y fm(1)1858 288 y fu(.)-4
366 y(Otherwise,)15 b(no)g(load)g(balancing)f(is)h(required.)25 b(Thus,)16 b
(this)f(multilist)f(scheduling)h(scheme)g(is)g(the)g(same)-4 445 y(as)d(Nishi\
kawa')m(s)h(scheduling)f(algorithm.)69 590 y(Since)h fn(\031)221 597 y fk(L)
261 590 y fl(=)i fn(\031)342 597 y fk(G)383 590 y fl(+)d fn(t)p fu(,)h(we)h
(can)f(improve)g(the)g(scheduling)g(scheme)h(by)f(letting)g(LL)h(be)f(a)h(der\
ived)e(PL)-4 668 y(based)d(on)g(GL)h(with)f(the)g(priority)f(translation)h
(function)f fn(f)e fl(\()p fn(\031)q fl(\))14 b(=)g fn(\031)5 b fl(+)t fn(t)p
fu(.)17 b(This)10 b(is)g(another)f(example)g(\()p fp(PDC-)-4 746 y(WK)k fu
(was)h(the)f(\256rst)g(example\))f(showing)h(that)g(we)g(can)g(use)h(derived)
e(PLs)i(to)f(optimize)f(the)h(performance.)-4 825 y(The)h(priority)e(translat\
ion)h(function)g(here)g(is)h(monotonically)f(increasing)g(while)h(that)f(for)
g(the)h fp(PDC-WK)-4 903 y fu(scheduling)e(algorithm)f(is)i(monotonically)e
(decreasing.)-4 1160 y fg(3.2.2)57 b(Parallel)19 b(Alpha-Beta)h(Sear)o(ch)f
(with)h(Principle)g(V)-5 b(ariation)20 b(Splitting)h(Algo-)170 1257 y(rithm)
-4 1439 y fu(Alpha-beta)9 b(\()p fn(\013)p fu(-)p fn(\014)r fu(\))g(search)h
([58])g(is)g(a)g(common)f(computational)g(paradigm)g(for)h(two-player)e(game)
i(search)-4 1518 y(problems,)18 b(e.g.,)i(Chess)f([91)o(])f(and)f(Othello)g
([64)o(].)34 b(An)17 b fn(\013)q fu(-)p fn(\014)i fu(computation)e(can)g(also)
h(be)g(viewed)f(as)h(a)-4 1596 y(process)h(of)f(expanding/shrinking)g(a)h(tre\
e,)i(as)f(in)e(D&C)h(in)g(Section)g(3.1.2,)j(but)c(with)h(the)g(following)-4
1674 y(properties.)68 1896 y fo(\017)24 b fu(Each)13 b(leaf)g(node)f(has)h
(an)f(estimated)h(heuristic)f(value)g(and)g(returns)g(this)h(value)f(to)g(its)
h(parent.)68 2034 y fo(\017)24 b fu(Each)14 b(internal)f(node)g(in)g(the)g
(divide)g(phase)h(expands)f(some)h(children)e(and)i(sorts)f(them)g(according)
117 2113 y(to)g(how)g(likely)g(they)f(are)h(to)g(contain)g(an)g(optimum)f(heu\
ristic)h(value)g(in)f(the)h(subtree)g(rooted)g(at)g(the)117 2191 y(child.)18 b
(W)m(e)12 b(will)g(let)g(the)h fp(leftmost)f(child)g fu(be)g(the)h(most)f(pro\
mising)g(child.)68 2330 y fo(\017)24 b fu(Each)11 b(internal)f(node)g(in)g
(the)h(combine)f(phase)g(receives)h(all)f(the)h(values)f(returned)g(from)f
(its)h(children)117 2408 y(and)j(then)f(returns)g(the)g(maximum)g(of)g(the)g
(negatives)h(of)e(these)i(values.)68 2546 y fo(\017)24 b fu(The)14 b(solution)
e(of)g(a)h(game)g(tree)g(is)g(the)g(returned)e(value)i(of)f(the)h(root)f(and)
h(the)g(identity)f(of)g(the)h(child)117 2625 y(who)g(has)g(the)f(negative)g
(of)g(that)g(value.)908 2836 y(30)p eop
%%Page: 31 45
 bop 75 612 a @beginspecial @setspecial
%%BeginDocument: fig/pv-subtrees.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 1 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
612 792 0 FMBEGINPAGE
0 F
0 X
0 K
(Principle V) 49.01 114.22 T
(ariation \050PV\051) 102.65 114.22 T
248.4 133.2 122.4 93.6 2 L
3 H
2 Z
N
248.4 133.2 320.4 93.6 2 L
0.5 H
N
248.4 133.2 248.4 93.6 2 L
N
122.4 93.6 57.6 57.6 2 L
3 H
N
122.4 93.6 187.2 57.6 2 L
0.5 H
N
122.4 93.6 122.4 57.6 2 L
N
57.6 57.6 25.2 7.2 2 L
3 H
N
57.6 57.6 75.6 32.4 2 L
0.5 H
N
57.6 57.6 57.6 28.8 2 L
N
122.4 61.2 100.8 7.2 144 7.2 3 Y
7 X
V
0 X
N
187.2 57.6 165.6 7.2 208.8 7.2 3 Y
7 X
V
0 X
N
248.4 93.6 226.8 7.2 270 7.2 3 Y
7 X
V
0 X
N
320.4 93.6 298.8 7.2 342 7.2 3 Y
7 X
V
0 X
N
57.6 32.4 50.4 7.2 64.8 7.2 3 Y
7 X
V
0 X
N
75.6 32.4 68.4 7.2 82.8 7.2 3 Y
7 X
V
0 X
N
363.6 79.2 349.2 43.2 378 43.2 3 Y
7 X
V
0 X
N
(: PV) 380.61 56.62 T
(-subtree) 401.17 56.62 T
FMENDPAGE
%%EndDocument
 @endspecial 769 688 a fu(Figure)11 b(3.3:)18 b(PV)-5 b(-subtrees.)148 857 y
(In)15 b(order)g(to)g(solve)h fn(\013)p fu(-)p fn(\014)i fu(ef)o(\256ciently)
d(in)g(parallel,)h(some)g(researchers)g([21)o(,)g(69])f(have)h(proposed)f(the)
75 935 y fp(principle)f(variation)g(splitting)g fu(\()p fp(PVS)p fu(\))g(algo\
rithm.)23 b(In)13 b(the)i(PVS)e(algorithm,)h(we)g(search)h(the)f(path)g(from)
75 1013 y(the)g(root)f(to)h(the)g(leftmost)f(leaf,)i(in)f(the)g(\256rst)f(sta\
ge.)24 b(The)14 b(path)g(is)g(called)g fp(principle)g(variation)g fu(\()p fp
(PV)p fu(\))g(and)75 1092 y(nodes)i(on)g(PV)g(are)g(called)g fp(PV)h(nodes)p
fu(;)h(in)e(addition,)h(a)f(subtree)g(is)g(called)g(a)g fp(PV)o(-subtr)n(ee)p
fu(,)h(as)g(shown)f(in)75 1170 y(Figure)d(3.3,)i(if)e(its)g(root)g(is)h(a)g
(child)g(of)f(a)h(PV)f(node)h(but)f(the)h(root)f(itself)g(is)h(not)f(a)h(PV)
-5 b(-node.)22 b(Then,)15 b(in)e(the)75 1248 y(next)h(stage,)h(PV)l(-subtrees)
f(rooted)f(at)h(the)g(deepest)h(tree)f(level)g(are)g(split)g(among)g(processo\
rs.)24 b(After)13 b(this)75 1326 y(stage)g(completes,)h(subtrees)f(rooted)f
(at)h(the)g(second)g(deepest)g(tree)g(level)f(are)h(split)g(among)f(processor\
s)h(in)75 1405 y(the)g(next)g(stage,)i(and)e(so)g(on.)21 b(These)14 b(researc\
hers)g(used)f(the)g(so-called)g(tree)g(splitting)g(algorithm)f(in)h([69)o(])
75 1483 y(to)k(split)g(subtrees)g(among)g(processors.)33 b(But,)19 b(here,)g
(we)e(will)g(simply)f(use)i(the)f fp(PDC-WK)h fu(scheduling)75 1561 y(algorit\
hm)9 b(\(described)h(in)g(Section)g(3.1.2\))h(to)f(split)g(subtrees)h(among)f
(processors)g(so)h(that)f(we)h(balance)f(the)75 1639 y(load)15 b(of)h(nodes)f
(in)h(these)g(subtrees)g(while)f(minimizing)f(the)i(communication.)27 b(Altho\
ugh)15 b(the)g(original)75 1718 y(PVS)9 b(algorithm)f(goes)h(through)g(the)g
(stages)h(serially)l(,)h(our)d(scheduling)h(algorithm)f(for)h(PVS)f(does)i
(not)f(have)75 1796 y(to.)25 b(That)15 b(is,)h(if)e(there)g(are)h(no)g(availa\
ble)f(nodes)h(for)f(the)g(current)g(stage,)i(idle)f(processors)g(can)g(schedu\
le)75 1874 y(the)d(nodes)h(for)f(the)g(next)g(stage.)148 2019 y(Now)m(,)20 b
(we)e(want)g(to)f(design)i(the)e(PVS)h(algorithm)f(based)h(on)g(the)g(multili\
st)f(scheduling)h(model)g(as)75 2098 y(follows.)23 b(The)15 b(multilist)e(sch\
eduling)h(scheme)h(for)e(PVS)h(uses)h(the)f(same)g(scheduling)h(pattern)e(as)
i fp(PDC-)75 2176 y(WK)p fu(.)d(Note)f(that)g(each)h(processor)f(has)h(two)f
(physical)g(lists,)h(the)f(local)g(list)g(\(LL\))h(and)f(the)g(global)g(list)
g(\(GL\).)75 2254 y(\(For)17 b(simplicity)h(of)g(discussion,)j(we)e(omit)f
(the)g(combine)g(operation)g(in)g fn(\013)p fu(-)p fn(\014)j fu(search,)f(as)
f(we)g(did)f(for)75 2332 y(D&C.\))12 b(W)l(e)h(assign)g(priorities)e(to)i(eac\
h)f(node)h(according)e(to)i(the)f(following)f(rules.)148 2634 y fo(\017)24 b
fu(For)10 b(each)i(node)f(on)g(PV)-6 b(,)11 b(its)h(local)f(priority)f(is)h fn
(\031)1030 2641 y fk(L)1070 2634 y fl(=)i fn(\031)1149 2641 y fk(max)1232 2634
y fu(and)f(its)f(global)g(priority)f(is)h fn(\031)1743 2641 y fk(G)1786 2634 y
fl(=)j fn(\031)1866 2641 y fk(max)1938 2634 y fu(,)197 2712 y(where)e fn(\031)
359 2719 y fk(max)443 2712 y fu(is)h(the)f(priority)f(lar)o(ger)h(than)g(any)
g(of)g(the)h(priorities)e(assigned)i(below)l(.)988 2836 y(31)p eop
%%Page: 32 46
 bop 68 53 a fo(\017)24 b fu(For)13 b(each)g(node)g(\(corresponding)f(to)g
(a)i(task\))e(at)i(tree)e(level)h fn(i)g fu(and)g(in)g(a)g(PV)-5 b(-subtree)
12 b(rooted)h(at)g(tree)117 132 y(level)f fn(j)s fu(,)g(let)f(the)g(local)g
(priority)f(be)i fn(c)d fo(\003)f fn(j)k fl(+)d fn(i)i fu(and)g(the)g(global)
g(priority)f(be)h fn(c)e fo(\003)g fn(j)j fo(\000)c fn(i)p fu(,)k(where)f fn
(c)j(>)g fu(2)p fn(h)117 210 y fu(and)f fn(h)f fu(is)h(the)f(tree)g(height.)
69 398 y(From)i(the)i(\256rst)f(rule,)i(executing)e(the)h(nodes)g(in)f(PV)h
(is)g(the)f(\256rst)h(priority)-5 b(.)28 b(From)15 b(the)g(second)i(rule,)-4
476 y(since)h fn(c)k(>)g fu(2)p fn(h)c fu(and)g fn(h)k fo(\025)f fn(i)p fu
(,)f fn(j)h fu(represents)d(the)g(primary)f(key)h(and)g fn(i)g fu(represents)
g(the)g(secondary)g(key)m(.)-4 554 y(Since)12 b fn(j)k fu(is)d(the)g(primary)
f(key)m(,)h(we)g(search)g(PV)l(-subtrees)f(rooted)h(at)g(a)g(deeper)f(tree)h
(level)g(earlier)l(.)20 b(For)13 b(the)-4 632 y(PV)-5 b(-subtrees)12 b(rooted)
h(at)g(the)g(same)g(tree)g(level,)g(the)g(value)g fn(j)j fu(is)e(the)e(same)i
(and)f(therefore)f(the)h(scheduling)-4 711 y(algorithm)g(is)h(just)g(the)h
(same)f(as)h fp(PDC-WK)p fu(.)h(Thus,)g(the)e(above)g(scheduling)g(scheme)h
(realizes)f(our)g(PVS)-4 789 y(algorithm.)69 934 y(As)g(for)g(the)g(interface)
g(to)g(the)h(application)f(layer)m(,)i(application)d(programmers)h(only)g(nee\
d)g(to)g(do)h(the)-4 1012 y(following)c(things.)68 1200 y fo(\017)24 b fu(Dec\
lare)15 b(initially)e(that)i(the)f(PVS)g(scheduling)h(algorithm)e(will)h(be)h
(used)f(\(this)h(will)f(establish)h(the)117 1278 y(scheduling)i(pattern)e(of)
h fp(PDC-WK)i fu(in)e(the)g(scheduling)g(layer\);)h(then,)h(give)e(the)g(maxi\
mum)g(tree)117 1356 y(height)c fn(h)p fu(.)68 1473 y fo(\017)24 b fu(For)13 b
(each)g(node)g(\(corresponding)f(to)h(a)g(task\),)h(declare)f(the)g(tree)g
(level)g fn(i)g fu(of)g(the)g(node)g(and)g(the)g(tree)117 1551 y(level)e fn
(j)j fu(of)c(the)h(PV)-5 b(-subtree)10 b(that)h(includes)g(the)f(node.)18 b
(\(This)11 b(allows)g(the)f(node')m(s)h(priorities)f fn(\031)1762 1558 y fk
(L)1799 1551 y fu(and)117 1630 y fn(\031)145 1637 y fk(G)187 1630 y fu(to)i
(be)h(calculated)f(from)f fn(i)p fu(,)i fn(j)i fu(and)e fn(h)f fu(in)h(the)f
(scheduling)g(layer)m(.\))-4 1865 y fg(3.2.3)57 b(Parallel)14 b(Quicksort)h
(Algorithm)-4 2043 y fu(Sorting)c(is)i(the)g(most)f(common)h(operation)e(for)
h(data)h(processing.)20 b(Given)12 b(an)h(array)f(of)g fn(n)h fu(elements)g
(each)-4 2122 y(containing)e(a)g(key)h(\(not)f(ordered\),)g(the)h(problem)e
(is)i(to)g(sort)f(the)h(elements)g(in)f(the)h(array)f(according)g(to)h(the)-4
2200 y(key)g(values.)69 2345 y(Quicksort)g([43])g(is)i(a)f(fast)g(sorting)g
(algorithm,)f(based)i(on)f(the)g(divide-and-conquer)e(technique,)j(and)-4 2423
y(with)e(an)g(average)g(computation)g(time)g(of)728 2405 y fm(1)758 2423 y fn
(O)r fl(\()p fn(n)d fu(log)e fn(n)p fl(\))p fu(.)19 b(This)13 b(algorithm)e
(is)i(described)f(as)h(follows:)68 2611 y fo(\017)24 b fu(Pick)12 b(the)h(\
\256rst)f(element)g(\(or)f(pick)i(one)f(at)g(random\).)18 b(Let)13 b fn(k)h fu
(be)f(the)f(key)g(value)h(of)f(this)g(element.)-4 2653 y 750 2 v 54 2694 a fj
(1)70 2709 y fs(If)e fe(g)r fd(\()p fe(n)p fd(\))h(=)h fe(O)q fd(\()p fe(f)5 b
fd(\()p fe(n)p fd(\)\))p fs(,)11 b(there)f(exists)g(some)h(positive)e fe(c)h
fs(for)g(which)g fe(g)q fd(\()p fe(n)p fd(\))i fc(\024)g fe(cf)5 b fd(\()p fe
(n)p fd(\))10 b fs(for)g(all)g(suf)o(\256ciently)f(lar)o(ge)i fe(n)p fs(.)908
2836 y fu(32)p eop
%%Page: 33 47
 bop 148 53 a fo(\017)24 b fu(Partition)10 b(the)i(array)e(into)h(two)h(subar\
rays)f(of)g(elements)h(such)g(that)f(the)g(key)h(values)g(of)f(elements)g(in)
197 132 y(one)i(subarray)g(are)h(less)g(than)f fn(k)j fu(and)d(the)g(key)h
(values)g(in)f(the)g(other)g(subarray)g(are)g(greater)g(than)h(or)197 210 y
(equal)e(to)g fn(k)s fu(.)148 404 y fo(\017)24 b fu(Recursively)12 b(sort)h
(each)f(subarray)m(.)148 693 y(Since)17 b(the)g(quicksort)g(algorithm)f(is)h
(based)h(on)f(the)g(D&C)h(technique,)g(we)g(can,)h(of)d(course,)j(apply)75 771
y(the)i fp(PDC-WK)i fu(scheduling)e(algorithm)f(to)h(the)g(quicksort)g(algori\
thm.)44 b(However)n(,)24 b(based)e(on)f(some)75 850 y(characteristics)c(of)f
(quicksort,)h(we)g(suggest)g(dif)n(ferent)f(priority)f(assignment)i(for)f(pos\
sibly)g(improving)75 928 y(the)c fp(PDC-WK)i fu(scheduling)e(algorithm.)148
1073 y(In)h fp(PDC-WK)p fu(,)i(since)e(it)g(is)h(assumed)g(that)f(the)g(shape)
h(of)e(a)i(tree)f(\(or)f(subtree\))h(cannot)g(be)g(predicted)g fp(a)75 1151 y
(priori)p fu(,)j(we)e(can)h(only)f(use)h(the)f(tree)h(depth)f(of)g(a)g(node)h
(to)f(roughly)g(estimate)g(the)h(average)f(computation)75 1229 y(amount)j(\(o\
r)f(locality\))g(of)g(a)i(node)f(and)g(then)f(use)i(it)f(to)f(evaluate)i(the)
f(global)f(priority)-5 b(.)33 b(However)m(,)19 b(for)75 1308 y(the)h(quicksor\
t)f(problem,)j(the)e(average)g(time)f(complexity)h(of)f(a)h(node,)j(correspon\
ding)c(to)g(a)i(sorting)75 1386 y(subproblem)14 b(with)g(an)g(array)g(of)g fn
(n)691 1368 y fi(0)717 1386 y fu(elements,)i(is)e fn(O)r fl(\()p fn(n)1056
1368 y fi(0)1076 1386 y fu(log)8 b fn(n)1177 1368 y fi(0)1189 1386 y fl(\))p
fu(.)24 b(Since)14 b(a)h(node)f(with)g(a)g(lar)o(ger)g(value)h(of)75 1464 y fn
(n)104 1446 y fi(0)129 1464 y fu(will)e(typically)g(require)g(more)g(computat\
ion,)g(an)g(idle)h(processor)f(wants)h(to)f(schedule)h(the)f(node)g(with)75
1542 y(the)j(lar)o(gest)g fn(n)329 1524 y fi(0)357 1542 y fu(among)f(all)h
(the)g(other)f(processors.)30 b(So,)17 b(we)f(can)g(use)g fn(n)1373 1524 y fi
(0)1398 1542 y fo(\000)d fn(n)j fu(to)g(represent)g(the)f(global)75 1621 y
(priority)f(of)h(the)g(node,)i(instead.)28 b(Note)15 b(that)h(the)f(item)g fo
(\000)p fn(n)h fu(is)f(added)h(to)f(the)h(global)f(priority)f(to)h(ensure)75
1699 y(that)c(the)g(global)g(priority)e(is)j(non-positive)e(and,)i(therefore,)
f(less)h(than)f(or)f(equal)h(to)g(the)g(local)g(priority)l(.)18 b(As)75 1777 y
(for)12 b(the)h(local)f(priority)-5 b(,)14 b(since)f(each)g(processor)g(may)f
(want)h(to)f(sort)h(a)g(small)g(local)f(array)g(\256rst)h(in)f(order)g(to)75
1855 y(preserve)h(the)f(lar)o(ge)h(array)f(tasks)i(for)e(later)g(donation)g
(\(note)h(that)f(donating)h(a)g(task)g(with)f(greater)h(locality)75 1934 y
(may)h(reduce)g(the)g(communication)e(amount)i(as)h(mentioned)e(earlier\),)h
(we)g(can)g(let)g(the)g(local)f(priority)g(be)75 2012 y fn(n)e fo(\000)g fn
(n)194 1994 y fi(0)206 2012 y fu(.)148 2157 y(One)16 b(potential)e(problem)h
(for)g(the)g(above)g(algorithm)f(is)i(that)f(the)h(value)f(of)g fn(n)1536 2139
y fi(0)1563 2157 y fu(can)h(be)f(any)h(number)75 2235 y(between)d(0)g(and)h fn
(n)f fu(and)g(therefore)f(there)h(could)g(be)g(too)g(many)g(distinct)g(priori\
ties,)g(which)g(will)f(result)h(in)75 2314 y(more)f(task)g(scheduling)g(overh\
ead)g(\(this)g(will)g(be)g(discussed)h(in)f(greater)g(detail)f(in)h(the)h(nex\
t)f(chapter\).)17 b(T)m(o)75 2392 y(avoid)11 b(this)h(problem,)g(we)g(can)g
(squash)g(the)g(range)f(of)g(priorities,)h(by)f(letting)g(the)h(local)g(prior\
ity)e(of)h(a)h(node)75 2470 y(be)122 2452 y fm(2)155 2470 y fo(d)p fu(lg)p fl
(\()p fn(n=n)317 2452 y fi(0)329 2470 y fl(\))p fo(e)i fu(and)g(the)g(global)
f(priority)g(of)g(the)h(node)g(be)g fo(d)p fu(lg)p fl(\()p fn(n)1258 2452 y fi
(0)1269 2470 y fn(=n)p fl(\))p fo(e)p fu(.)24 b(This)14 b(reduces)h(the)e(num\
ber)h(of)75 2548 y(distinct)e(priorities)f(to)i(at)f(most)g(2)d(lg)f fn(n)p fu
(,)13 b(while)f(roughly)f(preserving)h(their)g(relative)g(sequence.)75 2653 y
750 2 v 133 2694 a fj(2)150 2709 y fs(lg)6 b fe(x)11 b fd(=)h fs(log)321 2720
y fj(2)345 2709 y fe(x)p fs(.)j(And,)10 b fc(d)p fe(x)p fc(e)h fs(is)f(the)g
(smallest)h(integer)e(lar)o(ger)i(than)e(or)h(equal)h(to)e fe(x)p fs(.)988
2836 y fu(33)p eop
%%Page: 34 48
 bop -4 53 a fg(3.2.4)57 b(Parallel)14 b(Asynchr)o(onous)h(Network)g(Simulati\
on)-4 297 y fu(In)e(Section)g(3.1.3,)i(we)f(discussed)h(the)e(synchronous)h
(network)f(simulation)g(problem.)21 b(However)n(,)14 b(some)-4 375 y(network)
c(simulation)g(problems)h(do)f(not)h(have)g(to)g(be)g(synchronized)g(at)g(the)
g(end)g(of)f(each)h(phase.)19 b(In)10 b(those)-4 454 y(problems,)g(as)g(long)
f(as)h(a)g(node)g(\(thread\))e(has)i(received)g(all)f(of)g(its)h(coming)f(dat\
a)h(via)g(its)g(in-edges,)g(the)g(node)-4 532 y(can)k(advance)g(to)g(the)g
(next)g(phase)h(and)f(continue)g(to)g(execute.)24 b(W)l(e)14 b(call)g(such)h
(problems)f fp(asynchr)n(onous)-4 610 y(network)e(simulation)g fu(\()p fp(ANS)
p fu(\).)69 755 y(For)k(parallel)h(ANS,)g(we)h(can)f(modify)g(the)g(schedulin\
g)g(algorithm)f(for)h(parallel)g(SNS)f(\(in)h(Section)-4 834 y(3.1.3\))c(by)g
(rede\256ning)g(the)g fn(i)p fu(th)g(priority)f fn(\031)739 816 y fi(0)738 846
y fk(i)765 834 y fu(of)h(a)h(task)f(\(corresponding)f(to)h(a)h(process)g(in)f
(some)h(phase\))f(as)-4 912 y(follow:)21 b(let)14 b(the)g(primary)f(key)i(be)
f(the)h(negative)f(of)g(the)h(phase)f(index)1250 894 y fm(3)1283 912 y fu(and)
h(the)f(secondary)h(key)f(be)h(the)-4 990 y(original)d fn(\031)192 997 y fk
(i)205 990 y fu(.)21 b(In)13 b(accordance)g(with)g(the)g(primary)e(key)m(,)j
(the)f(new)g(algorithm)f(will)h(try)f(to)h(schedule)h(all)f(the)-4 1068 y(tas\
ks)h(in)f(the)g(current)f(phase)i(before)f(advancing)g(to)g(the)h(next)f(phas\
e.)22 b(Thus,)14 b(the)g(scheduling)f(algorithm)-4 1147 y(basically)f(is)g
(the)g(same)h(as)f(the)h(scheduling)f(algorithm)e(for)i(parallel)f(SNS)h(exce\
pt)g(that)g(some)g(processors)-4 1225 y(may)e(be)h(able)g(to)f(start)h(execut\
ing)g(some)g(tasks)g(for)f(the)h(next)f(phase)i(while)e(waiting)g(for)g(tasks)
i(\(from)d(other)-4 1303 y(processors\))j(for)f(the)i(current)e(phase.)69 1448
y(The)k(above)f(scheduling)g(algorithm)g(still)g(has)h(one)f(problem:)21 b
(we)15 b(often)f(need)g(to)h(move)f(tasks)h(over)-4 1527 y(processors)e(to)h
(balance)g(the)f(load)g(near)h(the)f(end)h(of)f(each)h(phase.)22 b(W)l(e)14 b
(can)g(reduce)f(the)h(communication)-4 1605 y(for)j(load)i(balancing)f(by)h
(balancing)f(the)h(load)f(only)g(when)h(one)g(processor)f(falls)h(far)f(behin\
d)g(another)-4 1683 y(processor)m(.)24 b(For)14 b(example,)h(suppose)g(that)g
(the)f(fastest)h(processor)n(,)g(say)g fn(P)1310 1690 y fk(i)1325 1683 y fu
(,)g(has)g(some)g(tasks)g(in)f(a)h(phase)-4 1761 y fn(\036)25 1768 y fk(i)38
1761 y fu(,)f(while)f(the)f(slowest)i(processor)n(,)f(say)g fn(P)748 1768 y fk
(j)767 1761 y fu(,)h(has)f(no)g(tasks)g(in)g(a)g(newer)g(phase)g(than)g fn
(\036)1523 1768 y fk(j)1541 1761 y fu(,)g(where)g fn(\036)1730 1768 y fk(i)
1758 1761 y fn(>)i(\036)1840 1768 y fk(j)1858 1761 y fu(.)-4 1840 y(If)h fn
(\036)75 1847 y fk(i)102 1840 y fo(\000)d fn(\036)183 1847 y fk(thr)255 1840 y
fn(>)20 b(\036)342 1847 y fk(j)360 1840 y fu(,)f(we)e(say)g fn(P)580 1847 y fk
(j)616 1840 y fu(falls)f(far)h(behind)f fn(P)974 1847 y fk(i)989 1840 y fu
(,)i(and)f(then)g fn(P)1242 1847 y fk(j)1277 1840 y fu(can)g(schedule)g(some)
h(task)f(from)-4 1918 y(processor)12 b fn(P)230 1925 y fk(i)244 1918 y fu(,)h
(where)f fn(\036)432 1925 y fk(thr)497 1918 y fu(is)g(a)h(positive)f(threshol\
d)g(given)g(by)h(the)f(programmer)-5 b(.)69 2063 y(T)m(o)19 b(implement)f(the)
h(above)g(modi\256ed)g(scheduling)g(algorithm,)h(we)f(only)g(need)g(to)g(chan\
ge)g(some)-4 2141 y(priorities)14 b(as)i(follows.)28 b(For)15 b(each)h(task)g
(on)f(each)h(processor)g fn(P)1136 2148 y fk(i)1150 2141 y fu(,)h(we)f(add)f
fn(\036)1369 2148 y fk(thr)1437 2141 y fu(to)g(the)h(primary)e(key)i(of)-4
2219 y(its)e fn(i)p fu(th)h(priority)-5 b(.)26 b(Since)14 b(the)h fn(i)p fu
(th)f(priority)g(of)g(the)h(task)g(stands)g(for)f(the)h(priority)e(of)i(sched\
uling)f(the)h(task)-4 2298 y(locally)l(,)g(a)f(processor)f(tends)h(to)g(sched\
ule)g(local)g(tasks)g(with)g(high)f(priorities)g(unless)h(another)g(processor)
-4 2376 y(falls)e(far)f(behind.)-4 2653 y 750 2 v 54 2694 a fj(3)70 2709 y fs
(The)g(index)f(of)g(a)h(phase)f(is)g(the)h(index)e(of)h(its)g(previous)f(phas\
e)i(plus)f(one.)908 2836 y fu(34)p eop
%%Page: 35 49
 bop 75 59 a fv(3.3)71 b(Discussion)75 256 y fu(The)14 b(multilist)g(scheduli\
ng)f(schemes)i(proposed)f(in)f(this)h(chapter)g(demonstrate)f(that)h(our)f
(model)h(can)g(be)75 334 y(widely)9 b(applied)f(to)h(many)g(scheduling)f(algo\
rithms.)17 b(These)10 b(examples)f(also)g(demonstrate)g(that)f(it)h(is)g(much)
75 412 y(easier)g(to)g(implement)g(scheduling)g(algorithms)f(using)h(multilis\
t)f(scheduling)h(than)g(to)g(write)g(sophisticated)75 491 y(scheduling)k(rout\
ines)f(from)f(scratch.)20 b(For)12 b(example,)h(in)f(our)g(experiments,)h(the)
g(code)g(for)e(the)i fp(PDC-WK)75 569 y fu(and)i fp(PBFS-GPQ)h fu(scheduling)
f(algorithms)f(\(shown)g(in)h(Appendix)f(A.2\))h(only)f(has)i(about)e(10-20)g
(lines.)75 647 y(A)i(program)f(of)h(this)g(size)h(can)f(be)g(written)f(within)
h(tens)g(of)g(minutes.)29 b(This)17 b(is)g(in)e(sharp)i(contrast)e(with)75 725
y(previous)f(dynamic)f(load)h(balancing)g(programs,)g(which)g(would)f(typical\
ly)h(require)f(thousands)h(of)g(lines)75 804 y(of)j(C)h(code.)34 b(This)18 b
(was)g(the)g(case)g(in)g(our)f(earlier)g(experience)g([31)o(,)h(62])f(in)h
(parallelizing)e(Noodles,)k(a)75 882 y(solid)c(modeling)f(program)g([23)o(].)
28 b(It)16 b(took)f(us)h(months)g(to)f(write)h(the)f(load)h(balancing)g(part!)
27 b(Since)16 b(our)75 960 y(approach)10 b(can)h(greatly)e(shorten)h(the)h
(time)f(of)g(implementing)f(a)h(scheduling)h(algorithm,)f(we)g(expect)h(more)
75 1038 y(interesting)h(and)g(complicated)g(scheduling)g(algorithms)g(to)g
(be)h(devised)f(and)h(implemented.)148 1184 y(Although)f(this)h(chapter)f(sho\
ws)h(the)f(simplicity)g(of)g(implementing)g(a)g(multilist)g(scheduling)h(sche\
me)75 1262 y(for)g(a)i(given)f(scheduling)g(algorithm,)g(we)h(of)n(fer)f(no)g
(advice)h(on)f(how)g(to)g(come)h(up)f(with)g(the)g(scheduling)75 1340 y(algor\
ithm)h(itself.)29 b(This)17 b(is)f(because)h(there)f(are)g(too)g(many)g(facto\
rs)f(which)h(can)h(af)n(fect)f(system)h(perfor-)75 1418 y(mance.)i(These)14 b
(factors)e(includes,)h(for)f(example,)h(the)g(relative)f(importance)g(of)g
(increasing)g(parallelism,)75 1497 y(minimizing)k(the)h(total)g(amount)g(of)f
(computation,)i(minimizing)e(the)i(required)e(amount)g(of)h(communi-)75 1575 y
(cation,)e(reducing)f(the)g(memory)f(requirement,)h(and)g(reducing)g(the)g
(number)f(of)h(distinct)g(priorities.)23 b(W)l(e)75 1653 y(\256nd)16 b(it)g
(dif)o(\256cult)f(to)i(provide)e(a)i(simple)f(rule)g(for)f(assigning)i(priori\
ties)e(based)i(on)f(all)h(the)f(factors.)30 b(So,)75 1731 y(we)15 b(leave)f
(this)h(problem)e(open.)25 b(W)l(e)15 b(only)f(want)g(to)g(ar)o(gue)h(that)f
(it)g(is)h(simple)f(to)h(implement)e(a)i(multilist)75 1810 y(scheduling)d(sch\
eme)h(for)e(a)i(given)f(scheduling)g(algorithm,)f(and)h(\(in)g(the)g(next)g
(chapter\))g(that)g(our)f(general)75 1888 y(approach)k(incurs)g(no)g(signi\
\256cant)g(performance)f(overhead.)26 b(In)15 b(addition,)h(since)g(it)f(is)g
(so)h(easy)f(to)g(vary)75 1966 y(a)h(scheduling)g(algorithm)f(in)h(our)f(mode\
l)h(by)g(simply)g(adjusting)g(priorities)f(or)g(scheduling)h(patterns,)h(it)
75 2044 y(becomes)d(easy)g(for)e(a)h(programmer)f(to)h(\256nd)g(the)g(best)h
(scheduling)f(algorithm)f(by)h(searching)h(the)f(design)75 2123 y(space)g(emp\
irically)l(.)988 2836 y(35)p eop
%%Page: 36 50
 bop 908 2836 a fu(36)p eop
%%Page: 37 51
 bop 75 490 a fq(Chapter)25 b(4)75 802 y(Implementation)g(Issues)75 1113 y fu
(In)19 b(addition)g(to)g(the)g(issues)i(of)e(simplicity)g(and)g(generality)g
(of)g(the)g(multilist)g(scheduling)g(model)g(\(as)75 1191 y(discussed)h(in)e
(the)g(previous)g(chapters\),)j(another)c(important)h(issue)h(is)g(to)f fp
(ef\256ciently)g fu(implement)g(this)75 1269 y(model)10 b(such)h(that)f(our)g
(general)g(approach)g(incurs)g(no)g(signi\256cant)g(performance)f(overhead.)
17 b(Sections)11 b(4.1)75 1348 y(and)g(4.2)h(will)f(respectively)g(propose)g
(some)h(ef)n(\256cient)f(techniques)h(of)f(implementing)f(virtual)g(lists)i
(\(VLs\))75 1426 y(and)i(physical)g(lists)h(\(PLs\),)f(on)g(which)g(the)g(mod\
el)g(is)g(based.)24 b(Section)14 b(4.3)g(will)g(show)g(that)g(our)f(general)
75 1504 y(approach)g(incurs)g(no)h(signi\256cant)f(performance)f(overhead)h
(at)g(least)h(for)f(certain)g(important)f(scheduling)75 1582 y(algorithms.)75
1882 y fv(4.1)71 b(Maintaining)18 b(V)m(irtual)h(Lists)75 2085 y fu(Since)c
(VLs)i(are)e(conceptually)g(constructed)g(from)g(PLs)h(which)f(may)h(be)f(on)
h(dif)n(ferent)f(processors,)i(we)75 2164 y(need)e(to)f(maintain)g(VLs)i(via)
e(interprocessor)g(communication.)24 b(Section)14 b(4.1.1)h(will)f(\256rst)h
(describe)f(the)75 2242 y fp(standar)n(d)i(pr)o(otocol)p fu(,)g(which)g(we)g
(can)g(use)g(to)f(mer)o(ge)h(PLs)g(into)g(VLs)g(in)g fp(all)f fu(cases.)30 b
(Section)15 b(4.1.2)h(will)75 2320 y(describe)j(a)h(more)e(ef)o(\256cient)h
(protocol,)h(called)f(the)h fp(global)e(pr)o(otocol)p fu(,)j(which)e(we)g(can)
g(use)h(when)f(the)75 2398 y(scheduling)12 b(pattern)g(includes)h(a)f(global)
g(scheduling)g(subpattern)g(\(as)h(de\256ned)f(in)g(De\256nition)g(3.1\).)75
2671 y fg(4.1.1)57 b(Standard)16 b(Pr)o(otocol)988 2836 y fu(37)p eop
%%Page: 38 52
 bop -4 1092 a @beginspecial @setspecial
%%BeginDocument: fig/new-standard.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 8 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
1 14 /Courier-Oblique FMDEFINEFONT
2 11 /Courier-Oblique FMDEFINEFONT
3 12 /Times-Italic FMDEFINEFONT
4 10 /Times-Italic FMDEFINEFONT
5 12 /Courier-Oblique FMDEFINEFONT
6 10 /Courier-Oblique FMDEFINEFONT
7 14 /Symbol FMDEFINEFONT
612 792 0 FMBEGINPAGE
273.11 103.76 285.02 100.26 273.06 96.92 273.08 100.34 4 Y
0 X
0 K
V
0.5 H
2 Z
223 270 228.09 182.6 281.05 282.8 A
314.27 117.09 324.62 111.03 312.62 110.68 313.45 113.89 4 Y
2 X
V
114.03 163.8 314.43 113.61 2 L
N
54.53 17.4 177.03 244.2 R
4 X
N
270.63 17.4 393.13 244.2 R
N
61.06 156.8 171.3 239.69 R
0 X
N
277.15 156.8 387.4 239.69 R
N
0 F
(Memory) 283.28 223.58 T
(Memory) 67.18 223.58 T
1 F
(VL) 67.93 81.77 T
2 F
(1) 84.73 78.27 T
1 F
(VL) 284.76 80.67 T
2 F
(2) 301.55 77.17 T
59.94 22.8 170.18 45.11 R
7 X
V
0 X
N
0 F
(CPU) 99.55 29.53 T
276.03 22.8 386.28 45.11 R
7 X
V
0 X
N
3 F
(P) 59.94 54.46 T
4 F
(1) 67.26 51.46 T
3 F
(P) 276.03 54.46 T
4 F
(2) 283.36 51.46 T
0 F
(CPU) 320.23 28.67 T
115.83 56.35 112.52 44.81 109.21 56.35 112.52 56.35 4 Y
3 X
V
112.52 66.41 112.52 55.35 2 L
N
335.05 56.35 331.75 44.81 328.44 56.35 331.75 56.35 4 Y
V
331.75 66.41 331.75 55.35 2 L
N
5 F
0 X
(PL) 106.43 214.75 T
6 F
(1) 120.82 211.75 T
104.73 164 104.73 205.4 2 L
N
122.73 164 122.73 205.4 2 L
N
122.73 164 104.73 164 2 L
N
122.73 178.4 104.73 178.4 2 L
N
122.73 192.8 104.73 192.8 2 L
N
0 F
(donate a task) 193.62 88.42 T
(request a task) 191.43 174.82 T
334.91 123.53 331.6 112 328.29 123.53 331.6 123.53 4 Y
4 X
V
331.6 163.8 331.6 122.53 2 L
1 H
N
347.13 115.31 335.59 112.03 343.64 120.93 345.38 118.12 4 Y
V
406.8 155.8 344.55 117.56 2 L
N
136.27 166.05 124.24 168.64 135.81 172.82 136.04 169.44 4 Y
0 X
V
0.5 H
54 96 226.58 159 151.85 10.8 A
7 F
(p) 79.06 168.36 T
4 F
(max) 86.74 173.16 T
(1) 89.13 164.27 T
(1) 240.63 113.66 T
0 F
(report ) 199.63 117.35 T
7 F
(p) 231.27 117.35 T
4 F
(max) 238.95 122.15 T
92.61 65.81 92.61 110.4 2 L
3 X
N
131.7 65.85 131.7 110.4 2 L
N
132.21 65.81 92.61 65.81 2 L
N
132.21 75.81 92.61 75.81 2 L
N
132.21 85.81 92.61 85.81 2 L
N
132.21 95.81 92.61 95.81 2 L
N
311.61 65.81 311.61 110.4 2 L
N
350.7 65.85 350.7 110.4 2 L
N
351.21 65.81 311.61 65.81 2 L
N
351.21 75.81 311.61 75.81 2 L
N
351.21 85.81 311.61 85.81 2 L
N
351.21 95.81 311.61 95.81 2 L
N
FMENDPAGE
%%EndDocument
 @endspecial 195 1168 a fu(Figure)12 b(4.1:)18 b(An)12 b(example)h(of)e(the)i
(standard)f(protocol)f(\()p fn(P)c(L)1261 1175 y fm(1)1293 1168 y fu(is)12 b
(mer)o(ged)g(to)g fn(V)g(L)1623 1175 y fm(2)1642 1168 y fu(\).)-4 1301 y(The)
j(standard)f(protocol)g(is)g(applicable)h(whenever)f(there)g(is)h(a)g(need)f
(to)h(mer)n(ge)g(a)g(PL)f(into)h(a)f(VL)h(over)f(a)-4 1380 y(network.)29 b
(Figure)16 b(4.1)h(illustrates)f(an)h(example)f(in)g(which)h(a)f(PL,)h(say)g
fn(P)7 b(L)1359 1387 y fm(1)1395 1380 y fu(on)16 b(processor)h fn(P)1700 1387
y fm(1)1719 1380 y fu(,)h(is)f(one)-4 1458 y(of)c(the)h(PLs)h(mer)o(ged)f(int\
o)g(a)g(VL,)i(say)e fn(V)e(L)756 1465 y fm(2)789 1458 y fu(on)i(another)g(pro\
cessor)g fn(P)1253 1465 y fm(2)1272 1458 y fu(.)24 b(Let)15 b fn(\031)1418
1440 y fk(max)1417 1470 y fm(1)1504 1458 y fu(denote)f(the)h(highest)-4 1536 y
(priority)10 b(in)j fn(P)7 b(L)280 1543 y fm(1)299 1536 y fu(.)18 b(W)l(e)13 b
(can)f(straightforwardly)f(implement)g(the)i(standard)f(protocol)f(as)i(follo\
ws.)68 1732 y fo(\017)24 b fu(Whenever)13 b fn(\031)364 1714 y fk(max)363 1744
y fm(1)448 1732 y fu(is)g(changed,)g fn(P)716 1739 y fm(1)748 1732 y fu(repor\
ts)e(the)i(new)f fn(\031)1097 1714 y fk(max)1095 1744 y fm(1)1181 1732 y fu
(to)g fn(P)1263 1739 y fm(2)1282 1732 y fu(.)68 1851 y fo(\017)24 b fn(P)148
1858 y fm(2)179 1851 y fu(requests)11 b(a)h(task)f(from)g fn(P)c(L)658 1858 y
fm(1)688 1851 y fu(if)k fn(\031)759 1833 y fk(max)758 1863 y fm(1)842 1851 y
fu(is)h(higher)f(than)g(the)g(priorities)f(in)h(any)g(other)g(PLs)h(mer)o(ged)
117 1929 y(into)h fn(V)e(L)280 1936 y fm(2)299 1929 y fu(.)20 b(Then,)15 b fn
(P)491 1936 y fm(1)523 1929 y fu(donates)e(a)g(task)h(from)d fn(P)d(L)998 1936
y fm(1)1030 1929 y fu(to)k fn(P)1112 1936 y fm(2)1145 1929 y fu(\(and)g(remov\
es)h(the)g(task)g(from)f(all)h(other)117 2007 y(PLs)g(on)g fn(P)301 2014 y fm
(1)320 2007 y fu(\).)69 2203 y(In)f(the)i(standard)f(protocol,)f(it)h(may)g
(turn)g(out)g(that)g(a)g(PL)g(which)g(is)h(mer)o(ged)f(into)f(a)i(VL)f(may)g
(need)h(to)-4 2281 y(report)g(to)h(the)h(processor)f(with)g(the)h(VL)g(too)f
(frequently)l(.)27 b(In)16 b(order)e(to)i(reduce)f(the)g(number)g(of)g(report\
s)-4 2360 y(to)c(achieve)i(better)e(performance,)h(we)g(allow)g(the)g(program\
mer)e(to)i(provide)g(some)g(more)f(information)g(in)-4 2438 y(the)h(following)
f(two)h(ways.)68 2634 y fo(\017)24 b fu(The)18 b(programmer)e(can)h(describe)
g(the)g(known)g(range)g(of)g(priorities)f(in)h(each)h(PL.)f(Consider)h(the)
117 2712 y(scheduling)e(pattern)e(in)h(Figure)g(4.2,)h(in)g(which)f(the)g(pri\
ority)f(range)h(of)f fn(P)8 b(L)1479 2719 y fm(1)1513 2712 y fu(is)15 b(betwe\
en)h fn(\031)1771 2719 y fk(l)1799 2712 y fu(and)908 2836 y(38)p eop
%%Page: 39 53
 bop 75 1092 a @beginspecial @setspecial
%%BeginDocument: fig/plrange.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 7 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
1 14 /Courier-Oblique FMDEFINEFONT
2 11 /Courier-Oblique FMDEFINEFONT
3 12 /Times-Italic FMDEFINEFONT
4 10 /Times-Italic FMDEFINEFONT
5 12 /Courier-Oblique FMDEFINEFONT
6 14 /Symbol FMDEFINEFONT
612 792 0 FMBEGINPAGE
320.93 110.49 331.29 104.43 319.29 104.08 320.11 107.29 4 Y
2 X
0 K
V
120.7 157.2 321.09 107.01 2 L
0.5 H
2 Z
N
61.2 10.8 183.7 237.6 R
4 X
N
277.3 10.8 399.8 237.6 R
N
67.72 150.2 177.97 233.09 R
0 X
N
283.82 150.2 394.07 233.09 R
N
0 F
(Memory) 289.94 216.98 T
(Memory) 73.85 216.98 T
1 F
(VL) 74.6 75.17 T
2 F
(1) 91.39 71.67 T
1 F
(VL) 291.43 74.07 T
2 F
(2) 308.22 70.57 T
66.6 16.2 176.85 38.51 R
7 X
V
0 X
N
0 F
(CPU) 106.22 22.93 T
282.7 16.2 392.95 38.51 R
7 X
V
0 X
N
3 F
(P) 66.6 47.86 T
4 F
(1) 73.93 44.86 T
3 F
(P) 282.7 47.86 T
4 F
(2) 290.03 44.86 T
0 F
(CPU) 326.9 22.08 T
122.49 49.75 119.18 38.21 115.88 49.75 119.18 49.75 4 Y
3 X
V
119.18 59.81 119.18 48.75 2 L
N
318.61 59.81 318.61 104.4 2 L
N
357.7 59.85 357.7 104.4 2 L
N
358.21 59.81 318.61 59.81 2 L
N
341.72 49.75 338.41 38.21 335.1 49.75 338.41 49.75 4 Y
V
338.41 59.81 338.41 48.75 2 L
N
5 F
0 X
(PL) 111.09 205.77 T
2 F
(1) 125.49 202.27 T
111.4 157.4 111.4 198.8 2 L
N
129.4 157.4 129.4 198.8 2 L
N
129.4 157.4 111.4 157.4 2 L
N
129.4 171.8 111.4 171.8 2 L
N
129.4 186.2 111.4 186.2 2 L
N
341.57 116.93 338.27 105.4 334.96 116.93 338.27 116.93 4 Y
4 X
V
338.27 156.2 338.27 115.93 2 L
1 H
N
353.79 108.71 342.25 105.43 350.3 114.33 352.05 111.52 4 Y
V
413.47 149.2 351.21 110.96 2 L
N
6 F
0 X
(p) 348.67 159.95 T
4 F
(max) 356.35 164.75 T
6 F
(\263p) 373 159.95 T
4 F
(u) 388.36 156.95 T
(2) 358.74 155.86 T
0 F
(omit reports) 198 103.42 T
5 F
(PL) 329.28 204.15 T
4 F
(2) 343.67 201.15 T
327.58 156.4 327.58 197.8 2 L
0.5 H
N
345.58 156.4 345.58 197.8 2 L
N
345.58 156.4 327.58 156.4 2 L
N
345.58 170.8 327.58 170.8 2 L
N
345.58 185.2 327.58 185.2 2 L
N
0 F
(Priority ) 133.87 187.42 T
(\050) 133.87 164.42 T
6 F
(p) 137.86 164.42 T
4 F
(l) 145.54 161.42 T
0 F
( , ) 148.32 164.42 T
6 F
(p) 157.32 164.42 T
4 F
(u) 165 161.42 T
0 F
(\051) 169.99 164.42 T
216 144 237.6 122.4 2 L
3 H
N
237.6 144 216 122.4 2 L
N
358.21 69.81 318.61 69.81 2 L
0.5 H
3 X
N
358.21 79.81 318.61 79.81 2 L
N
358.21 89.81 318.61 89.81 2 L
N
0 X
(Range) 133.87 175.42 T
100.61 59.81 100.61 104.4 2 L
3 X
N
139.7 59.85 139.7 104.4 2 L
N
140.21 59.81 100.61 59.81 2 L
N
140.21 69.81 100.61 69.81 2 L
N
140.21 79.81 100.61 79.81 2 L
N
140.21 89.81 100.61 89.81 2 L
N
FMENDPAGE
%%EndDocument
 @endspecial 415 1168 a fu(Figure)11 b(4.2:)18 b(Omitting)12 b(reports)g(base\
d)g(on)h(given)f(priority)f(ranges.)197 1308 y fn(\031)225 1315 y fk(u)247
1308 y fl(\()p fo(\025)19 b fn(\031)352 1315 y fk(l)364 1308 y fl(\))p fu(.)
29 b(When)16 b(the)g(priority)f(of)g(some)i(task)f(in)g fn(P)7 b(L)1203 1315 y
fm(2)1238 1308 y fu(is)16 b(greater)f(than)h(or)g(equal)g(to)f fn(\031)1807
1315 y fk(u)1829 1308 y fu(,)j fn(V)11 b(L)1931 1315 y fm(2)197 1387 y fu(can)
k(disable)f(all)h(reports)f(from)f fn(P)7 b(L)836 1394 y fm(1)870 1387 y fu
(because)15 b(processor)f fn(P)1278 1394 y fm(2)1312 1387 y fu(will)g(not)g
(need)h(to)f(schedule)h(a)g(task)197 1465 y(from)e fn(P)7 b(L)379 1472 y fm
(1)398 1465 y fu(.)23 b(For)13 b(example,)i(in)f(the)g fp(PDC-RR)h fu(schedul\
ing)f(algorithm,)g(since)g(each)g(local)g(list)g(LL)197 1543 y(contains)e(onl\
y)f(non-negative)f(priorities,)h(and)h(each)g(global)f(list)g(GL)h(contains)g
(only)f(non-positive)197 1621 y(priorities,)f(a)g(processor)g(does)g(not)g
(need)g(to)g(report)f(the)g(maximum)g(priority)g(of)g(its)i(GL)f(to)g(any)g
(other)197 1700 y(processors.)18 b(A)12 b(processor)g(will)f(request)h(a)g
(task)g(from)f(a)h(GL)g(only)f(when)h(the)g(processor)g(becomes)197 1778 y
(idle.)75 2297 y @beginspecial @setspecial
%%BeginDocument: fig/indiv.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 1 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
612 792 0 FMBEGINPAGE
76.84 79.54 80.15 91.08 83.45 79.54 80.15 79.54 4 Y
0 X
0 K
V
80.15 28.71 80.15 80.54 2 L
0.5 H
2 Z
N
396.05 32.01 407.59 28.71 396.05 25.4 396.05 28.71 4 Y
V
80.15 28.71 397.05 28.71 2 L
N
113.87 29.24 113.87 24.13 2 L
N
127.52 29.24 127.52 24.13 2 L
N
141.16 29.24 141.16 24.13 2 L
N
154.8 29.24 154.8 24.13 2 L
N
168.45 29.24 168.45 24.13 2 L
N
182.09 29.24 182.09 24.13 2 L
N
195.73 29.24 195.73 24.13 2 L
N
209.38 29.24 209.38 24.13 2 L
N
223.02 29.24 223.02 24.13 2 L
N
236.66 29.24 236.66 24.13 2 L
N
250.31 29.24 250.31 24.13 2 L
N
263.95 29.24 263.95 24.13 2 L
N
277.59 29.24 277.59 24.13 2 L
N
291.24 29.24 291.24 24.13 2 L
N
304.88 29.24 304.88 24.13 2 L
N
318.52 29.24 318.52 24.13 2 L
N
332.17 29.24 332.17 24.13 2 L
N
345.81 29.24 345.81 24.13 2 L
N
359.45 29.24 359.45 24.13 2 L
N
373.1 29.24 373.1 24.13 2 L
N
0 F
(# of tasks) 57.6 89.56 T
100.23 29.24 100.23 24.13 2 L
N
(priority) 383.04 35.81 T
73.32 39.99 86.97 39.99 2 L
N
(1) 59.68 36.35 T
114.25 50.2 121.08 55.31 237.04 55.31 243.87 50.2 4 L
N
(next phase) 154.6 64.32 T
250.69 50.2 257.51 55.31 373.48 55.31 380.3 50.2 4 L
N
346.1 51.04 346.1 30.07 2 L
N
318.61 38.61 318.61 27.81 2 L
N
372.61 49.41 372.61 28.45 2 L
N
305.17 51.04 305.17 30.07 2 L
N
168.07 50.2 168.07 29.24 2 L
N
196.02 40.82 196.02 30.07 2 L
N
208.99 50.2 208.99 29.24 2 L
N
236.95 50.2 236.95 29.24 2 L
N
(current phase) 284.6 63.32 T
223.47 39.99 223.47 29.24 2 L
N
251.3 81.8 240.11 76.78 246.93 86.97 249.12 84.39 4 Y
V
0 134 27.29 10.22 267.4 76.75 A
(no report) 324 92.6 T
319.15 82.59 308.32 76.78 314.42 87.44 316.79 85.01 4 Y
4 X
V
0 128 20.47 10.22 328.8 76.75 A
359.11 83.67 349.26 76.75 353.95 87.84 356.53 85.75 4 Y
V
0 120 13.64 10.22 362.91 76.75 A
209.03 83.67 199.18 76.75 203.87 87.84 206.45 85.75 4 Y
V
0 120 13.64 10.22 212.83 76.75 A
181.74 83.67 171.9 76.75 176.58 87.84 179.16 85.75 4 Y
V
0 120 13.64 10.22 185.54 76.75 A
0 X
(no report) 175.97 92.62 T
(report) 255.6 92.62 T
FMENDPAGE
%%EndDocument
 @endspecial 76 x(Figure)k(4.3:)28 b(Indivisible)17 b(ranges)g(for)g(parallel)
g(ANS)g(\(no)f(report)h(when)g(the)g(phase)h(index)f(is)h(still)f(the)75 2451
y(same\).)148 2634 y fo(\017)24 b fu(The)c(programmer)d(can)j(de\256ne)f(indi\
visible)g(priority)f(ranges)h(for)g(each)g(PL,)h(such)g(that)f(all)g(the)197
2712 y(priorities)g(within)g(one)h(range)g(are)g(considered)g(as)g(one)g(prio\
rity)f(value)h(by)g(other)f(processors.)988 2836 y(39)p eop
%%Page: 40 54
 bop 117 53 a fu(Thus,)15 b(the)f(PL)f(need)h(not)f(report)g(when)g(updating)
g fn(\031)1046 35 y fk(max)1044 66 y fm(1)1131 53 y fu(within)g(the)g(same)h
(range.)22 b(For)12 b(example,)117 132 y(for)i(the)g(parallel)f(asynchronous)
h(network)f(simulation)h(\(ANS\))f(described)h(in)f(Section)h(3.2.4,)h(we)117
210 y(need)f(to)f(balance)h(the)f(load)g(mainly)g(when)g(the)h(primary)e(prio\
rity)-5 b(,)14 b(the)g(phase)g(index,)f(is)h(changed.)117 288 y(Since)21 b
(it)f(is)g(not)h(important)e(to)h(let)g(the)g(other)g(processor)h(know)f(the)
g(secondary)h(priority)-5 b(,)23 b(the)117 366 y(programmer)14 b(can)h(declar\
e)f(all)h(priorities)f(with)h(the)f(same)i(phase)f(index)g(to)f(lie)h(within)
f(the)h(same)117 445 y(priority)e(range,)i(so)f(that)g(PLs)g(will)g(avoid)g
(making)f(reports)h(until)f(the)h(phase)g(changes,)i(as)e(shown)117 523 y(in)
f(Figure)e(4.3.)-4 755 y fg(4.1.2)57 b(Global)15 b(Pr)o(otocol)-4 934 y fu
(In)21 b(some)h(situations,)i(we)e(can)g(achieve)g(better)f(performance)g(by)
g(using)h(a)g(dif)o(ferent)f(protocol.)45 b(In)-4 1012 y(particular)l(,)17 b
(let)e(us)g(consider)g(the)h(case)g(where)e(the)i(scheduling)f(pattern)f(incl\
udes)i(a)f(global)g(scheduling)-4 1090 y(subpattern)f(\(de\256ned)f(in)i(De\
\256nition)e(3.1\).)25 b(The)15 b(case)g(is)g(important)e(for)h(many)g(schedu\
ling)g(algorithms)-4 1169 y(\(in)g(Chapter)g(3\),)h(e.g.,)i fp(PBFS-GPQ)p fu
(,)f fp(PDC-WK)p fu(,)g(the)f(quicksort)f(algorithm,)h(the)f(factoring)g(sche\
duling)-4 1247 y(algorithm,)19 b(and)f(the)h(principle)e(variation)h(splittin\
g)g(algorithm.)35 b(For)18 b(simplicity)f(of)h(discussion,)j(we)-4 1325 y(con\
sider)14 b(that)g(in)g(the)g(global)g(scheduling)g(subpattern)g(each)g(proces\
sor)h fn(P)1329 1332 y fk(i)1357 1325 y fu(has)g(one)f(and)h(only)f(one)g(PL,)
-4 1403 y(denoted)9 b(by)h fn(P)d(L)294 1410 y fk(i)308 1403 y fu(,)k(which)f
(is)g(mer)n(ged)g(into)g(each)g(VL)g(\(see)g(Figure)f(3.1\(b\)\).)17 b(Let)10
b fn(\031)1431 1385 y fk(max)1430 1416 y(i)1513 1403 y fu(denote)g(the)g(high\
est)-4 1482 y(priority)j(in)i fn(P)7 b(L)285 1489 y fk(i)314 1482 y fu(and)15
b fn(\031)431 1464 y fk(max)518 1482 y fu(denote)g fn(max)p fl(\()p fn(\031)
810 1464 y fk(max)810 1494 y(i)882 1482 y fl(\))g fu(for)f(all)h fn(i)p fu
(.)26 b(For)14 b(a)h(scheduling)g(pattern)g(that)f(includes)-4 1560 y(the)k
(global)h(scheduling)g(subpattern,)i(the)e(standard)g(protocol)f(may)h(be)g
(inef)n(\256cient)g(in)g(the)g(following)-4 1638 y(situations:)68 1806 y fo
(\017)24 b fu(Whenever)17 b(the)g(value)g(of)g fn(\031)630 1788 y fk(max)629
1818 y(i)719 1806 y fu(is)h(changed,)g(processor)f fn(P)1205 1813 y fk(i)1237
1806 y fu(will)g(broadcast)g(a)g(message)h(to)f(all)117 1884 y(VLs)f(even)e
(if)g(some)g(other)g fn(\031)636 1866 y fk(max)635 1897 y(j)722 1884 y fu(is)
h(already)f(higher)f(than)h fn(\031)1202 1866 y fk(max)1200 1897 y(i)1274 1884
y fu(.)24 b(The)15 b(broadcast)f(may)g(result)g(in)117 1963 y(unnecessary)f
(communication)f(overhead.)68 2075 y fo(\017)24 b fu(Many)14 b(processors)f
(may)g(simultaneously)f(send)i(task)f(requests)g(to)g(the)f(processor)h(conta\
ining)g(the)117 2153 y(task)h(with)f fn(\031)343 2135 y fk(max)415 2153 y fu
(.)22 b(This)14 b(processor)f(which)h(receives)f(these)h(requests)g(will)f
(\252of)o(f-load\272)g(more)g(than)117 2231 y(one)j(task.)27 b(Among)15 b(the\
se)g(of)o(\257oaded)g(tasks,)i(perhaps,)f(only)f(the)g(\256rst)g(task)h(has)g
(a)f(high)g(priority)-5 b(.)117 2309 y(For)13 b(example,)g fn(P)8 b(L)466 2316
y fm(1)498 2309 y fu(has)13 b(tasks)h(with)f(priorities)f(\(4,)h(6,)h(8,)f
(9\))g(and)g fn(P)7 b(L)1364 2316 y fm(2)1397 2309 y fu(has)13 b(tasks)h(with)
f(priorities)117 2388 y(\(1,)i(2,)g(10\).)22 b(If)14 b fn(P)418 2395 y fm(3)
451 2388 y fu(and)g fn(P)568 2395 y fm(4)601 2388 y fu(need)g(to)g(request)g
(tasks)h(at)f(the)g(same)g(time,)h(they)f(both)f(will)h(send)g(task)117 2466 y
(requests)f(to)f fn(P)375 2473 y fm(2)394 2466 y fu(.)19 b(Thus,)13 b(either)
f fn(P)706 2473 y fm(3)738 2466 y fu(or)g fn(P)823 2473 y fm(4)854 2466 y fu
(will)g(get)h(the)f(task)h(with)f(a)g(low)g(priority)f(of)h(2.)69 2634 y(In)k
(order)g(to)g(improve)g(the)h(ef)n(\256ciency)g(when)f(there)h(is)g(a)g(globa\
l)f(scheduling)g(subpattern,)i(we)f(will)-4 2712 y(introduce)e(a)i(central)f
(mechanism)h(to)f(help)h(regulate)f(the)g(scheduling)h(protocol.)30 b(This)17
b(mechanism)f(is)908 2836 y(40)p eop
%%Page: 41 55
 bop 75 53 a fu(called)16 b(a)h fp(global)e(load)h(balancer)g fu(\()p fp(GLB)
p fu(\),)g(and)g(this)h(kind)f(of)f(scheduling)h(protocol)g(is)g(called)g(a)h
fp(global)75 132 y(pr)n(otocol)p fu(.)148 277 y(In)12 b(Section)f(4.1.2.1,)i
(we)f(will)g(\256rst)f(propose)h(a)g(simple)f(global)h(protocol)f(to)g(perfor\
m)g(load)g(balancing)75 355 y(by)j(considering)f(only)g(those)h(tasks)g(with)
g(the)f(highest)h(priority)e fn(\031)1247 337 y fk(max)1318 355 y fu(.)23 b
(If)13 b(there)g(are)h(enough)f(tasks)h(with)75 433 y(priority)c fn(\031)266
415 y fk(max)338 433 y fu(,)i(we)g(can)g(ignore)f(the)h(overhead)f(that)h(tas\
k)g(prioritization)e(causes.)19 b(However)n(,)12 b(if)g(there)f(are)75 512 y
(not)i(enough)f(such)h(tasks,)h(task)g(prioritization)d(may)h(result)h(in)g
(signi\256cant)f(overhead.)20 b(W)l(e)13 b(will)f(describe)75 590 y(a)j(solut\
ion)g(to)g(this)g(problem)f(in)h(Section)g(4.1.2.2)h(and)f(describe)g(an)g
(advanced)g(protocol)g(based)g(on)g(the)75 668 y(solution)d(in)g(Section)g
(4.1.2.3.)75 897 y fr(4.1.2.1)51 b(Simple)12 b(Global)f(Protocol)75 1078 y fu
(For)h(a)h(global)f(protocol,)g(the)h(GLB)g(basically)g(wants)g(to)f(perform)
f(load)i(balancing)f(by)g(considering)g(only)75 1156 y(those)k(tasks)g(with)g
(the)f(highest)h(priority)e fn(\031)847 1138 y fk(max)918 1156 y fu(.)29 b
(Let)16 b fo(>)1080 1163 y fm(0)1114 1156 y fu(be)g(the)f(set)i(of)e(tasks)h
(with)g fn(\031)1631 1138 y fk(max)1703 1156 y fu(.)28 b(\(Later)n(,)17 b(we)
75 1234 y(will)d(let)g fo(>)270 1241 y fm(1)303 1234 y fu(be)h(the)f(set)h
(of)f(tasks)h(with)f fn(\031)812 1216 y fk(max)896 1234 y fo(\000)e fu(1.\))
24 b(The)15 b(GLB)g(needs)g(to)f(keep)g(track)g(of)g fn(\031)1720 1216 y fk
(max)1806 1234 y fu(and)h fo(>)1932 1241 y fm(0)75 1313 y fu(in)f(order)f(to)
h(balance)g(the)f(load.)23 b(So,)15 b(if)e(a)h(processor)g(sends)h(a)f(task)g
(request)g(to)g(the)f(GLB,)i(the)f(GLB)h(can)75 1391 y(decide)d(which)h(task)
f(in)h fo(>)535 1398 y fm(0)565 1391 y fu(to)g(donate.)148 1536 y(In)f(the)h
(global)f(protocol,)g(the)g(GLB)h(needs)g(to)g(monitor)e(each)i(processor)q
(')m(s)g(status)g(and)g(keep)f(track)h(of)75 1614 y fn(\031)104 1596 y fk(max)
176 1614 y fu(.)19 b(Each)13 b(processor)f fn(P)553 1621 y fk(i)580 1614 y fu
(has)h(the)f(following)f(status:)148 1826 y fo(\017)24 b fn(\031)226 1808 y fk
(max)225 1838 y(i)298 1826 y fu(.)19 b(The)13 b(highest)f(priority)f(in)h fn
(P)7 b(L)859 1833 y fk(i)874 1826 y fu(.)148 1956 y fo(\017)24 b fn(\031)226
1938 y fk(max)298 1956 y fu(.)38 b(The)19 b(highest)g(priority)f(in)g(the)h
(entire)f(system.)38 b(It)19 b(must)g(be)f(obtained)h(from)f(the)g(GLB)197
2034 y(because)h(only)g(GLB)g(can)h(gather)e(all)h fn(\031)929 2016 y fk(max)
928 2046 y(i)1020 2034 y fu(together)f(to)h(determine)f(the)h(value.)37 b(Sin\
ce)19 b(some)197 2112 y(other)c(PLs)h(\(e.g.,)i(the)d(local)h(list)f(for)g fp
(PDC-WK)p fu(\))h(may)g(also)f(be)h(mer)o(ged)f(into)g fn(V)d(L)1678 2119 y fk
(i)1692 2112 y fu(,)17 b fn(P)1752 2119 y fk(i)1782 2112 y fu(needs)f(to)197
2191 y(compare)11 b fn(\031)410 2173 y fk(max)493 2191 y fu(with)h(priorities)
e(in)i(those)g(PLs)g(each)g(time)f(when)h(scheduling)f(tasks)i(from)d(its)i
(VL.)197 2269 y(Therefore,)g(it)g(would)g(be)h(more)f(ef)n(\256cient)g(for)g
(each)h(processor)f(to)g(have)h(the)f(value)g fn(\031)1703 2251 y fk(max)1787
2269 y fu(locally)m(.)148 2399 y fo(\017)24 b fn(L)230 2376 y fi(>)257 2382 y
fb(0)230 2410 y fk(i)274 2399 y fu(:)j(The)18 b(load)f(of)g(those)g(tasks)h
(in)e fo(>)905 2406 y fm(0)941 2399 y fu(and)h(on)g fn(P)1128 2406 y fk(i)
1143 2399 y fu(.)32 b(The)18 b fp(load)e fu(of)h(a)g(given)g(set)h(of)e(tasks)
i fo(>)f fu(is)197 2444 y fa(P)241 2488 y fi(T)9 b(2>)330 2477 y fn(G)368 2484
y fi(T)399 2477 y fu(,)j(where)g fn(G)595 2484 y fi(T)638 2477 y fu(is)g(the)
g(grain)g(size)g(of)g fo(T)h fu(.)18 b(Basically)m(,)13 b(the)f(grain)f(size)
i(of)e(a)i(task)f(represents)197 2555 y(the)j(amount)g(of)g(computation)g(for)
f(the)h(task,)i(given)e(by)h(the)f(programmer)-5 b(.)28 b(The)16 b(grain)f
(size)g(will)197 2634 y(be)d(de\256ned)f(more)g(precisely)h(in)f(Section)g
(4.1.2.3.)20 b(The)12 b(GLB)g(can)g(balance)g(the)g(load)f(by)h(donating)197
2712 y(tasks)h(from)e fo(>)457 2719 y fm(0)488 2712 y fu(to)h(an)h(idle)f(pro\
cessor)m(.)988 2836 y(41)p eop
%%Page: 42 56
 bop 68 58 a fo(\017)24 b fn(L)150 35 y fi(>)177 41 y fb(1)150 69 y fk(i)195
58 y fu(:)c(The)14 b(load)g(of)f(those)h(tasks)h(in)e fo(>)799 65 y fm(1)831
58 y fu(and)h(on)g fn(P)1012 65 y fk(i)1026 58 y fu(,)h(where)e fo(>)1227 65 y
fm(1)1259 58 y fu(is)h(the)g(set)g(of)f(tasks)i(with)e(priority)117 136 y fn
(\031)147 118 y fk(max)226 136 y fo(\000)7 b fu(1.)17 b(The)12 b(GLB)f(can)g
(balance)f(the)h(load)f(by)h(donating)f(tasks)h(in)g fo(>)1380 143 y fm(1)
1409 136 y fu(while)f fo(>)1569 143 y fm(0)1598 136 y fu(is)h(empty)l(.)18 b
(The)117 214 y(purpose)10 b(of)g(having)g fo(>)522 221 y fm(1)551 214 y fu
(is)h(to)f(make)g(the)g(transition)g(of)f(load)i(balancing)f(from)f fo(>)1530
221 y fm(0)1559 214 y fu(to)h fo(>)1647 221 y fm(1)1675 214 y fu(smoother)m
(.)117 293 y(If)15 b(we)h(do)f(not)g(do)g(this,)i(the)e(GLB)h(cannot)f(respon\
d)g(to)g(the)h(idle)f(processor)g(while)g fo(>)1654 300 y fm(0)1688 293 y fu
(is)h(empty)l(,)117 371 y(and)d(therefore)e(the)h(idle)h(processor)f(will)g
(keep)g(idling.)69 570 y(Now)l(,)h(we)g(can)f(describe)h(a)f(simple)h(global)
f(protocol)f(as)i(follows.)56 770 y(1.)24 b(The)13 b(system)g(balances)g(the)
g(load)f(round-by-round,)e(where)i(a)h(\252round\272)f(is)h(de\256ned)f(as)h
(a)f(period)g(of)117 848 y(time)g(in)h(which)f fn(\031)433 830 y fk(max)518
848 y fu(remains)g(the)g(same.)56 968 y(2.)24 b(Each)13 b(processor)g fn(P)
464 975 y fk(i)491 968 y fu(reports)e fn(\031)671 950 y fk(max)669 981 y(i)
755 968 y fu(and)h(the)h(changes)g(of)e fn(L)1172 945 y fi(>)1199 951 y fb
(0)1172 980 y fk(i)1229 968 y fu(and)h fn(L)1346 946 y fi(>)1373 952 y fb(1)
1346 980 y fk(i)1403 968 y fu(to)g(the)h(GLB,)g(in)f(either)g(of)117 1047 y
(the)h(following)e(two)h(situations.)175 1167 y fo(\017)25 b fn(L)258 1144 y
fi(>)285 1150 y fb(0)258 1178 y fk(i)314 1167 y fu(or)12 b fn(L)401 1144 y fi
(>)428 1150 y fb(1)401 1178 y fk(i)458 1167 y fu(is)h(changed)f(\252signi\256\
cantly\272)g(\(e.g.,)i(by)e(a)g(factor)g(of)g(two\),)g(or)175 1266 y fo(\017)
25 b fn(\031)254 1248 y fk(max)339 1266 y fu(is)12 b(changed)h(\(i.e.,)g(a)g
(new)f(round)g(is)g(started\).)56 1386 y(3.)24 b(When)13 b fn(\031)279 1368 y
fk(max)364 1386 y fu(is)g(changed,)h(the)f(GLB)g(broadcasts)h(the)f(new)g(val\
ue)g(of)f fn(\031)1387 1368 y fk(max)1472 1386 y fu(to)g(each)i(processor)f
(to)117 1464 y(start)k(a)g(new)f(round.)31 b(Note)16 b(that)h fn(\031)752 1446
y fk(max)841 1464 y fu(decreases)g(only)f(when)h(no)g(more)f(tasks)h(have)g
(priorities)117 1543 y fn(\031)f fo(\025)d fn(\031)243 1525 y fk(max)315 1543
y fu(.)56 1663 y(4.)24 b(When)12 b(a)f(processor)h(requests)f(a)h(task,)g(the)
f(GLB)h(tries)g(to)f(balance)g(the)g(load)h(by)f(donating)g(a)g(task)h(in)117
1741 y fo(>)156 1748 y fm(0)187 1741 y fu(to)h(the)f(processor)m(.)18 b(If)12
b fo(>)615 1748 y fm(0)646 1741 y fu(is)h(empty)l(,)g(the)f(GLB)h(will)f(try)
g(to)g(donate)g(a)h(task)g(in)f fo(>)1595 1748 y fm(1)1613 1741 y fu(,)h(inst\
ead.)69 1941 y(An)h(important)e(feature)i(of)f(the)h(above)g(protocol)f(is)i
(that)e(an)h(idle)g(processor)g(can)g(request)g(a)g(task)h(via)-4 2019 y(as)g
(few)g(as)h(three)f(\252hops\272:)24 b(\(1\))15 b(the)g(idle)g(processor)g
(issues)i(a)e(task)h(request)f(to)g(the)h(GLB,)g(\(2\))f(the)g(GLB)-4 2097 y
(forwards)d(the)i(message)h(to)e(the)h(donor)f(\(selected)h(by)g(the)g(GLB\),)
g(and)g(\(3\))f(the)h(donor)f(donates)h(a)g(task)g(to)-4 2175 y(the)e(idle)g
(processor)m(.)69 2321 y(Although)d(the)h(GLB)h(is)f(conceptually)f(centraliz\
ed,)i(it)f(actually)f(uses)i(a)f(tree)g(structure,)g(which)g(can)g(be)-4 2399
y(distributed)g(over)h(processors)h(as)g(illustrated)f(in)g(Figure)g(4.4)g
(\(note)g(that)h(this)f(need)h(not)f(be)g(a)h(binary)f(tree\).)-4 2477 y(The)
j(main)f(purpose)h(is)g(to)f(prevent)h(a)g(single)g(GLB)g(process)g(from)f
(becoming)g(a)h(bottleneck,)g(especially)-4 2555 y(when)20 b(the)g(number)f
(of)h(processors)g(is)h(lar)n(ge)f(\(say)h(1000\).)41 b(For)19 b(example,)j
(in)e(the)g(global)g(protocol,)-4 2634 y(broadcasting)11 b(and)i(collecting)f
(information)e(would)i(make)g(a)h(single)f(GLB)h(become)f(a)h(bottleneck)f
(given)-4 2712 y(a)e(lar)n(ge)g(number)g(of)f(processors.)18 b(An)10 b(extra)
f(advantage)h(for)g(such)g(a)g(tree)g(structure)f(is)h(that)g(load)g(balancin\
g)908 2836 y(42)p eop
%%Page: 43 57
 bop 75 792 a @beginspecial @setspecial
%%BeginDocument: fig/glb-tree.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 4 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
1 12 /Times-Italic FMDEFINEFONT
2 10 /Times-Italic FMDEFINEFONT
3 14 /Times-Bold FMDEFINEFONT
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
323.15 95.4 233.45 124.2 2 L
1 H
2 Z
4 X
N
143.76 95.4 233.45 124.2 2 L
7 X
V
4 X
N
143.76 66.6 89.94 37.8 2 L
7 X
V
4 X
N
143.76 66.6 197.57 37.8 2 L
N
323.15 66.6 269.33 37.8 2 L
7 X
V
4 X
N
323.15 66.6 376.96 37.8 2 L
N
205.55 124.2 259.36 153 R
0.5 H
N
0 F
0 X
(\050on) 215.51 135.97 T
1 F
( P) 231.5 135.97 T
2 F
(1) 241.83 132.97 T
0 F
(\051) 246.82 135.97 T
115.85 66.6 169.67 95.4 R
4 X
N
0 X
(\050on) 125.82 78.37 T
1 F
( P) 141.8 78.37 T
2 F
(0) 152.13 75.37 T
0 F
(\051) 157.13 78.37 T
295.24 66.6 349.06 95.4 R
4 X
N
0 X
(\050on) 305.21 78.37 T
1 F
( P) 321.2 78.37 T
2 F
(2) 331.52 75.37 T
0 F
(\051) 336.52 78.37 T
72 9 125.82 37.8 R
N
1 F
(P) 93.96 20.77 T
2 F
(0) 101.29 17.77 T
161.7 9 215.51 37.8 R
N
1 F
(P) 183.65 20.77 T
2 F
(1) 190.98 17.77 T
251.39 9 305.21 37.8 R
N
1 F
(P) 273.35 20.77 T
2 F
(2) 280.68 17.77 T
341.09 9 394.91 37.8 R
N
1 F
(P) 363.05 20.77 T
2 F
(3) 370.37 17.77 T
88.91 54 376.91 171 R
2 H
N
3 F
(GLB) 115.91 144.82 T
FMENDPAGE
%%EndDocument
 @endspecial 540 868 a fu(Figure)12 b(4.4:)18 b(An)12 b(example)g(for)g(the)g
(GLB)h(hierarchy)l(.)75 1005 y(may)c(happen)g(in)g(parallel.)17 b(For)9 b(exa\
mple,)h(as)g(shown)f(in)g(Figure)f(4.4,)j(if)e(processors)g fn(P)1572 1012 y
fm(0)1601 1005 y fu(and)g fn(P)1713 1012 y fm(2)1741 1005 y fu(have)h(some)75
1083 y(tasks)j(in)f fo(>)277 1090 y fm(0)308 1083 y fu(and)g(processors)h fn
(P)646 1090 y fm(1)677 1083 y fu(and)f fn(P)792 1090 y fm(3)824 1083 y fu(sim\
ultaneously)g(request)g(tasks,)i fn(P)1450 1090 y fm(0)1481 1083 y fu(and)e fn
(P)1596 1090 y fm(2)1628 1083 y fu(can)g(respectively)75 1161 y(donate)h(task\
s)g(in)f fo(>)423 1168 y fm(0)455 1161 y fu(to)g fn(P)537 1168 y fm(1)569 1161
y fu(and)h fn(P)685 1168 y fm(3)716 1161 y fu(at)g(the)g(same)g(time.)19 b
(In)12 b(this)h(case,)h(each)f(task)g(request)f(requires)g(three)75 1239 y
(\252hops\272.)197 1568 y fr(De\256nition)f(4.1)24 b fp(In)c(a)g(pr)n(ocessor)
h(tr)n(ee)f(\(as)g(illustrated)g(in)f(Figur)o(e)h(4.4\),)i(a)e ft(COMBINING)
197 1647 y(OPERA)-5 b(TION)10 b fp(is)h(de\256ned)f(as)g(follows.)18 b(Starti\
ng)10 b(fr)n(om)g(the)g(leaf)g(pr)n(ocessor)i(nodes,)f(each)f(node)197 1725 y
(other)k(than)g(the)f(r)o(oot)g(sends)i(one)f(packet)g(upwar)n(ds)h(to)e(its)
h(par)o(ent.)22 b(If)14 b(the)g(pr)n(ocessor)h(node)197 1803 y(is)f(an)f(inte\
rnal)h(pr)n(ocessor)h(node)e(\(other)h(than)f(the)g(r)o(oot\),)g(it)h(must)f
(r)o(eceive)h(all)f(the)h(packets)197 1881 y(fr)n(om)f(its)f(childr)n(en)h
(befor)n(e)g(sending)f(its)h(packet)f(to)g(its)h(par)n(ent.)272 1960 y(A)8 b
ft(DISSEMINA)m(TING)h(OPERA)-5 b(TION)p fp(,)10 b(the)e(r)n(everse)i(of)e(the)
g(combining)g(operation,)i(is)e(de\256ned)197 2039 y(as)17 b(follows.)31 b
(Starting)16 b(fr)n(om)h(the)f(r)o(oot,)i(each)e(internal)h(pr)n(ocessor)h
(node)e(sends)i(a)e(packet)197 2117 y(downwar)o(ds)c(to)g(each)g(of)f(its)i
(childr)n(en.)18 b(The)12 b(pr)n(ocessor)h(node)f(\(other)g(than)g(the)g(r)n
(oot\))f(sends)197 2195 y(a)h(packet)h(downwar)n(ds)g(after)g(r)n(eceiving)g
(another)f(packet)h(fr)n(om)f(its)h(par)n(ent.)148 2399 y fu(De\256nition)d
(4.1)g(de\256nes)h(two)f(ef)o(\256cient)g(operations,)h fp(combining)f fu(and)
g fp(disseminating)p fu(,)h(in)g(a)f(processor)75 2477 y(tree.)28 b(The)17 b
(combining)e(and)h(disseminating)f(operations)h(are)g(ef)n(\256cient)g(becaus\
e)g(all)g(the)g(processors)g(at)75 2555 y(the)c(same)h(tree)e(level)h(can)h
(be)f(processed)g(in)g(parallel)g(and)g(therefore)f(the)h(latency)g(is)g(only)
g(the)g(time)g(spent)75 2634 y(in)h(processor)f(nodes)h(along)g(the)g(critica\
l)f(path)h(among)f(all)h(paths)g(from)e(leaves)j(to)e(the)h(root.)19 b(In)12 b
(addition,)75 2712 y(the)j(total)f(number)g(of)g(sends)i(\(or)e(receives\))g
(is)h(only)f(about)h(the)g(number)f(of)g(processors.)26 b(In)14 b(the)g(globa\
l)988 2836 y(43)p eop
%%Page: 44 58
 bop -4 53 a fu(protocol,)9 b(collecting)h(processor)g(status)g(can)g(be)g
(done)g(via)g(a)g(combining)f(operation,)h(while)g(broadcasting)-4 132 y(new)
i(values)h(of)f fn(\031)314 114 y fk(max)398 132 y fu(can)h(be)f(done)h(via)f
(a)h(disseminating)f(operation.)-4 349 y fr(4.1.2.2)50 b(Sparse)13 b(Priority)
f(Distribution)-4 527 y fu(In)17 b(our)h(model,)h(load)f(balancing)g(becomes)
h(most)f(complex)g(when)g(task)g(priorities)f(are)i fp(sparsely)g fu(dis-)-4
606 y(tributed,)10 b(i.e.,)j(when)e(the)g(total)f(load)h(of)g(tasks)g(with)g
(each)g(priority)f(is)h(small.)18 b(In)11 b(this)g(situation,)g(if)g(we)g(sti\
ll)-4 684 y(use)g(the)h(above)f(simple)g(global)g(protocol)g(to)g(balance)h
(the)f(load,)h(the)f(total)g(load)g(of)g(tasks)h(in)f fo(>)1652 691 y fm(0)
1682 684 y fu(\(or)g fo(>)1791 691 y fm(1)1809 684 y fu(\))g(is)-4 762 y(usua\
lly)i(small.)21 b(This)14 b(implies)f(that)g(the)g(GLB)h(will)f(soon)h(need)f
(to)g(update)g(the)h(value)f(of)g fn(\031)1615 744 y fk(max)1687 762 y fu(.)
21 b(That)14 b(is,)-4 840 y(the)d(GLB)i(needs)f(to)g(set)g(up)g(new)g(rounds)
g(\(including)f(broadcasting)g(new)h fn(\031)1336 822 y fk(max)1419 840 y fu
(and)g(collecting)g(the)g(load)-4 919 y(status\))g(very)g(often,)g(resulting)
g(in)g(excessive)i(communication.)69 1064 y(The)c(key)g(idea)h(for)e(solving)
h(this)g(problem)f(is)i(to)f(group)f(additional)h(highest-priority)e(tasks)j
(into)e fo(>)1800 1071 y fm(0)1829 1064 y fu(or)-4 1142 y fo(>)35 1149 y fm
(1)64 1142 y fu(at)i(the)g(beginning)g(of)f(each)i(round)e(so)i(that)f(the)g
(GLB)h(will)e(be)i(able)f(to)g(donate)g(more)f(tasks)i(from)e(these)-4 1220 y
(sets)k(and)f(will)g(not)g(have)g(to)g(rebroadcast)g(for)f(the)h(next)g(round)
g(so)h(quickly)l(.)21 b(Note)13 b(that)g(the)g(technique)g(of)-4 1299 y(group\
ing)e(tasks)i(will)f(result)g(in)g(schedules)h(which)f(do)g(not)g(strictly)g
(obey)g(the)g(order)g(of)g(priorities;)f(but)h(as)-4 1377 y(mentioned)f(in)h
(Chapter)h(2)f(the)g(program)g(correctness)g(should)g(never)g(rely)g(on)h(pri\
orities.)69 1522 y(There)19 b(is)g(an)g(important)e(issue)j(for)d(grouping)h
(tasks:)31 b(we)19 b(do)g(not)f(want)h(the)g(total)f(load)h(of)f(these)-4 1600
y(grouped)11 b(tasks)i(to)f(be)h(too)f(small)g(or)g(too)h(lar)n(ge.)68 1784 y
fo(\017)24 b fu(If)10 b(the)g(total)g(load)g(is)h(too)f(small,)h(the)g(system)
f(will)g(soon)h(need)f(to)g(set)h(up)f(a)h(new)f(round)g(again.)17 b(Thus,)
117 1862 y(the)c(ef)o(fect)f(of)g(grouping)f(extra)h(tasks)h(does)g(not)f(hel\
p)g(much)g(in)h(this)f(case.)68 1981 y fo(\017)24 b fu(If)15 b(the)f(total)h
(load)g(is)g(too)g(lar)n(ge,)h(the)f(system)g(may)g(schedule)g(many)g(tasks)h
(with)e(priorities)g(lower)117 2059 y(than)j fn(\031)250 2041 y fk(max)322
2059 y fu(;)i(this)e(fails)g(to)g(follow)f(priority)g(well.)32 b(For)17 b(exa\
mple,)h(for)f(BFS,)g(scheduling)g(many)117 2137 y(tasks)d(with)e(low)g(priori\
ty)f(could)h(end)g(up)g(wasting)h(a)f(signi\256cant)g(amount)g(of)g(computati\
on)g(time.)-4 2321 y(So,)22 b(the)e(compromise)g(is)h(that)f(for)f(each)i(rou\
nd)f(we)g(want)g(the)h(total)f(load)g(of)g(grouped)f(tasks)i(to)f(be)-4 2399 y
(comparable)e(to)i(a)g(load)f(threshold)g fn(L)691 2406 y fk(thr)767 2399 y fl
(=)24 b fn(cL)883 2406 y fk(ov)q(h)941 2399 y fu(,)d(where)f fn(c)f fu(is)h
(a)g(lar)n(ge)g(constant)g(and)f fn(L)1679 2406 y fk(ov)q(h)1757 2399 y fu
(is)h(the)-4 2477 y(aggregate)15 b(overhead)h(associated)h(with)f(setting)g
(up)g(a)g(new)g(round)g(among)g(all)g(processors.)30 b(W)n(ith)16 b(this)-4
2555 y(compromise,)k(we)g(make)f(the)h(overhead)f(\()p fn(L)813 2562 y fk(ov)
q(h)871 2555 y fu(\))g(less)h(signi\256cant)f(while)g(keeping)g(the)h(total)f
(load)g(of)-4 2634 y(extra)10 b(grouped)g(tasks)i(as)g(small)f(as)g(possible.)
18 b(Since)11 b(setting)g(up)g(a)g(new)g(round)f(requires)h(a)g(disseminating)
-4 2712 y(operation)c(to)g(broadcast)h(the)g(new)g(value)g(of)f fn(\031)792
2694 y fk(max)871 2712 y fu(and)h(a)g(combining)f(operation)g(to)h(collect)g
(all)g(processors')908 2836 y(44)p eop
%%Page: 45 59
 bop 75 53 a fu(load)13 b(status,)h(the)e(overhead)h fn(L)615 60 y fk(ov)q
(h)686 53 y fu(is)719 35 y fm(1)751 53 y fn(O)q fl(\()p fn(p)c fu(log)f fn
(p)p fl(\))13 b fu(sends/receives,)h(which)f(can)g(be)g(roughly)f(predicted)g
fp(a)75 132 y(priori)p fu(.)148 277 y(T)m(o)h(be)g(more)f(speci\256c)i(about)
e(the)h(compromise,)g(we)g(will,)g(during)f(each)i(round,)e(group)h(the)g(hig\
hest-)75 355 y(priority)8 b(tasks)i(whose)g(total)f(load)h(is)g fn(L)750 362 y
fk(g)q(r)q(p)818 355 y fl(=)k(\002\()p fn(L)960 362 y fk(thr)1012 355 y fl
(\))p fu(,)d(if)e(the)h(total)f(load)g(of)g(tasks)i(in)e(the)g(whole)h(system)
g(is)75 433 y fn(L)108 440 y fk(total)196 433 y fl(=)k(\012\()p fn(L)335 440 y
fk(thr)388 433 y fl(\))c fu(and)h(each)g(task')m(s)g(grain)f(size)h(is)g fn
(O)q fl(\()p fn(L)1061 440 y fk(thr)1113 433 y fl(\))p fu(.)18 b(If)10 b(the)
g(total)h(load)f(of)g(tasks)h(is)g fn(L)1712 440 y fk(total)1801 433 y fn(<)i
(L)1885 440 y fk(thr)1938 433 y fu(,)75 512 y(then)g fn(L)207 519 y fk(g)q
(r)q(p)278 512 y fl(=)i fn(L)364 519 y fk(total)452 512 y fu(because)g(we)e
(can)h(at)g(most)f(group)g(tasks)h(with)g(total)f(load)g fn(L)1518 519 y fk
(total)1593 512 y fu(.)22 b(If)12 b(the)i(maximum)75 590 y(task)f(grain)g(siz\
e)g fn(G)412 597 y fk(max)497 590 y fu(is)g(lar)o(ger)g(than)f fn(L)803 597 y
fk(thr)856 590 y fu(,)h(then)g fn(L)1013 597 y fk(g)q(r)q(p)1082 590 y fl(=)i
fn(O)q fl(\()p fn(G)1230 597 y fk(max)1303 590 y fl(\))e fu(because)g(we)g
(may)g(need)g(to)g(group)75 668 y(the)f(task)h(with)f fn(G)380 675 y fk(max)
465 668 y fu(\(e.g.,)h(when)g(the)f(task)h(with)f(the)g(grain)g(size)h fn(G)
1282 675 y fk(max)1367 668 y fu(has)f(the)h(highest)f(priority\).)148 813 y
(In)17 b(Section)f(5.2,)j(we)e(will)g(design)g(an)g(ef)o(\256cient)f(algorith\
m,)i(called)f(the)g fp(parallel)g(range)g(selection)75 892 y fu(\()p fp(PRS)p
fu(\))12 b(algorithm,)f(on)h(a)f(processor)h(tree)g(with)f(a)h(constant)g(deg\
ree)f(\()p fo(\025)j fu(2\);)d(this)h(algorithm)e(can)i(solve)g(the)75 970 y
(sparse)h(priority)e(distribution)g(problem)h(and)g(satisfy)g(the)h(following)
e(two)h(properties:)75 1139 y fr(O1)24 b fu(The)8 b(algorithm)f(only)g(requir\
es)h(one)g(combining)f(operation)g(and)g(then)h(one)g(disseminating)f(operati\
on.)75 1252 y fr(O2)24 b fu(Each)13 b(packet)g(size)f(is)h fn(O)r fl(\()p fu
(log)674 1231 y fm(2)701 1252 y fn(p)p fl(\))p fu(.)148 1421 y(In)18 b(the)h
(above)g(problem,)h(we)e(allow)h(the)f(total)h(load)f(of)h(grouped)f(tasks,)j
fn(L)1530 1428 y fk(g)q(r)q(p)1585 1421 y fu(,)g(to)d(be)h(in)f(a)h(range)75
1500 y fl(\002\()p fn(L)165 1507 y fk(thr)217 1500 y fl(\))p fu(,)13 b(not)f
(just)h(a)f(\256xed)g(value)h(\(say)f fn(L)817 1507 y fk(thr)869 1500 y fu
(\),)h(for)e(the)i(following)e(two)h(reasons.)148 1675 y fo(\017)24 b fu(It)
16 b(appears)h(to)f(be)h(hard)f(to)g(implement)g(an)g(ef)o(\256cient)g(algori\
thm)f(to)i(group)f(the)g(highest-priority)197 1753 y(tasks)c(with)e(a)h(\256x\
ed)g(total)f(load)h fn(L)780 1760 y fk(thr)832 1753 y fu(,)h(while)e(satisfyi\
ng)h(Properties)f(O1)h(and)g(O2)g(simultaneously)l(.)148 1867 y fo(\017)24 b
fu(It)15 b(is)h(not)g(critical)f(for)g fn(L)633 1874 y fk(g)q(r)q(p)704 1867 y
fu(to)g(be)h(exact)g(because)h(the)e(environment)g(is)h(changing.)28 b(During)
15 b(the)197 1945 y(period)f(when)g(we)h(group)e(tasks)j(for)d fo(>)890 1952 y
fm(0)923 1945 y fu(or)h fo(>)1018 1952 y fm(1)1037 1945 y fu(,)h(the)f(load)h
(status)g(on)f(each)h(processor)f(may)g(have,)197 2023 y(more)e(or)g(less,)h
(been)g(changed)f(due)h(to)f(new)g(task)h(scheduling)f(and)h(task)f(creation.)
75 2238 y fr(4.1.2.3)51 b(Advanced)11 b(Global)h(Pr)o(otocol)75 2417 y fu(In)
17 b(this)g(section,)i(we)e(will)g(modify)f(the)h(simple)h(global)e(protocol)
h(by)g(adding)g(the)g(PRS)g(algorithm)f(\(to)75 2495 y(be)f(described)g(in)g
(Section)f(5.2\))h(with)f(properties)g(O1)h(and)g(O2,)h(such)f(that)g(the)g
(protocol)f(can)h(also)g(cope)75 2534 y 750 2 v 133 2564 a fj(1)150 2580 y fs
(If)10 b fe(g)q fd(\()p fe(n)p fd(\))i(=)g fe(O)p fd(\()p fe(f)5 b fd(\()p fe
(n)p fd(\)\))p fs(,)11 b(there)g(exists)f(some)h(positive)e fe(c)h fs(for)g
(which)g fe(g)q fd(\()p fe(n)p fd(\))i fc(\024)f fe(cf)5 b fd(\()p fe(n)p fd
(\))11 b fs(for)e(all)h(suf)o(\256ciently)g(lar)o(ge)g fe(n)p fs(.)75 2644 y
(If)g fe(g)q fd(\()p fe(n)p fd(\))i(=)g(\012\()p fe(f)5 b fd(\()p fe(n)p fd
(\)\))p fs(,)11 b(there)f(exists)g(some)h(positive)e fe(c)h fs(for)g(which)g
fe(g)q fd(\()p fe(n)p fd(\))i fc(\025)g fe(cf)5 b fd(\()p fe(n)p fd(\))10 b fs
(for)g(all)g(suf)o(\256ciently)f(lar)o(ge)i fe(n)p fs(.)75 2709 y(If)f fe(g)q
fd(\()p fe(n)p fd(\))i(=)g(\002\()p fe(f)5 b fd(\()p fe(n)p fd(\)\))p fs(,)11
b(then)f fe(g)q fd(\()p fe(n)p fd(\))i(=)g fe(O)q fd(\()p fe(f)5 b fd(\()p fe
(n)p fd(\)\))10 b fs(and)h fe(g)q fd(\()p fe(n)p fd(\))h(=)g(\012\()p fe(f)t
fd(\()p fe(n)p fd(\)\))p fs(.)988 2836 y fu(45)p eop
%%Page: 46 60
 bop -4 53 a fu(with)16 b(the)g(problem)f(of)h(sparse)h(priority)e(distributi\
ons.)30 b(In)16 b(this)g(advanced)h(global)f(protocol,)h(the)f(PRS)-4 132 y
(algorithm)f(is)h(used)h(to)f(group)f(a)i(set)g(of)e(additional)h(highest-pri\
ority)e(tasks)j(at)g(the)f(beginning)f(of)h(each)-4 210 y(load)e(balancing)h
(round.)26 b(These)16 b(tasks)g(are)f(grouped)g(into)f fo(>)1095 217 y fm(1)
1129 210 y fu(\(i.e.,)j(grouped)d(into)h(the)g fo(>)1621 217 y fm(0)1655 210 y
fu(of)f(the)i fp(next)-4 288 y fu(load)g(balancing)g(round)g(in)g(advance\))g
(so)h(that)f(we)h(can)g(simultaneously)f(perform)f(the)h(PRS)g(operation)-4
366 y(and)c(balance)g(the)h(tasks)g(in)f(the)g(current)g fo(>)747 373 y fm
(0)765 366 y fu(.)69 512 y(For)7 b(the)h(new)g(design,)h(the)f(two)g(sets)h fo
(>)731 519 y fm(0)757 512 y fu(and)f fo(>)876 519 y fm(1)903 512 y fu(are)g
(changed)g(as)h(follows.)16 b(W)l(e)8 b(de\256ne)g fo(>)1616 519 y fm(0)1648
512 y fl(=)14 b fo(>)1739 494 y fi(0)1739 524 y fm(0)1759 512 y fl(+)q fo(>)
1837 494 y fi(00)1837 524 y fm(0)1858 512 y fu(,)-4 590 y(where)c fo(>)167 572
y fi(0)167 602 y fm(0)197 590 y fu(is)h(the)g(set)g(of)g(tasks)g(with)g(prior\
ity)e fn(\031)832 572 y fk(max)915 590 y fu(and)i fo(>)1037 572 y fi(00)1037
602 y fm(0)1068 590 y fu(is)h(the)f(set)g(of)f(tasks)i(determined)e(by)h(the)
g(PRS)-4 668 y(algorithm)i(in)h(the)h(previous)f(round.)24 b(Similarly)-5 b
(,)16 b(we)f(de\256ne)f fo(>)1130 675 y fm(1)1165 668 y fl(=)j fo(>)1259 650 y
fi(0)1259 680 y fm(1)1290 668 y fl(+)12 b fo(>)1379 650 y fi(00)1379 680 y fm
(1)1400 668 y fu(,)j(where)g fo(>)1603 650 y fi(0)1603 680 y fm(1)1636 668 y
fu(is)g(the)f(set)h(of)-4 746 y(tasks)c(with)g(priority)f fn(\031)396 728 y fk
(max)476 746 y fo(\000)e fu(1)j(\(excluding)f(those)i(tasks)g(in)f fo(>)1100
753 y fm(0)1118 746 y fu(\))g(and)g fo(>)1268 728 y fi(00)1268 759 y fm(1)
1300 746 y fu(is)g(the)g(set)h(of)f(tasks)g(determined)-4 825 y(by)f(the)h
(PRS)f(algorithm)g(in)g(the)h(current)f(round.)17 b(In)10 b(fact,)i fo(>)1041
807 y fi(0)1041 837 y fm(0)1070 825 y fu(and)e fo(>)1191 807 y fi(0)1191 837 y
fm(1)1221 825 y fu(are)g(just)h fo(>)1414 832 y fm(0)1443 825 y fu(and)g fo
(>)1565 832 y fm(1)1594 825 y fu(in)g(the)g(original)-4 903 y(global)g(protoc\
ol.)69 1048 y(The)h(new)h(protocol)e(is)h(the)g(same)h(as)g(the)f(original)f
(protocol)g(except)h(for)g(the)g(following.)17 b(At)12 b(the)g(very)-4 1126 y
(beginning)k(of)h(a)h(round,)h(each)e(processor)h(moves)g(tasks)g(from)e fo
(>)1194 1108 y fi(00)1194 1139 y fm(1)1233 1126 y fu(to)h fo(>)1328 1108 y fi
(00)1328 1139 y fm(0)1349 1126 y fu(,)i(reports)e(processor)h(status,)-4 1205
y(and)e(starts)g(doing)g(the)g(combining)f(operation)h(of)g(the)g(PRS)g(algor\
ithm.)28 b(Since)16 b(the)g(status)h(report)e(also)-4 1283 y(requires)i(a)i
(combining)e(operation,)j(we)f(can)f(combine)g(the)g(two)h(combining)e(operat\
ions)h(in)g(order)g(to)-4 1361 y(reduce)12 b(communication)g(overhead.)20 b
(When)13 b(the)g(root)g(of)f(GLB)i(receives)f(all)g(the)g(reports,)g(it)g(wil\
l)f(check)-4 1439 y(whether)j(the)h(total)g(load)g(of)f(tasks)i(in)f fo(>)723
1421 y fi(0)723 1452 y fm(1)758 1439 y fu(is)g(already)g(lar)n(ge)g(enough)g
(\(e.g.)30 b(greater)15 b(than)h fn(L)1654 1446 y fk(thr)1706 1439 y fu(\).)
29 b(If)16 b(so,)-4 1518 y(we)e(do)g(not)g(need)h(to)f(apply)g(the)g(PRS)g
(algorithm)g(to)g(group)f(tasks)i(for)f(the)g(next)g(round.)24 b(If)13 b(not,)
i(we)g(will)-4 1596 y(do)d(the)h(disseminating)g(operation)f(of)h(the)g(PRS)g
(algorithm)f(to)g(group)h(more)f(highest-priority)f(tasks)j(into)-4 1674 y fo
(>)35 1656 y fi(00)35 1686 y fm(1)55 1674 y fu(.)29 b(This)16 b(provides)f
(us)h(with)g(a)g(chance)g(to)f(omit)g(the)h(disseminating)f(operation)g(when)
h fo(>)1641 1656 y fi(0)1641 1686 y fm(1)1675 1674 y fu(is)g(already)-4 1752 y
(lar)n(ge)f(enough.)26 b(W)l(e)16 b(will)e(show)h(below)g(that)g(the)g fp(PDC\
-WK)h fu(scheduling)f(algorithm)f(can)h(usually)g(omit)-4 1831 y(the)d(dissem\
inating)g(operation.)69 1976 y(Before)18 b(examining)g(the)h(case)g(of)f(the)
h fp(PDC-WK)g fu(scheduling)g(algorithm,)g(we)g(need)g(to)f(carefully)-4 2054
y(de\256ne)d(the)g(task)h(grain)f(size.)28 b(W)l(e)16 b(de\256ne)f(the)h(grai\
n)f(size)h(of)f(a)h(task)g(to)f(be)g(the)h(average)f(time)h(between)-4 2132 y
(the)f(moment)g(the)h(task)g(begins)g(executing)f(and)h(the)g(moment)f(the)h
(corresponding)f(processor)g(requests)-4 2210 y(the)h(next)g(task)g(from)f
(another)h(processor)n(,)h(not)f(just)g(the)h(amount)e(of)h(computation)f(tak\
en)h(for)g(the)g(task.)-4 2289 y(For)d(example,)j(for)d(the)i fp(PDC-WK)g fu
(scheduling)g(algorithm)e(the)i(grain)f(size)h(of)f(each)h(task)g(is)g(quite)
f(lar)n(ge)-4 2367 y(because)i(we)f(usually)g(exhaust)h(all)f(the)g(local)g
(tasks)h(and)g(their)e(descendants)i(before)f(requesting)g(a)g(task)-4 2445 y
(from)f(other)i(processors.)29 b(For)15 b fp(PBFS-GPQ)p fu(,)i(the)f(grain)f
(size)i(of)e(a)h(task)h(is)f(about)f(the)h(amount)g(of)f(time)-4 2523 y(for)e
(computing)g(the)h(task)g(because)h(the)f(algorithm)f(is)h(very)g(likely)f
(to)h(schedule)h(the)f(next)g(task)g(with)g(the)-4 2602 y(highest)i(priority)
g(from)g(another)g(processor)m(.)32 b(Although)16 b(the)h(de\256nition)f(of)g
(task)i(grain)e(size)h(is)h(not)e(so)-4 2680 y(straightforward,)8 b(we)i(ar)o
(gue)f(that)h(the)f(scheduling)h(programmer)e(can)h(help)h(the)f(application)
g(programmer)908 2836 y(46)p eop
%%Page: 47 61
 bop 75 53 a fu(to)12 b(calculate)h(the)f(task)h(grain)f(size.)148 199 y(Now)
m(,)g(let)g(us)g(examine)g(the)g(case)h(of)e(the)h fp(PDC-WK)h fu(scheduling)
f(algorithm)f(according)g(to)h(the)g(above)75 277 y(de\256nition.)17 b(Since)
12 b(each)g(node')l(s)g(grain)f(size)i(is)f(very)f(lar)o(ge,)h(the)f(total)h
(load)f(in)h fo(>)1495 259 y fi(0)1495 289 y fm(1)1525 277 y fu(tends)g(to)f
(be)h(very)f(lar)o(ge)75 355 y(as)i(long)e(as)i fo(>)322 337 y fi(0)322 367 y
fm(1)352 355 y fu(has)g(one)f(node.)18 b(Consequently)m(,)13 b(the)f(dissemin\
ating)g(operation)f(is)h(usually)g(omitted,)g(and)75 433 y(the)i(protocol)f
(is)h(almost)f(the)h(same)g(as)h(the)e(original)g(one)h(in)g(this)f(case.)24 b
(Our)13 b(experiments)h(presented)f(in)75 512 y(Chapter)f(6)h(also)f(con\256r\
m)g(that)g(the)g(disseminating)g(operation)g(is)h(usually)f(omitted)g(for)f fp
(PDC-WK)p fu(.)75 785 y fv(4.2)71 b(Maintaining)18 b(Physical)h(Lists)75 983 y
fu(Since)d(PLs)g(are)g(similar)g(to)f(priority)g(queues,)j(PLs)e(can)g(be)g
(maintained)g(in)g(the)g(same)g(way)g(as)h(priority)75 1062 y(queues.)i(A)12 b
(priority)f(queue)h(data)h(structure)f(often)f(requires)h(the)h(following)e
(primitive)g(operations.)99 1271 y(I)p ft(NSER)m(T)p fu(\()p fo(T)i fu(,)p fn
(\031)r fu(\):)k(Inserts)c(a)f(task)h fo(T)25 b fu(with)12 b(priority)f fn
(\031)j fu(into)e(the)g(priority)f(queue.)99 1400 y(D)p ft(ELETE)p fu(\()p fo
(T)j fu(\):)22 b(Deletes)15 b(a)g(task)g fo(T)27 b fu(from)14 b(the)g(priorit\
y)g(queue.)25 b(Note)14 b(that)g(in)h(the)f(multilist)g(scheduling)197 1478 y
(model)e(if)h(one)f(task)i(is)f(scheduled)g(from)e(one)i(PL,)h(then)e(we)h
(need)g(to)g(delete)g(the)f(instances)i(of)e(that)197 1557 y(task)h(from)e
(other)h(PLs)h(on)f(the)g(same)h(processor)f(too.)99 1685 y(M)p ft(AXPRI)p fu
(\(\):)17 b(Returns)c(the)f(highest)g(priority)f(from)h(the)g(queue.)99 1814 y
(D)p ft(ELETEMAX)p fu(\(\):)19 b(Deletes)13 b(and)f(returns)g(the)g(task)h
(with)f(the)g(highest)h(priority)e(in)h(the)g(priority)f(queue.)75 2024 y(As)
19 b(described)f(in)g(Section)g(2.2,)j(since)d(there)g(may)h(be)f(some)h(deri\
ved)e(PL)i(based)g(on)f(this)g(PL)h(with)f(a)75 2102 y(monotonically)e fp(dec\
r)o(easing)h fu(priority)e(translation)h(function,)i(we)f(also)h(need)f(to)f
(provide)h(M)p ft(INPRI)g fu(and)75 2180 y(D)p ft(ELETEMIN)f fu(primitive)d
(operations.)22 b(This)14 b(is)g(because)h(the)e(highest)h(priority)e(in)i
(the)g(derived)f(PL)h(is)g(the)75 2258 y(lowest)f(priority)d(in)j(the)f(base)
h(PL.)148 2404 y(The)e(above)f(operations)f(are)h(called)g fp(DEQ)g fu(operat\
ions)1102 2385 y fm(2)1131 2404 y fu(when)g(they)f(access/insert/delete)i(a)f
(task)g(with)75 2482 y(the)h(highest)g(or)g(lowest)g(priority)l(.)18 b(\(The)
11 b(M)p ft(AXPRI)p fu(,)h(D)p ft(ELETEMAX)p fu(,)i(M)p ft(INPRI)p fu(,)e(and)
f(D)p ft(ELETEMIN)i fu(operations)75 2534 y 750 2 v 133 2564 a fj(2)150 2580 y
fs(A)c(\252DEQ)h(operation\272)f(is)g(our)g(preferred)g(name)h(for)f(what)g
(others)g(\(e.g.,)i([97)o(]\))e(have)h(called)f(a)h(\252deque)g(operation\272\
,)f(i.e.,)i(an)75 2644 y(operation)c(on)h(a)h(\252double)f(ended)h(queue\272,)
h(which)d(is)i(accessed)h(only)e(at)g(its)g(two)g(ends.)14 b(W)m(e)9 b(avoid)
f(the)g(term)h(\252deque)g(operation\272)75 2709 y(because)j(this)d(sounds)h
(like)f(removal)i(from)f(a)h(queue.)988 2836 y fu(47)p eop eos end TeXDict
begin bos 300 @start /fa df[<FFFFFFFFE0FFFFFFFFF07000001FF078000001F03C000000
781C000000180E0000000C0F000000040700000004038000000203C000000001E000000000E000
0000007000000000780000000038000000001C000000001E000000000F00000000070000000003
8000000003800000000300000000070000000006000000000C0000000018000000003800000000
30000000006000000000C000000001C00000000180000002030000000406000000040E0000000C
0C00000018180000007830000001F07000001FF07FFFFFFFF0FFFFFFFFE0>39 42 2 42 44]80
dc dfe /fb 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 8
10 12 12 21 19 8 8 8 12 14 6 8 6 7 12 12 12 12 12 12 12 12 12 12 7 7 14 14 14
11 23 18 17 17 18 15 14 18 18 8 10 18 15 22 18 18 14 18 17 14 15 18 18 24 18
18 15 8 7 8 12 12 8 11 12 11 12 11 8 12 12 7 7 12 7 19 12 12 12 12 8 10 7 12
12 18 12 12 11 12 5 12 13 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 8 12 12 4 12 12 12 12 4 11 12 8 8 14 14 0 12 12 12 6 0 11 9 8
11 11 12 25 25 0 11 0 8 8 8 8 8 8 8 8 0 8 8 0 8 8 8 25 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 22 0 7 0 0 0 0 15 18 22 8 0 0 0 0 0 17 0 0 0 7 0 0 7 12 18 12 0 0 0 0
/Times-Roman 1000 393216 rf /fc df[<0102040C1818303070606060E0E0E0E0E0E0E0E0E0
E060606070303018180C040201>8 34 3 9 14]40 dc[<8040203018180C0C0E06060607070707
0707070707070606060E0C0C181830204080>8 34 2 9 14]41 dc[<0030000030000030000030
00003000003000003000003000003000003000003000FFFFFCFFFFFC0030000030000030000030
00003000003000003000003000003000003000003000>22 24 2 4 27]43 dc dfe /fd 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 15 19 32 29 29 58 48
19 19 19 29 33 15 19 15 16 29 29 29 29 29 29 29 29 29 29 19 19 33 33 33 29 54
42 39 42 42 39 36 45 45 23 29 45 39 55 42 45 36 45 42 32 39 42 42 58 42 42 39
19 16 19 34 29 19 29 32 26 32 26 19 29 32 16 19 32 16 48 32 29 32 32 26 23 19
32 29 42 29 29 26 23 13 23 30 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 19 29 29 10 29 29 29 29 16 29 29 19 19 32 32 0 29 29 29 15
0 31 20 19 29 29 29 58 58 0 29 0 19 19 19 19 19 19 19 19 0 19 19 0 19 19 19 58
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 58 0 17 0 0 0 0 39 45 58 19 0 0 0 0 0 42 0 0 0
16 0 0 16 29 42 32 0 0 0 0 /Times-Bold 1000 917504 rf /fe df[<07C0180030006000
7F00C000C0004000600030801F00>10 11 2 0 13]15 dc[<00FC400302C00C01C01800803000
80600080600000C00000C00000C00000C00000C00200C002004004006008001830000FC000>18
17 3 0 22]67 dc[<0F80FE01C01001C010026020026020023020023020041840041840040C40
040C40080680080680080380080380180100FE0100>23 17 2 0 24]78 dc[<3FFFC03060C040
604040C04080C04080C04000C00001800001800001800001800003000003000003000003000006
00007FE000>18 17 2 0 18]84 dc[<007800180018003000300030073018E0306060606060C0
C0C0C0C0C841C862D03C70>13 17 2 0 16]100 dc[<3C000C000C001800180018001BE0343038
303030303060606060606460C4C0C8C070>14 17 2 0 18]104 dc dfe /ff df[<081C1C3838
383070706060C0C0>6 13 2 -1 9]48 dc dfe /fg df[<FFFFF0FFFFF0>20 2 3 -7 27]0 dc[
<020002000200C218F2783AE00F800F803AE0F278C218020002000200>13 14 2 -1 18]3 dc[<
060F0F0E1E1E1C3C383830707060E0C040>8 17 1 -1 10]48 dc[<0000180000003800000038
0000007800000078000000F8000000B8000001B80000013800000338000006380000063800000C
380000183C0000183C0000301C00006FFC00007FFC0000C01C0001801C0083801E00C7001E00FE
000F807C000F0038000000>25 25 1 1 28]65 dc[<0000004001FFFF8007FFFF000803000010
0700002006000060060000C00E0000800E0000000C0000000C0000001C0000001C000000180000
00180000003800000030000000300000006000000060000000C000000080000007FC00000FF800
00>26 24 1 0 19]84 dc[<7F80FF80C000C000C000C000C000C000C000C000C000C000C000C0
00C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000
4000>9 34 6 9 16]100 dc[<FF80FF8001800180018001800180018001800180018001800180
018001800180018001800180018001800180018001800180018001800180018001800180018001
800080>9 34 0 9 16]101 dc dfe /fh df[<07C01C00300060006000FF00C000C000C000C000
C000400030C01F00>10 14 2 0 14]15 dc[<780218061806180C300C301830183030606060C0
61806600DC00E000>15 14 2 0 17]23 dc[<001F8200E04403802C07001C0C001C1C00083800
08300008700008600000E00000E00000E00000C00000C00020C00020C00040E000406000806001
003002001C1C0007E000>23 23 2 0 25]67 dc[<07F007F800F000C000B8008000B80080009C
0080011C0100011E0100010E0100010E0100020702000207020002038200020382000401C40004
01C4000400E4000400E4000800780008007800080038000800380018001000FE001000>29 23 1
0 28]78 dc[<1FFFFE381C0E201C04601C04401C04403804803804003800003800007000007000
00700000700000E00000E00000E00000E00001C00001C00001C00001C00003C0007FFC00>23 23
1 0 21]84 dc[<071018F0307060706060C060C060C06080C080C480C4C1C446C83870>14 14 2
0 19]97 dc[<003E000C000C000C000C0018001800180018073018F0307060706060C060C060C0
6080C080C480C4C1C446C83870>15 23 2 0 18]100 dc[<1F0006000600060006000C000C000C
000C0018F01B181C08180838183018301830306030603160616062C022C03C>16 23 2 0 20]
104 dc[<0300038003000000000000000000000000001C002400460046008C000C001800180018
0031003100320032001C00>9 23 1 0 12]105 dc[<0018003800100000000000000000000000
0001C0022004300430086000600060006000C000C000C000C001800180018001806300E300C600
7800>13 29 0 6 14]106 dc[<3E0C0C0C0C181818183030303060606060C0C8C8C8D070>7 23
2 0 11]108 dc[<383C1E0044C6630047028100460301008E0703000C0603000C0603000C0606
00180C0600180C0620180C0C20180C0C403018044030180780>27 14 1 0 31]109 dc[<383C00
44C6004702004602008E06000C06000C06000C0C00180C00180C40181840181880300880300F00
>18 14 1 0 21]110 dc[<1C3C22462382230346030603060306030C060C060C0C0C081A3019E0
18001800300030003000FC00>16 20 0 6 18]112 dc[<38F04518463846308C000C000C000C00
180018001800180030003000>13 14 1 0 16]114 dc[<030003000600060006000600FFC00C00
0C000C001800180018001800300030803080310031001E00>10 20 1 0 13]116 dc[<1C020026
0600460600460600860C000C0C000C0C000C0C001818001818801818801838800C5900078E00>
17 14 1 0 20]117 dc[<0F1F0011A18020C38020C30041800001800001800001800003000003
0200C30200E70400C5080078F000>17 14 1 0 20]120 dc dfe /fi df[<000FE00000783C00
00E00E0003C00780078003C00F0001E00E0000E01E0000F03E0000F83C0000787C00007C7C0000
7C7800003C7800003CF840043EF840043EF87FFC3EF87FFC3EF87FFC3EF840043EF840043EF800
003EF800003E7800003C7C00007C7C00007C3C0000783C0000781E0000F00E0000E00F0001E007
8003C003C0078000E00E0000783C00000FE000>31 36 3 1 38]2 dc[<001FE00000F03C0001C0
0E00078007800F0003C01F0003E01E0001E03E0001F03C0000F07C0000F87C0000F87C0000F87C
0000F87C0000F87C0000F87C0000F83C0000F03E0001F03E0001F01E0001E01E0001E00E0001C0
0F0003C00700038003000300038007000180060081800604808004044080040840C00C08404008
087FC00FF83FC00FF03FC00FF0>30 35 2 0 35]10 dc[<00200040008001000300060004000C
000C00180018003000300030007000600060006000E000E000E000E000E000E000E000E000E000
E000E000E000E000E0006000600060007000300030003000180018000C000C0004000600030001
00008000400020>11 50 4 13 19]40 dc[<800040002000100018000C00040006000600030003
0001800180018001C000C000C000C000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000C000C000C001C0018001800180030003000600060004000C00180010002000400080
00>11 50 3 13 19]41 dc[<000180000001800000018000000180000001800000018000000180
00000180000001800000018000000180000001800000018000000180000001800000018000FFFF
FFFEFFFFFFFE000180000001800000018000000180000001800000018000000180000001800000
01800000018000000180000001800000018000000180000001800000018000>31 34 3 5 38]
43 dc[<FFFFFFFEFFFFFFFE000000000000000000000000000000000000000000000000000000
0000000000FFFFFFFEFFFFFFFE>31 12 3 -6 38]61 dc dfe /fj 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 11 14 17 17 28 26 11 11 11 17 19 8
11 8 9 17 17 17 17 17 17 17 17 17 17 9 9 19 19 19 15 31 24 22 22 24 20 18 24
24 11 13 24 20 30 24 24 18 24 22 18 20 24 24 31 24 24 20 11 9 11 16 17 11 15
17 15 17 15 11 17 17 9 9 17 9 26 17 17 17 17 11 13 9 17 17 24 17 17 15 16 7 16
18 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 17
17 6 17 17 17 17 6 15 17 11 11 18 18 0 17 17 17 8 0 15 12 11 15 15 17 33 33 0
15 0 11 11 11 11 11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 30 0 9 0 0 0 0 20 24 30 10 0 0 0 0 0 22 0 0 0 9 0 0 9 17 24 17 0 0 0 0
/Times-Roman 1000 524288 rf /fk df[<007E038007000E001C00380078007000FFF8F000F0
00E000E000E000E000E0007000700038061C1807E0>15 21 3 0 20]15 dc[<0300700701F807
02780E04700E08000E30000E40001C80001F00001FF0001C3C00380E00380E0038070038070470
0E08700E08700E08700610E003206001C0>22 21 3 0 28]20 dc[<0F00187F00380F00380E00
700E00700E00700E00E01C00E01C01C01C01801C0380380700380600380C003818007030007060
0070C000730000FC0000F00000>21 21 3 0 24]23 dc[<07FFFF1FFFFF3FFFFF304100404100
80410080C3000082000082000182000182000106000306000307000707000607000E07000E0700
1C03801C0380180300>24 21 2 0 28]25 dc[<70F8FCFC7404040404080810102040>6 15 4
10 14]59 dc[<0000001800000078000001E00000078000001E00000078000003E000000F8000
003C000000F0000003C000000F0000003C000000F0000000F00000003C0000000F00000003C000
0000F00000003C0000000F80000003E0000000780000001E0000000780000001E0000000780000
0018>29 28 4 2 38]60 dc[<0000800001800001800003000003000003000006000006000006
00000C00000C00000C0000180000180000180000300000300000300000600000600000600000C0
0000C00000C0000180000180000180000180000300000300000300000600000600000600000C00
000C00000C0000180000180000180000300000300000300000600000600000600000C00000C000
00C00000>17 49 3 12 24]61 dc[<C0000000F00000003C0000000F00000003C0000000F00000
003E0000000F80000001E0000000780000001E0000000780000001E00000007800000078000001
E00000078000001E00000078000001E000000F8000003E000000F0000003C000000F0000003C00
0000F0000000C0000000>29 28 4 2 38]62 dc[<00007F00800003808100000E006300003800
27000070001F0000E0000E0001C0000E000380000E000700000E000F000004000E000004001E00
0004003C000004003C00000800780000000078000000007800000000F000000000F000000000F0
00000000F000000000F000000000E000000000E000002000E000002000E000004000E000004000
F00000800070000080007000010000380002000018000400001C0008000006003000000381C000
0000FE000000>33 36 3 1 35]67 dc[<00007F00400003C0C080000E002180001C0013800070
000F8000E000070001C0000700038000070007000007000F000002000E000002001E000002003C
000002003C00000400780000000078000000007800000000F000000000F000000000F000000000
F000000000F0003FFF00E00000F000E00000F000E00000F000E00001E000F00001E000F00001E0
00700001E000700003C000380003C000180007C0000C0009C00006001180000380E08000007F00
0000>34 36 3 1 38]71 dc[<007FFC1FFF00078001E000078001E000078001E0000F0003C000
0F0003C0000F0003C0000F0003C0001E000780001E000780001E000780001E000780003C000F00
003C000F00003C000F00003C000F00007FFFFE000078001E000078001E000078001E0000F0003C
0000F0003C0000F0003C0000F0003C0001E000780001E000780001E000780001E000780003C000
F00003C000F00003C000F00003C000F00007C001F000FFFC3FFF00>40 34 2 0 40]72 dc[<00
7FFE000007C0000007800000078000000F0000000F0000000F0000000F0000001E0000001E0000
001E0000001E0000003C0000003C0000003C0000003C0000007800000078000000780000007800
0000F0000000F0000000F0001000F0001001E0002001E0002001E0004001E0004003C000C003C0
008003C0018003C0078007C01F00FFFFFF00>28 34 2 0 33]76 dc[<007FC003FF0007C00078
0007C000600005E000200009E000400009E000400008F000400008F000400010F8008000107800
80001078008000103C008000203C010000203E010000201E010000201E010000400F020000400F
020000400F020000400782000080078400008007C400008003C400008003C400010001E8000100
01E800010001F800010000F800020000F0000200007000020000700006000070000F00002000FF
E0002000>40 34 2 0 39]78 dc[<00007F00000381C0000E0060003800380070003800E0001C
01C0001E0380000E0700000E0F00000F0E00000F1C00000F3C00000F3C00000F7800000F780000
0F7800000FF000001EF000001EF000001EF000003CF000003CF000003CE0000078E0000078E000
00F0F00000E0F00001E0F00003C0700007807800070038000E001C0038000E0070000783C00000
FE0000>32 36 3 1 37]79 dc[<007FFFF0000007801C000007800F000007800700000F000380
000F000380000F000380000F000380001E000780001E000780001E000780001E000F00003C000F
00003C001E00003C003C00003C007000007801E000007FFF00000078000000007800000000F000
000000F000000000F000000000F000000001E000000001E000000001E000000001E000000003C0
00000003C000000003C000000003C000000007C0000000FFFC000000>33 34 2 0 31]80 dc[<
1FFFFFFE1E01E00E1801E0063001E0062003C0062003C0064003C0044003C00440078004800780
048007800400078000000F0000000F0000000F0000000F0000001E0000001E0000001E0000001E
0000003C0000003C0000003C0000003C00000078000000780000007800000078000000F0000000
F0000000F0000000F0000001F00000FFFFC000>31 34 2 0 29]84 dc[<3FFE01FF8003C0003C
0003C000300003C000100007800020000780002000078000200007800020000F000040000F0000
40000F000040000F000040001E000080001E000080001E000080001E000080003C000100003C00
0100003C000100003C0001000078000200007800020000780002000078000200007000040000F0
00040000F000080000700008000070001000007000200000380040000038008000001C01000000
060600000001F8000000>33 35 3 1 33]85 dc[<00786001C4E00302E00601C00E01C01C01C0
3C01C0380380780380780380780380F00700F00700F00700F00708F00E10700E10701E10302620
18C6200F01C0>21 21 2 0 26]97 dc[<03C0003F800003800003800003800007000007000007
00000700000E00000E00000E00000E00001C00001C78001D8E001E07003C070038038038038038
0780700780700780700780700780E00F00E00F00E00F00E01E00E01C00601C0060380030700030
C0000F0000>17 35 3 0 21]98 dc[<00001E0001FC00001C00001C00001C0000380000380000
380000380000700000700000700000700000E00078E001C4E00302E00601C00E01C01C01C03C01
C0380380780380780380780380F00700F00700F00700F00708F00E10700E10701E1030262018C6
200F01C0>23 35 2 0 25]100 dc[<00001E00000063800000C7800001C7800001C30000018000
000380000003800000038000000380000007000000070000000700000007000000FFF800000E00
00000E0000000E0000000E0000000E0000000E0000001C0000001C0000001C0000001C0000001C
000000380000003800000038000000380000003800000070000000700000007000000070000000
60000000E0000000E0000000E0000000C0000070C00000F1800000F1000000620000003C000000
>25 45 2 10 24]102 dc[<000F0C00389C00605C00C03801C0380380380780380700700F0070
0F00700F00701E00E01E00E01E00E01E00E01E01C00E01C00E03C00605C0031B8001E380000380
000380000700000700000700700E00F00C00F018006070003FC000>22 31 0 10 23]103 dc[<
00F0000FE00000E00000E00000E00001C00001C00001C00001C000038000038000038000038000
070000071F0007218007C0C00F00E00F00E00E00E00E00E01C01C01C01C01C01C01C01C0380380
380380380700380704700708700E08700E08700610E006206003C0>22 35 3 0 28]104 dc[<00
E000E001E000C00000000000000000000000000000000000001E00230043804380838083808700
07000E000E000E001C001C0038003820384070407040308031001E00>11 34 2 0 17]105 dc[<
0000E00001E00001E00000C0000000000000000000000000000000000000000000000000000000
001E00002300004380008380010380010380010380000700000700000700000700000E00000E00
000E00000E00001C00001C00001C00001C00003800003800003800003800007000007000007000
70E000F0C000F180006300003E0000>19 44 -1 10 20]106 dc[<00F0000FE00000E00000E000
00E00001C00001C00001C00001C0000380000380000380000380000700000700F0070308070438
0E08780E10780E20300E40001C80001F00001FC0001C7000383800383800381C00381C10703820
703820703820701840E00C80600700>21 35 3 0 25]107 dc[<01E01FC001C001C001C0038003
800380038007000700070007000E000E000E000E001C001C001C001C0038003800380038007000
700070007100E200E200E200620064001C00>11 35 3 0 15]108 dc[<3C07C046186047203087
40388780388700388700380E00700E00700E00700E00701C00E01C00E01C01C01C01C13801C238
03823803823801847001883000F0>24 21 2 0 29]110 dc[<03C0F004631C04740E08780E0870
0708700708700F00E00F00E00F00E00F00E00F01C01E01C01E01C01E01C03C03803803803803C0
7003C0E0072180071E000700000700000E00000E00000E00000E00001C00001C00001C0000FFC0
00>24 31 -1 10 24]112 dc[<3C0F004630C04741C08783C08783C08701808700000E00000E00
000E00000E00001C00001C00001C00001C0000380000380000380000380000700000300000>18
21 2 0 22]114 dc[<1E00C02301E04381F04380F08380708380308700300700200E00200E0020
0E00201C00401C00401C00801C00801C01001C01001C02000C040006080003F000>20 21 2 0
24]118 dc dfe /fl df[<FFFFFFFCFFFFFFFC>30 2 4 -11 39]0 dc[<70F8F8F870>5 5 4
-10 14]1 dc[<03F0000FFC001FFE003FFF007FFF807FFF80FFFFC0FFFFC0FFFFC0FFFFC0FFFF
C0FFFFC0FFFFC0FFFFC07FFF807FFF803FFF001FFE000FFC0003F000>18 20 3 -2 25]15 dc[<
0000000C0000003C000000F0000003C000000F0000003C000000F0000007C000001F0000007800
0001E00000078000001E00000078000000E0000000780000001E0000000780000001E000000078
0000001F00000007C0000000F00000003C0000000F00000003C0000000F00000003C0000000C00
000000000000000000000000000000000000000000000000000000000000007FFFFFF8FFFFFFFC
>30 39 4 7 39]20 dc[<C0000000F00000003C0000000F00000003C0000000F00000003C0000
000F80000003E0000000780000001E0000000780000001E0000000780000001C00000078000001
E00000078000001E00000078000003E000000F8000003C000000F0000003C000000F0000003C00
000070000000C00000000000000000000000000000000000000000000000000000000000000000
0000007FFFFFF8FFFFFFFC>30 39 4 7 39]21 dc[<0000001800600000007801E0000000E003
80000003800E0000000E00380000003C00F0000000F003C0000003C00F00000007001C0000001C
00700000007801E0000001E00780000007801E0000000E00380000003800E0000000F003C00000
00F003C00000003800E00000000E003800000007801E00000001E007800000007801E00000001C
007000000007001C00000003C00F00000000F003C00000003C00F00000000F003C00000003800E
00000001E007800000007801E0000000180060>43 32 3 4 50]28 dc[<03F80001F80007FE00
0FFE001E3F801C0300380FC03001802003E06000804001F0C000404000F9800040C0007F000020
80003F00002080003E00002080001F00002080000F80002080001F80002080001FC00060400033
E00040400061F000402000C0F800803001807E03801807003F8F000FFE000FFC0003F00003F800
>43 21 3 0 50]49 dc[<FFFFFFFEFFFFFFFE0003000000030000000300000003000000030000
000300000003000000030000000300000003000000030000000300000003000000030000000300
000003000000030000000300000003000000030000000300000003000000030000000300000003
00000003000000030000000300000003000000010000>31 32 4 0 39]62 dc[<000000060000
00000E000000001E000000003E000000003E000000007E000000005E00000000DE000000009E00
0000019E000000011E000000031E000000021E000000061E0000000C1E0000000C1E000000181E
000000181E000000301E000000601E000000601E000000C01E000001C01E000001801E00000300
1E0000077FFF000007FFFF00000FFFFF00001C000F000038000F004070000F0040F0000F80E1E0
000F80FFC0000780FF800007F8FF000007F07E000003C03C00000000>37 38 2 2 40]65 dc[<
0000000018001FFFFFE000FFFFFFC001FFFFFF0006001E00000E001E00001C003C00003C003C00
0038003C000078007800007000780000C0007800000000F800000000F000000000F000000000F0
00000001F000000001E000000001E000000001E000000003E000000003C000000003C000000003
C00000000780000000078000000007000000000F000000000E000000001C000000001800000000
3000000001FFE0000003FFC000000FFF000000>37 35 1 0 27]84 dc[<7FF0FFF0C000C000C0
00C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000
C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C0
00C000C000C000C000C0004000>12 50 9 13 22]100 dc[<FFF0FFF000300030003000300030
003000300030003000300030003000300030003000300030003000300030003000300030003000
300030003000300030003000300030003000300030003000300030003000300030003000300030
0030003000300010>12 50 0 13 22]101 dc dfe /fm 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 17 21 25 25 41 39 17 17 17 25 34 12 17 12
14 25 25 25 25 25 25 25 25 25 25 17 17 34 34 34 25 46 30 30 33 36 30 30 36 36
17 22 33 28 41 33 36 30 36 30 25 28 36 30 41 30 28 28 19 14 19 21 25 17 25 25
22 25 22 14 25 25 14 14 22 14 36 25 25 25 25 19 19 14 25 22 33 22 22 19 20 14
20 27 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 19
25 25 8 25 25 25 25 11 28 25 17 17 25 25 0 25 25 25 12 0 26 17 17 28 28 25 44
50 0 25 0 17 17 17 17 17 17 17 17 0 17 17 0 17 17 17 44 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 44 0 14 0 0 0 0 28 36 47 15 0 0 0 0 0 33 0 0 0 14 0 0 14 25 33 25 0
0 0 0 /Times-Italic 1000 786432 rf /fn 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 26 35 58 52 52 104 86 35 35 35 52 59 26 35 26 29 52 52
52 52 52 52 52 52 52 52 35 35 59 59 59 52 97 75 69 75 75 69 63 81 81 40 52 81
69 98 75 81 63 81 75 58 69 75 75 104 75 75 69 35 29 35 60 52 35 52 58 46 58 46
35 52 58 29 35 58 29 86 58 52 58 58 46 40 35 58 52 75 52 52 46 41 23 41 54 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 35 52 52 17 52
52 52 52 29 52 52 35 35 58 58 0 52 52 52 26 0 56 36 35 52 52 52 104 104 0 52 0
35 35 35 35 35 35 35 35 0 35 35 0 35 35 35 104 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
104 0 31 0 0 0 0 69 81 104 34 0 0 0 0 0 75 0 0 0 29 0 0 29 52 75 58 0 0 0 0
/Times-Bold 1000 1638400 rf /fo 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 12 17 28 25 25 50 41 17 17 17 25 28 12 17 12 14 25 25 25 25
25 25 25 25 25 25 17 17 28 28 28 25 46 36 33 36 36 33 30 39 39 19 25 39 33 47
36 39 30 39 36 28 33 36 36 50 36 36 33 17 14 17 29 25 17 25 28 22 28 22 17 25
28 14 17 28 14 41 28 25 28 28 22 19 17 28 25 36 25 25 22 20 11 20 26 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 25 25 8 25 25 25
25 14 25 25 17 17 28 28 0 25 25 25 12 0 27 17 17 25 25 25 50 50 0 25 0 17 17
17 17 17 17 17 17 0 17 17 0 17 17 17 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 50 0
15 0 0 0 0 33 39 50 16 0 0 0 0 0 36 0 0 0 14 0 0 14 25 36 28 0 0 0 0
/Times-Bold 1000 786432 rf /fp 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 10 13 16 20 20 33 31 13 13 13 20 22 10 13 10 11 20 20 20 20 20
20 20 20 20 20 11 11 22 22 22 18 37 29 27 27 29 24 22 29 29 13 16 29 24 35 29
29 22 29 27 22 24 29 29 38 29 29 24 13 11 13 19 20 13 18 20 18 20 18 13 20 20
11 11 20 11 31 20 20 20 20 13 16 11 20 20 29 20 20 18 19 8 19 22 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 13 20 20 7 20 20 20 20 7
18 20 13 13 22 22 0 20 20 20 10 0 18 14 13 18 18 20 40 40 0 18 0 13 13 13 13
13 13 13 13 0 13 13 0 13 13 13 40 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 35 0 11 0 0
0 0 24 29 35 12 0 0 0 0 0 27 0 0 0 11 0 0 11 20 29 20 0 0 0 0 /Times-Roman
1000 629145 rf /fq 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 12 17 20 25 25 41 39 17 17 17 25 28 12 17 12 14 25 25 25 25 25 25 25 25 25
25 14 14 28 28 28 22 46 36 33 33 36 30 28 36 36 17 19 36 30 44 36 36 28 36 33
28 30 36 36 47 36 36 30 17 14 17 23 25 17 22 25 22 25 22 17 25 25 14 14 25 14
39 25 25 25 25 17 19 14 25 25 36 25 25 22 24 10 24 27 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 25 25 8 25 25 25 25 9 22 25 17
17 28 28 0 25 25 25 12 0 23 17 17 22 22 25 50 50 0 22 0 17 17 17 17 17 17 17
17 0 17 17 0 17 17 17 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 44 0 14 0 0 0 0 30 36
44 15 0 0 0 0 0 33 0 0 0 14 0 0 14 25 36 25 0 0 0 0 /Times-Roman 1000 786432
rf /fr 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 18 23
39 35 35 71 59 23 23 23 35 40 18 23 18 20 35 35 35 35 35 35 35 35 35 35 23 23
40 40 40 35 66 51 47 51 51 47 43 55 55 27 35 55 47 67 51 55 43 55 51 39 47 51
51 71 51 51 47 23 20 23 41 35 23 35 39 31 39 31 23 35 39 20 23 39 20 59 39 35
39 39 31 27 23 39 35 51 35 35 31 28 16 28 37 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 23 35 35 12 35 35 35 35 20 35 35 23 23 39 39
0 35 35 35 18 0 38 25 23 35 35 35 71 71 0 35 0 23 23 23 23 23 23 23 23 0 23 23
0 23 23 23 71 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 71 0 21 0 0 0 0 47 55 71 23 0 0
0 0 0 51 0 0 0 20 0 0 20 35 51 39 0 0 0 0 /Times-Bold 1000 1114112 rf end
 TeXDict begin @letter
%%Page: 48 62
 bop -4 53 a fq(are)19 b(always)i(DEQ)f(operations)g(while)f(the)h(I)p fp(NSE\
R)m(T)h fq(and)f(D)p fp(ELETE)i fq(operations)d(are)h(sometimes)g(DEQ)-4 132 y
(operations.\))69 277 y(For)11 b(the)i(PLs)g(involved)f(in)g(a)g(global)g(sch\
eduling)h(subpattern,)f(we)h(may)f(also)h(need)f(to)g(provide)g(other)-4 355 y
(operations)f(required)h(by)g(the)g(PRS)h(algorithm)e(\(described)h(in)g(Sect\
ion)g(5.2\).)18 b(They)13 b(include:)20 533 y(T)p fp(HRESHPRI)p fq(\()p fk
(L)293 540 y fh(thr)345 533 y fq(\),)g(where)h fk(L)556 540 y fh(thr)623 533 y
fl(\025)h fq(0:)20 b(If)12 b fk(L)p fi(\()p fl(\0001)p fi(\))j fk(<)g(L)1043
540 y fh(thr)1095 533 y fq(,)f(T)p fp(HRESHPRI)g fq(returns)f fl(\0001)g fq
(and)g fk(L)p fi(\()p fl(\0001)p fi(\))p fq(;)117 611 y(otherwise,)e(there)e
(is)h(a)g(priority)f fk(\031)i fq(such)f(that)g fk(L)p fi(\()p fk(\031)d fi
(+)e fq(1)p fi(\))14 b fk(<)f(L)1175 618 y fh(thr)1241 611 y fl(\024)h fk(L)p
fi(\()p fk(\031)r fi(\))p fq(,)c(and)g(T)p fp(HRESHPRI)g fq(returns)117 689 y
fk(\031)k fq(and)e fk(L)p fi(\()p fk(\031)r fi(\))p fq(,)g(where)g fk(L)p fi
(\()p fk(\031)r fi(\))h(=)668 656 y fa(P)712 699 y fg(T)742 689 y fi(\()p fk
(G)799 696 y fg(T)830 689 y fi(\))f fq(for)f(all)h(tasks)h fl(T)25 b fq(with)
11 b(priorities)g fk(\031)1479 671 y fg(0)1504 689 y fl(\025)j fk(\031)q fq
(.)19 b(Note)12 b(that)f(we)117 767 y(can)j(substitute)f fk(\031)432 774 y fh
(min)510 767 y fl(\000)f fq(1)h(for)f fl(\0001)p fq(,)i(and)f fk(\031)898 774
y fh(max)982 767 y fi(+)e fq(1)i(for)g fl(1)p fq(,)h(where)f fk(\031)1380 774
y fh(min)1460 767 y fq(\()p fk(\031)1505 774 y fh(max)1576 767 y fq(\))g(is)g
(the)h(highest)117 846 y(\(lowest\))h(priority)e(which)i(can)g(be)g(used.)27 b
(The)15 b(PRS)g(algorithm)f(needs)h(to)g(use)h(this)f(operation)f(to)117 924 y
(obtain)e(the)h(priority)e(distribution.)20 1038 y(S)p fp(PLIT)p fq(\()p fk
(\031)r fq(\):)26 b(Splits)16 b(the)h(priority)e(queue)i(into)f(two,)j(one)d
(part)h(containing)f(all)g(the)h(tasks)h(with)e(priority)117 1116 y fk(\031)
147 1098 y fg(0)177 1116 y fl(\025)h fk(\031)g fq(and)f(the)f(other)g(part)g
(containing)g(all)g(the)g(other)g(tasks.)28 b(The)16 b(PRS)f(algorithm)f(will)
h(need)117 1195 y(this)i(operation)e(to)h(select)g(all)g(the)g(tasks)h(with)f
(priorities)f(greater)g(than)h(or)g(equal)g(to)g(a)g(threshold)117 1273 y(pri\
ority)l(.)69 1450 y(Here,)j(we)e(should)g(note)g(that)h(if)e(a)i(global)f(sch\
eduling)g(subpattern)g(uses)h(a)g(derived)e(PL)i(based)g(on)-4 1529 y(another)
c(PL)g(and)h(a)g(priority)e(translation)h(function)f fk(f)6 b fq(,)15 b(the)g
(derived)f(PL)h(needs)g(to)f(translate)g(its)h(priority)-4 1607 y(threshold)f
fk(\031)k fq(to)d(the)g(priority)f(in)i(the)f(base)h(PL)g(in)f(order)g(to)g
(perform)f(the)i(S)p fp(PLIT)g fq(operation.)27 b(Since)16 b(the)-4 1685 y
(function)7 b fk(f)14 b fq(only)8 b(translates)h(the)f(priorities)g(in)g(the)
g(base)h(PL)g(to)f(those)h(in)f(the)h(derived)f(PL,)h(the)f(programmer)-4 1763
y(needs)14 b(to)h(provide)e(the)i(inverse)f(of)g(function)g fk(f)20 b fq(to)
14 b(translate)g(priorities)g(from)f(the)h(derived)g(PL)h(to)f(those)-4 1842 y
(in)g(the)g(base)h(PL.)g(If)f(function)f fk(f)20 b fq(is)15 b(linear)e(\(as)i
(in)f(the)g fm(PDC-WK)i fq(scheduling)e(algorithm)f(and)i(factoring)-4 1920 y
(scheduling)10 b(algorithm\),)g(i.e.,)j fk(f)5 b fi(\()p fk(\031)r fi(\))13 b
(=)h fk(a\031)9 b fi(+)f fk(b)p fq(,)j(the)g(programmer)e(only)h(needs)i(to)e
(specify)h(the)g(constants)-4 1998 y fk(a)h fq(and)g fk(b)p fq(;)g(the)g(syst\
em,)i(knowing)d(that)i fk(f)k fq(is)c(linear)m(,)g(can)g(automatically)f(\256\
nd)g(the)g(inverse)g(of)g(function)g fk(f)5 b fq(.)69 2143 y(Now)l(,)16 b(we)
g(want)f(to)f(see)i(how)f(to)g(support)f(the)h(above)g(operations)g(for)f(der\
ived)g(PLs)i(and)f(base)h(PLs.)-4 2221 y(For)c(a)i(derived)f(PL,)i(we)e(can)h
(perform)e(all)i(the)f(PL)h(operations)g(based)g(on)f(the)h(base)g(PL)g(and)f
(the)h(priority)-4 2300 y(translation)i(function)h(\(maybe)g(including)f(the)
i(inverse)f(of)g(the)g(function\).)33 b(For)16 b(a)i(base)g(PL,)g(we)g(will,)
-4 2378 y(in)g(Section)f(4.2.1,)k(propose)d(an)g(ef)o(\256cient)g(priority)f
(queue)h(supporting)f(the)h(above)h(operations.)35 b(This)-4 2456 y(proposed)
12 b(priority)e(queue)j(will)f(satisfy)g(the)h(following)e(two)h(properties.)
-4 2634 y fo(P1)24 b fq(The)12 b(worst-case)f(times)g(of)g(all)g(the)g(operat\
ions)g(are)g fk(O)q fi(\()p fq(log)d fk(n)p fi(\))p fq(,)k(where)f fk(n)g fq
(is)h(the)f(number)f(of)h(priorities)117 2712 y(in)h(the)h(priority)d(queue.)
19 b(\(Note)11 b(that)h(the)h(worst-case)f(time)g(of)g(the)g(operation)f(M)p
fp(AXPRI)h fq(or)g(M)p fp(INPRI)908 2836 y fq(48)p eop
%%Page: 49 63
 bop 197 53 a fq(is)13 b(only)f fk(O)q fi(\()p fq(1)p fi(\))p fq(.\))75 179 y
fo(P2)25 b fq(The)11 b(amortized)g(times)g(of)f(all)h(the)g(DEQ)h(operations)
e(is)i fk(O)q fi(\()p fq(1)p fi(\))p fq(.)18 b(The)12 b(amortized)e(time)h
([92)o(])g(is)g(de\256ned)197 257 y(as)i(the)f(average)h(time)f(of)g(an)g(ope\
ration)g(in)g(a)g(worst-case)h(sequence)g(of)f(operations.)148 463 y(The)18 b
(\256rst)g(property)e(P1)i(implies)f(that)h(these)g(operations)f(are)h(ef)o
(\256cient)f(for)g(the)h(worst)f(case.)36 b(The)75 541 y(worst-case)22 b(time)
g(is)g(important)f(because)h(it)g(may)g(shorten)g(the)g(response)g(time)g(for)
f(interprocessor)75 619 y(communication)11 b(operations.)18 b(For)11 b(exampl\
e,)h(assume)g(that)g(the)f(worst-case)h(time)g(is)g fk(O)q fi(\()p fk(n)p fi
(\))p fq(.)19 b(Even)12 b(if)f(the)75 698 y(amortized)j(time)f(is)i(much)f
(less)h(than)f fk(O)r fi(\()p fk(n)p fi(\))p fq(,)h(the)f(donation)g(of)g(a)g
(particular)g(task)g(may)g(be)h(signi\256cantly)75 776 y(delayed)e(due)h(to)f
(some)h(operation)e(requiring)g fk(O)r fi(\()p fk(n)p fi(\))i fq(computation)
e(time.)21 b(Therefore,)14 b(the)f(performance)75 854 y(may)f(become)h(bad)f
(and)g(unpredictable.)148 999 y(The)19 b(second)g(property)e(P2)h(implies)g
(that)g(the)g(DEQ)h(operations)f(are)g(optimal.)36 b(This)19 b(property)e(is)
75 1078 y(also)e(important)f(because)h(the)g(DEQ)g(operations)f(happen)h(in)g
(many)f(cases.)27 b(As)15 b(mentioned)f(above,)i(the)75 1156 y(operations,)i
(D)p fp(ELETEMAX)p fq(,)i(M)p fp(AXPRI)p fq(,)e(D)p fp(ELETEMIN)g fq(and)f
(M)p fp(INPRI)p fq(,)h(are)f(always)g(DEQ)g(operations.)31 b(In)75 1234 y(add\
ition,)15 b(some)g(applications)f(tend)g(to)h(insert/delete)f(a)h(task)f(only)
h(at)f(the)h(two)f(ends.)25 b(For)14 b(example,)h(in)75 1312 y fm(PDC-WK)p fq
(,)g(when)f(we)g(schedule)g(the)g(deepest)g(node)g(locally)l(,)h(the)f(node)g
(has)g(the)g(highest)g(local)f(priority)l(,)75 1391 y(but)h(has)h(the)f(lowes\
t)g(global)g(priority;)g(when)g(we)h(schedule)f(the)h(node)f(closest)h(to)f
(the)g(root)g(from)f(all)h(the)75 1469 y(\(other\))d(processors,)i(the)f(node)
h(has)g(the)f(highest)g(global)g(priority)l(,)g(but)h(has)f(the)h(lowest)f
(local)h(priority)-5 b(.)75 1711 y fd(4.2.1)57 b(Data)15 b(Structur)o(e)h(of)
f(Priority)f(Queue)75 1891 y fq(Our)e(priority)f(queues)i(are)g(based)g(on)f
(2-3)g(trees)h([3)o(],)g(a)g(kind)f(of)g(balanced)h(search)g(trees,)g(which)f
(have)h(the)75 1969 y(following)e(two)h(basic)h(properties.)148 2161 y fl(\
\017)24 b fq(Each)10 b(internal)e(node)i(has)f(2)h(or)f(3)g(children)f(except)
i(that)f(the)g(root)g(may)g(have)g(less)i(than)e(two)g(children)197 2239 y
(in)j(the)g(case)i(that)e(there)g(are)g(less)h(than)g(two)f(nodes)g(in)h(the)
f(whole)g(priority)f(queue.)148 2364 y fl(\017)24 b fq(All)12 b(leaves)h(are)
f(at)h(the)f(same)h(depth.)75 2555 y(From)d(the)g(two)g(above)h(properties,)g
(for)e(a)i(2-3)f(tree)h(with)f(height)g fk(h)k(>)g fq(1,)d(the)f(minimum)g
(number)g(of)g(nodes)75 2634 y(is)j(2)146 2616 y fh(h)181 2634 y fq(and)g(the)
f(maximum)g(number)g(of)g(nodes)h(is)g(3)973 2616 y fh(h)995 2634 y fq(.)19 b
(Thus,)14 b fk(h)g fi(=)g fk(O)r fi(\()p fq(log)8 b fk(n)p fi(\))p fq(,)13 b
(where)f fk(n)h fq(is)g(the)g(number)f(of)75 2712 y(nodes)h(in)f(the)g(tree.)
988 2836 y(49)p eop
%%Page: 50 64
 bop -4 702 a @beginspecial @setspecial
%%BeginDocument: fig/23tree.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 1 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
612 792 0 FMBEGINPAGE
194.4 136.8 68.4 79.2 2 L
0.5 H
2 Z
0 X
0 K
N
194.4 136.8 320.4 79.2 2 L
N
194.4 136.8 194.4 79.2 2 L
N
320.4 79.2 277.2 21.6 2 L
N
320.4 79.2 363.6 21.6 2 L
N
320.4 79.2 320.4 21.6 2 L
N
194.4 79.2 169.2 21.6 2 L
N
194.4 79.2 219.6 21.6 2 L
N
180 122.4 208.8 151.2 14.4 RR
7 X
V
0 X
N
0 F
(1) 191.4 132.2 T
68.4 79.2 43.2 21.6 2 L
N
68.4 79.2 93.6 21.6 2 L
N
54 64.8 82.8 93.6 14.4 RR
7 X
V
0 X
N
(7) 64.8 74.6 T
306 64.8 334.8 93.6 14.4 RR
7 X
V
0 X
N
(1) 317.4 74.6 T
180 64.8 208.8 93.6 14.4 RR
7 X
V
0 X
N
(5) 190.8 74.6 T
154.8 7.2 183.6 36 14.4 RR
7 X
V
0 X
N
(6) 165.6 17 T
205.2 7.2 234 36 14.4 RR
7 X
V
0 X
N
(5) 216 17 T
349.2 7.2 378 36 14.4 RR
7 X
V
0 X
N
(1) 360.6 17 T
306 7.2 334.8 36 14.4 RR
7 X
V
0 X
N
(2) 316.8 17 T
262.8 7.2 291.6 36 14.4 RR
7 X
V
0 X
N
(4) 273.6 17 T
28.8 7.2 57.6 36 14.4 RR
7 X
V
0 X
N
(9) 39.6 17 T
79.2 7.2 108 36 14.4 RR
7 X
V
0 X
N
(8) 90 17 T
259.2 122.4 288 151.2 14.4 RR
7 X
V
0 X
N
(k) 270 132.2 T
(k: the priority key in the node) 296.62 132.22 T
FMENDPAGE
%%EndDocument
 @endspecial 707 778 a fq(Figure)12 b(4.5:)18 b(A)13 b(2-3)e(tree.)69 935 y
(In)j(2-3)g(trees,)h(each)g(node)f(is)h(associated)h(with)e(a)g(priority)f
(key;)j(each)f(leaf)f(node)g(is)h(also)g(associated)-4 1013 y(with)10 b(those)
h(tasks)g(whose)g(priorities)e(are)i(the)f(same)i(as)f(the)f(leaf)s(')m(s)h
(priority)-5 b(.)18 b(These)11 b(priorities)f(are)g(ordered)-4 1091 y(as)h
(follows.)18 b(For)10 b(each)h(internal)f(node)h fk(\027)k fq(whose)c(priorit\
y)f(is)h(denoted)g(by)g fk(\031)h fq(and)f(whose)h fk(i)p fq(th)e(child)h(and)
g fk(i)p fq(th)-4 1170 y(child')l(s)h(priority)f(are)h(denoted)f(by)h fk(\027)
630 1177 y fh(i)657 1170 y fq(and)f fk(\031)768 1177 y fh(i)782 1170 y fq(,)i
(there)e(are)h(two)g(ordering)f(restrictions)g(for)g(these)i(priorities:)-4
1248 y(\(1\))g fk(\031)18 b fl(\024)e fk(\031)197 1255 y fh(i)225 1248 y fq
(for)d(all)h fk(i)p fq(;)h(\(2\))f(if)f fk(i)j(<)h(j)s fq(,)e(all)f(the)g(pri\
orities)f(of)h(nodes)h(in)f(the)g(subtree)g(rooted)g(at)g fk(\027)1684 1255 y
fh(i)1712 1248 y fq(must)g(be)-4 1326 y(lar)n(ger)g(than)h(those)g(at)g fk
(\027)421 1333 y fh(j)454 1326 y fq(\(note)f(that)g(we)h(say)g(that)g fk(\027)
928 1333 y fh(i)956 1326 y fq(is)g(to)g(the)f fm(left)h fq(of)f fk(\027)1292
1333 y fh(j)1310 1326 y fq(\).)25 b(An)15 b(example)f(is)h(illustrated)-4 1404
y(in)d(Figure)h(4.5.)21 b(Because)14 b(of)f(the)g(second)g(restriction,)g(for)
f(a)i(given)f(node)g(and)g(a)g(given)g(priority)-5 b(,)14 b(we)f(can)-4 1483 y
(easily)j(\256nd)g(the)g(child)g(of)g(the)h(node)f(whose)h(subtree)f(may)g
(have)h(the)f(leaf)g(with)g(the)g(priority)-5 b(.)31 b(W)l(e)16 b(can)-4 1561
y(use)e(this)g(technique)f(to)h(search)g(for)f(a)h(leaf)f(whose)i(priority)d
(is)i(adjacent)g(to)g(a)g(given)f(priority)-5 b(.)23 b(Since)14 b(the)-4 1639
y(priorities)d(of)h(leaves)h(are)f(all)g(distinct,)h(we)f(store)h(all)f(tasks)
h(with)f(the)g(same)h(priority)e(in)h(the)h(same)f(leaf.)69 1784 y(In)j([3],)
i(Aho)e fm(et)h(al.)29 b fq(proved)15 b(that)h(the)g(times)g(of)f(the)h(opera\
tions)g(I)p fp(NSER)m(T)p fq(,)h(D)p fp(ELETE)p fq(,)i(D)p fp(ELETEMAX)p fq
(,)-4 1862 y(M)p fp(AXPRI)p fq(,)c(D)p fp(ELETEMIN)p fq(,)j(M)p fp(INPRI)p fq
(,)e(and)f(S)p fp(PLIT)h fq(are)e(only)h fk(O)q fi(\()p fq(log)8 b fk(n)p fi
(\))15 b fq(because)g(each)h(of)e(these)h(operations)-4 1941 y(only)g(travers\
es)i(a)f(path)g(between)h(the)f(root)g(and)g(some)g(leaf)g(at)h(most)f(downwa\
rds)g(once)g(and)h(upwards)-4 2019 y(once.)22 b(First,)14 b(we)g(search)g(fro\
m)e(the)i(root)f(to)g(the)h(leaf)f(at)h(which)g(the)f(operation)g(of)g(access\
ing,)j(insertion,)-4 2097 y(deletion,)c(or)f(splitting)h(takes)g(place.)18 b
(Note)12 b(that)g(the)g(D)p fp(ELETE)i fq(operation)d(does)i(not)e(need)i(to)
e(search)i(from)-4 2175 y(the)g(root)g(because)h(we)f(can)h(let)f(every)g(tas\
k)h(have)g(a)f(pointer)g(to)g(the)h(leaf)f(\(with)f(the)i(same)g(priority)e
(as)i(the)-4 2254 y(task')m(s\))h(directly)l(.)27 b(After)14 b(\256nding)h
(the)g(leaf)g fk(\027)s fq(,)i(we)e(perform)f(the)h(desired)h(operation)e(and)
h(rebalance)h(the)-4 2332 y(tree)c(if)g(necessary)h(to)f(ensure)g(that)g(it)h
(is)f(still)g(a)h(2-3)f(tree.)18 b(This)13 b(requires)f(only)g(one)g(upward)g
(pass.)69 2477 y(In)g(order)g(to)h(support)g(the)g(T)p fp(HRESHPRI)g fq(opera\
tion,)g(we)g(need)g(to)g(let)g(each)g(node)g fk(\027)k fq(in)12 b(the)h(tree)
g(have)g(a)-4 2555 y(load)d(variable)g fk(L)296 2562 y fh(\027)318 2555 y fq
(.)17 b(\(Note)10 b(that)g(this)h(is)g(similar)f(to)g(the)g(augmented)g(tree)
g(described)h(in)f([28)o(,)i(Chapter)e(15].\))-4 2634 y(If)h fk(\027)16 b fq
(is)d(a)g(leaf,)g fk(L)295 2641 y fh(\027)331 2634 y fi(=)383 2600 y fa(P)435
2634 y fk(G)473 2641 y fg(T)517 2634 y fq(for)e(all)i(tasks)g fl(T)26 b fq
(in)12 b fk(\027)s fq(;)h(otherwise)g fk(\027)j fq(is)c(an)h(internal)f(node)
h(and)f fk(L)1664 2641 y fh(\027)1700 2634 y fi(=)1752 2600 y fa(P)1805 2634 y
fk(L)1838 2641 y fh(\027)1857 2632 y ff(0)-4 2712 y fq(for)j(all)h(children)f
fk(\027)342 2694 y fg(0)370 2712 y fq(of)h fk(\027)s fq(.)30 b(An)16 b(exampl\
e)g(is)g(illustrated)f(in)h(Figure)g(4.6,)h(in)f(which)g(the)g(number)g(in)g
(the)908 2836 y(50)p eop
%%Page: 51 65
 bop 75 942 a @beginspecial @setspecial
%%BeginDocument: fig/treeload.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 4 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
1 10 /Times-Roman FMDEFINEFONT
2 11 /ZapfChancery-MediumItalic FMDEFINEFONT
3 9 /Times-Italic FMDEFINEFONT
612 792 0 FMBEGINPAGE
74.53 68.6 74.53 54.2 2 L
3 H
2 Z
3 X
0 K
N
250.54 68.6 250.54 54.2 2 L
N
308.54 67.6 308.54 53.2 2 L
N
352.54 66.6 352.54 52.2 2 L
N
395.54 67.6 395.54 53.2 2 L
N
201.54 68.6 201.54 54.2 2 L
N
125.54 68.6 125.54 54.2 2 L
N
225.73 198.2 99.73 140.6 2 L
0.5 H
0 X
N
225.73 198.2 351.73 140.6 2 L
N
225.73 198.2 225.73 140.6 2 L
N
351.73 140.6 308.53 83 2 L
N
351.73 140.6 394.93 83 2 L
N
351.73 140.6 351.73 83 2 L
N
225.73 140.6 200.53 83 2 L
N
225.73 140.6 250.93 83 2 L
N
211.33 183.8 240.13 212.6 14.4 RR
7 X
V
0 X
N
0 F
(1) 222.74 193.6 T
99.73 140.6 74.53 83 2 L
N
99.73 140.6 124.93 83 2 L
N
85.33 126.2 114.13 155 14.4 RR
7 X
V
0 X
N
(7) 96.13 136 T
337.33 126.2 366.13 155 14.4 RR
7 X
V
0 X
N
(1) 348.73 136 T
211.33 126.2 240.13 155 14.4 RR
7 X
V
0 X
N
(5) 222.13 136 T
186.13 68.6 214.93 97.4 14.4 RR
7 X
V
0 X
N
(6) 196.93 78.4 T
236.53 68.6 265.33 97.4 14.4 RR
7 X
V
0 X
N
(5) 247.33 78.4 T
380.53 68.6 409.33 97.4 14.4 RR
7 X
V
0 X
N
(1) 391.93 78.4 T
337.33 68.6 366.13 97.4 14.4 RR
7 X
V
0 X
N
(2) 348.13 78.4 T
294.13 68.6 322.93 97.4 14.4 RR
7 X
V
0 X
N
(4) 304.93 78.4 T
60.13 68.6 88.93 97.4 14.4 RR
7 X
V
0 X
N
(9) 70.93 78.4 T
110.53 68.6 139.33 97.4 14.4 RR
7 X
V
0 X
N
(8) 121.33 78.4 T
1 F
(5) 143.27 78.78 T
(8) 90.77 78.78 T
(13) 116.6 137.12 T
(1) 216.77 78.78 T
(6) 268.44 79.62 T
(9) 325.1 78.78 T
(7) 369.27 78.78 T
(3) 412.6 78.78 T
(7) 243.27 137.95 T
(19) 369.94 137.12 T
(39) 243.27 194.62 T
63.73 25.4 63.73 54.2 2 L
7 X
V
0 X
N
85.33 25.4 85.33 54.2 2 L
7 X
V
0 X
N
85.33 25.4 63.73 25.4 2 L
7 X
V
0 X
N
85.33 39.8 63.73 39.8 2 L
7 X
V
0 X
N
85.33 54.2 63.73 54.2 2 L
7 X
V
0 X
N
2 F
(T) 71.21 30.07 T
3 F
(2) 76.71 27.32 T
2 F
(T) 71.21 44.95 T
3 F
(1) 76.71 42.2 T
1 F
(6) 88.93 43.78 T
(2) 88.93 29.38 T
239.74 25.4 239.74 54.2 2 L
7 X
V
0 X
N
261.34 25.4 261.34 54.2 2 L
7 X
V
0 X
N
261.34 25.4 239.74 25.4 2 L
7 X
V
0 X
N
261.34 39.8 239.74 39.8 2 L
7 X
V
0 X
N
261.34 54.2 239.74 54.2 2 L
7 X
V
0 X
N
2 F
(T) 247.21 30.07 T
3 F
(6) 252.71 27.32 T
2 F
(T) 247.21 44.95 T
3 F
(5) 252.71 42.2 T
1 F
(4) 264.94 43.78 T
(1) 264.94 29.38 T
297.74 24.4 297.74 53.2 2 L
7 X
V
0 X
N
319.34 24.4 319.34 53.2 2 L
7 X
V
0 X
N
319.34 24.4 297.74 24.4 2 L
7 X
V
0 X
N
319.34 38.8 297.74 38.8 2 L
7 X
V
0 X
N
319.34 53.2 297.74 53.2 2 L
7 X
V
0 X
N
2 F
(T) 305.21 29.07 T
3 F
(9) 310.71 26.32 T
2 F
(T) 305.21 43.95 T
3 F
(8) 310.71 41.2 T
1 F
(6) 322.94 42.78 T
(3) 322.94 28.38 T
341.74 39.4 341.74 52.2 2 L
7 X
V
0 X
N
363.34 39.4 363.34 52.2 2 L
7 X
V
0 X
N
363.34 52.2 341.74 52.2 2 L
7 X
V
0 X
N
2 F
(T) 346.97 42.95 T
3 F
(10) 352.46 40.2 T
1 F
(7) 366.94 41.78 T
384.74 24.4 384.74 53.2 2 L
7 X
V
0 X
N
406.34 24.4 406.34 53.2 2 L
7 X
V
0 X
N
406.34 24.4 384.74 24.4 2 L
7 X
V
0 X
N
406.34 38.8 384.74 38.8 2 L
7 X
V
0 X
N
406.34 53.2 384.74 53.2 2 L
7 X
V
0 X
N
2 F
(T) 389.97 29.07 T
3 F
(12) 395.46 26.32 T
2 F
(T) 390.3 43.95 T
3 F
(1) 395.79 41.2 T
(1) 399.62 41.2 T
1 F
(1) 409.94 42.78 T
(2) 409.94 28.38 T
190.74 40.4 190.74 54.2 2 L
7 X
V
0 X
N
212.34 40.4 212.34 54.2 2 L
7 X
V
0 X
N
212.34 54.2 190.74 54.2 2 L
7 X
V
0 X
N
2 F
(T) 198.21 44.95 T
3 F
(4) 203.71 42.2 T
1 F
(1) 215.94 43.78 T
114.74 40.4 114.74 54.2 2 L
7 X
V
0 X
N
136.34 40.4 136.34 54.2 2 L
7 X
V
0 X
N
136.34 54.2 114.74 54.2 2 L
7 X
V
0 X
N
2 F
(T) 122.21 44.95 T
3 F
(3) 127.71 42.2 T
1 F
(5) 139.94 43.78 T
363.34 37.8 341.74 37.8 2 L
7 X
V
0 X
N
212.34 39.8 190.74 39.8 2 L
7 X
V
0 X
N
136.34 39.8 114.74 39.8 2 L
7 X
V
0 X
N
239.74 11.4 239.74 25.2 2 L
7 X
V
0 X
N
261.34 11.4 261.34 25.2 2 L
7 X
V
0 X
N
261.34 25.2 239.74 25.2 2 L
7 X
V
0 X
N
2 F
(T) 247.21 15.95 T
3 F
(7) 252.71 13.2 T
1 F
(1) 264.94 14.78 T
261.34 10.8 239.74 10.8 2 L
7 X
V
0 X
N
FMENDPAGE
%%EndDocument
 @endspecial 485 1018 a fq(Figure)11 b(4.6:)18 b(A)13 b(2-3)f(tree,)g(showing)
g(load)h(variable)f(values.)75 1158 y(right)e(hand)g(side)h(of)f(each)g(recta\
ngle)g(\(i.e.,)i(task\))f(represents)f(the)g(grain)g(size)h(of)f(the)g(task,)
i(and)e(the)h(number)75 1236 y(in)k(the)h(right)e(hand)h(side)h(of)f(each)h
(circle)f(\(i.e.,)i(tree)e(node\))g(represents)g(the)h(load)f(variable)g(valu\
e)g(of)g(the)75 1315 y(node.)31 b(So,)17 b(whenever)f(a)h(leaf)f(changes)h
(its)g(load)f(\(e.g.,)j(a)d(task)h(is)g(added)f(to)h(some)f(leaf\),)i(we)e
(can)h(just)75 1393 y(use)f(the)f(above)h(formula)e(to)i(update)f(the)g(load)
h(variables)f fk(L)1150 1400 y fh(\027)1187 1393 y fq(from)g(the)g(leaf)g(to)
h(the)f(root.)27 b(In)15 b(addition,)75 1471 y(whenever)e(recon\256guring)g
(the)g(tree)h(upwards,)g(we)g(may)g(also)g(need)g(to)g(calculate)f(the)h(load)
g(variables)g(of)75 1549 y(these)d(touched)g(nodes)h(again)e(by)h(the)g(above)
g(formula.)17 b(Thus,)12 b(the)f(other)g(operations)f(still)h(need)g fk(O)r fi
(\()p fq(log)d fk(n)p fi(\))75 1628 y fq(time.)148 1773 y(For)14 b(the)h(T)p
fp(HRESHPRI)g fq(operation)f(with)h(a)g(given)f(load)h(threshold)f fk(L)1349
1780 y fh(thr)1402 1773 y fq(,)i(if)e(the)h(total)f(load)h(is)g(smaller)75
1851 y(than)k fk(L)213 1858 y fh(thr)265 1851 y fq(,)i(we)e(stop)g(and)g(retu\
rn)f(the)g(total)h(load)f(and)h(the)g(threshold)f(priority)g fl(\0001)p fq
(;)j(otherwise,)g(we)75 1929 y(will)16 b(search)g(along)h(the)f(path)g(from)f
(the)h(root)g(to)g(the)g(leaf)g(with)g(the)g(threshold)g(priority)f(satisfyin\
g)h(the)75 2008 y(operation.)26 b(For)14 b(example,)i(in)f(Figure)g(4.6,)h
(if)f fk(L)952 2015 y fh(thr)1022 2008 y fi(=)j fq(45,)e(we)f(will)g(return)f
(the)h(total)g(load)g(39)g(and)g(the)75 2086 y(threshold)g(priority)f fl(\000\
1)p fq(;)i(if)f fk(L)639 2093 y fh(thr)709 2086 y fi(=)j fq(15,)e(we)f(will)g
(search)h(from)e(the)h(root)g(to)g(the)g(leaf)g(with)g(priority)f(5)75 2164 y
(and)e(return)f(the)h(load)g(20)g(\()p fi(=)h fq(8)d fi(+)g fq(5)g fi(+)g fq
(1)g fi(+)g fq(6\))i(and)g(the)g(priority)e(5.)19 b(In)11 b(the)h(latter)f
(case,)j(starting)d(from)g(the)75 2242 y(root,)i(we)g(repeatedly)f(visit)h
(one)g(node)g(downwards)g(until)f(a)h(leaf)g(is)g(reached)g(such)g(that)g(for)
f(each)h(visited)75 2321 y(node)g fk(\027)s fq(,)h(the)e(following)g(conditio\
n)g(holds:)19 b fk(L)893 2328 y fh(l)921 2321 y fk(<)14 b(L)1006 2328 y fh
(thr)1073 2321 y fl(\024)h fk(L)1160 2328 y fh(l)1184 2321 y fi(+)c fk(L)1266
2328 y fh(\027)1288 2321 y fq(,)j(where)e fk(L)1481 2328 y fh(\027)1516 2321 y
fq(is)h(the)g(load)g(variable)g(of)75 2399 y fk(\027)k fq(and)c fk(L)234 2406
y fh(l)260 2399 y fq(is)h(the)f(total)g(load)g(of)g(tasks)h(in)f(all)g(the)g
(subtrees)h(to)f(the)g(left)g(of)f fk(\027)17 b fq(\(i.e.,)d(the)g(total)e
(load)i(of)e(tasks)75 2477 y(with)h(priorities)f fk(>)i(\031)452 2459 y fg
(0)463 2477 y fq(,)g(where)f fk(\031)653 2459 y fg(0)678 2477 y fq(is)g(the)g
(lar)o(gest)g(priority)e(of)i(the)g(leaves)g(in)g(the)g(subtree)g(rooted)f
(at)h fk(\027)t fq(\).)20 b(It)75 2555 y(is)15 b(trivial)e(that)i(the)f(above)
h(condition)e(holds)i(for)e(the)i(root,)g(initially)-5 b(.)25 b(For)14 b(exam\
ple,)h(in)g(Figure)e(4.6,)j(for)75 2634 y(the)d(root,)h(since)g fk(L)405 2641
y fh(l)433 2634 y fi(=)i fq(0)d(and)h fk(L)644 2641 y fh(\027)681 2634 y fi
(=)h fq(39,)f(the)g(above)f(condition)g(holds)h(\(with)e fk(L)1492 2641 y fh
(thr)1560 2634 y fi(=)j fq(15\).)21 b(Then,)15 b(when)75 2712 y(visiting)9 b
(the)h(node)f fk(\027)k fq(on)c(the)h(path)f(with)g(the)h(above)f(condition,)
h(we)g(can)g(guarantee)f(from)f(the)i(de\256nition)f(of)988 2836 y(51)p eop
%%Page: 52 66
 bop -4 53 a fq(load)11 b(variables)h(that)g(one)g(of)f(its)h(children)g(must)
g(satisfy)g(this)g(condition)f(too.)18 b(For)11 b(example,)h(for)f(the)h(root)
-4 132 y(in)i(Figure)f(4.6,)j(we)e(can)h(\256nd)f(the)g(internal)g(node)g fk
(\027)k fq(\(with)c(priority)e(5\))i(satisfying)h(the)f(above)g(condition)-4
210 y(\(with)c fk(L)145 217 y fh(thr)211 210 y fi(=)k fq(15\),)d(since)h fk
(L)500 217 y fh(l)527 210 y fi(=)i fq(13)d(and)h fk(L)757 217 y fh(\027)792
210 y fi(=)i fq(7.)k(The)12 b(reader)f(can)g(verify)g(that)g(the)g(condition)
g(holds)g(for)-4 288 y(the)f(leaf)h(with)f(priority)g(5,)h(too.)18 b(When)11 b
(the)g(leaf)f fk(\027)k fq(with)d(priority)e fk(\031)k fq(is)e(reached,)g(we)
h(can)f(derive)f(the)h(result)-4 366 y fk(L)p fi(\()p fk(\031)i fi(+)f fq(1)p
fi(\))k fk(<)h(L)287 373 y fh(thr)355 366 y fl(\024)g fk(L)p fi(\()p fk(\031)
q fi(\))d fq(since)h fk(L)675 373 y fh(l)705 366 y fk(<)h(L)792 373 y fh(thr)
860 366 y fl(\024)h fk(L)949 373 y fh(l)974 366 y fi(+)12 b fk(L)1057 373 y fh
(\027)1079 366 y fq(,)j fk(L)1139 373 y fh(l)1164 366 y fi(+)d fk(L)1247 373 y
fh(\027)1285 366 y fi(=)17 b fk(L)p fi(\()p fk(\031)q fi(\))p fq(,)e(and)g fk
(L)1587 373 y fh(l)1616 366 y fi(=)h fk(L)p fi(\()p fk(\031)e fi(+)e fq(1)p fi
(\))p fq(.)-4 445 y(So,)h fk(\031)i fq(is)f(just)f(the)h(threshold)e(priority)
g(for)h(the)g(function.)21 b(From)12 b(the)h(above,)i(the)e(T)p fp(HRESHPRI)g
fq(operation)-4 523 y(only)f(needs)g(to)h(visit)f(nodes)h fk(O)q fi(\()p fq
(log)8 b fk(n)p fi(\))13 b fq(times.)-4 727 y fo(Amortized)f(T)o(ime)69 896 y
fq(W)l(e)f(will)g(further)f(modify)g(the)i(data)f(structure)g(such)g(that)h
(the)f(amortized)f(times)i(for)e(DEQ)i(operations)-4 974 y(satisfy)17 b(Prope\
rty)g(P2.)33 b(For)17 b(insertion/deletion,)i(many)e(researchers)h([47)o(,)g
(68])f(have)h(proved)f(that)h(the)-4 1052 y(amortized)10 b(time)h(for)g(rebal\
ancing)g(the)g(tree)h(is)f(only)g fk(O)r fi(\()p fq(1)p fi(\))p fq(.)18 b(How\
ever)n(,)12 b(DEQ)g(operations)f(may)g(still)g(need)-4 1131 y fk(O)q fi(\()p
fq(log)d fk(n)p fi(\))14 b fq(time)g(for)g(the)g(following)f(two)h(basic)h
(procedures:)21 b(\(1\))14 b(to)g(search)g(downwards)g(to)g(the)h(leaf)f(at)
-4 1209 y(which)9 b(the)h(access,)i(insertion,)e(or)f(deletion)g(takes)h(plac\
e)g(and)g(\(2\))f(to)g(update)h(the)f(load)h(variables)f(upwards.)-4 1287 y
(So,)i(in)g(order)g(to)g(let)g(the)g(times)g(for)g(the)g(DEQ)h(operations)f
(still)g(be)g(amortized)g fk(O)q fi(\()p fq(1)p fi(\))p fq(,)h(we)g(will)e
(modify)h(the)-4 1365 y(data)f(structure)g(to)g(reduce)g(the)g(computation)g
(times)g(of)g(the)g(above)h(two)f(procedures)g(for)f(DEQ)i(operations)-4 1444
y(to)h fk(O)q fi(\()p fq(1)p fi(\))p fq(,)h(as)g(follows.)69 1589 y(First,)e
(we)h(put)f(a)h fm(\256nger)g fq(at)g(each)g(of)f(the)g(two)h(ends;)g(i.e.,)h
(the)f(priority)e(queue)h(has)h(two)g(special)g(\256ngers)-4 1667 y(pointing)
c(to)i(the)g(leaves)g(with)g(the)f(highest)h(priority)f(and)g(the)h(lowest)g
(priority)-5 b(.)18 b(\(Note)9 b(that)h(putting)f(\256ngers)-4 1745 y(on)k
(a)h(search)g(tree)f([38)o(,)i(98)o(])f(is)g(a)f(common)g(technique)h(for)f
(\256nding)f(special)j(nodes)e(and)h(their)f(neighbors)-4 1824 y(more)g(quick\
ly)l(.\))22 b(Hence,)15 b(for)e(DEQ)h(operations,)g(we)g(can)g(directly)f(\
\256nd)h(the)f(leaf)h(from)f(the)g(two)h(\256ngers)-4 1902 y(without)9 b(sear\
ching)h(downwards)g(from)g(the)g(root)g(to)g(the)g(leaf.)17 b(Thus,)12 b(for)
e(each)g(DEQ)h(operation,)g(the)f(time)-4 1980 y(for)h(searching)i(the)g(leaf)
f(is)h fk(O)r fi(\()p fq(1)p fi(\))p fq(.)19 b(In)12 b(addition,)h(with)f(the)
h(same)g(technique,)g(the)f(total)h(worst-case)g(times)-4 2058 y(of)e(the)i
(M)p fp(AXPRI)f fq(and)g(M)p fp(INPRI)h fq(operations)f(are)g(only)h fk(O)q fi
(\()p fq(1)p fi(\))p fq(.)69 2204 y(Second,)22 b(we)e(allow)g(that)g(nodes)g
(on)g(the)g fm(leftmost)g fq(and)g fm(rightmost)g(paths)g fq(do)g(not)f(need)
i(to)e(have)-4 2282 y(accurate)14 b(load)h(status,)h(where)e(the)h(leftmost)f
(\(rightmost\))f(path)h(is)h(the)g(path)g(between)f(the)h(root)f(and)h(the)-4
2360 y(leaf)f(with)f(the)i(lowest)f(\(highest\))g(priority)-5 b(.)24 b(So,)15
b(we)f(do)g(not)h(need)f(to)g(update)g(the)g(load)h(variables)f(of)g(the)-4
2438 y(nodes)e(on)f(both)h(paths,)g(as)g(shown)g(in)g(Figure)f(4.7.)18 b(Thus\
,)13 b(for)e(all)h(the)f(DEQ)i(operations,)e(we)h(do)g(not)f(have)-4 2517 y
(to)h(update)g(the)h(load)f(upwards,)h(i.e.,)h(the)f(computation)e(time)h(for)
g(updating)g(the)h(load)f(is)h fk(O)q fi(\()p fq(1)p fi(\))p fq(.)19 b(W)n
(ith)13 b(this)-4 2595 y(modi\256cation,)e(each)g(T)p fp(HRESHPRI)h fq(operat\
ion)f(needs)h(to)f(update)g(the)h(load)f(status)h(of)f(nodes)h(on)f(both)g
(paths)-4 2673 y(\(upwards\))g(\256rst)h(and)h(then)g(perform)e(the)h(origina\
l)g(T)p fp(HRESHPRI)h fq(operation.)18 b(Thus,)c(the)f(new)f(T)p fp(HRESHPRI)
908 2836 y fq(52)p eop
%%Page: 53 67
 bop 75 552 a @beginspecial @setspecial
%%BeginDocument: fig/update-load.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 2 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
1 12 /Times-Italic FMDEFINEFONT
612 792 0 FMBEGINPAGE
234.38 118.8 130.1 30.05 338.66 30.05 3 Y
0.5 H
2 Z
0 X
0 K
N
234.38 118.8 338.66 30.05 2 L
1 H
N
234.38 118.8 130.1 30.05 2 L
0.5 H
N
7 X
90 450 5.21 3.42 218.74 30.05 G
0 X
90 450 5.21 3.42 218.74 30.05 A
207.51 80.35 203.09 91.51 212.75 84.39 210.13 82.37 4 Y
V
218.74 33.46 229.17 47.12 203.1 60.77 213.52 77.84 209.52 83.14 5 L
N
0 F
(update load) 220.81 53.63 T
7 X
90 450 5.22 3.42 338.67 30.05 G
0 X
90 450 5.22 3.42 338.67 30.05 A
7 X
90 450 5.21 3.42 130.1 30.05 G
0 X
90 450 5.21 3.42 130.1 30.05 A
(leftmost path) 111.6 83.76 T
(rightmost path) 287.22 85.32 T
1 F
(O\0501\051) 325.26 12.67 T
(O\0501\051) 115.89 11.67 T
(O\050log n\051) 198.26 9.67 T
FMENDPAGE
%%EndDocument
 @endspecial 650 628 a fq(Figure)12 b(4.7:)18 b(Updating)11 b(load)i(variable\
s.)75 771 y(operation)f(still)g(needs)h fk(O)q fi(\()p fq(log)8 b fk(n)p fi
(\))13 b fq(time.)75 1055 y fr(4.3)71 b(Discussion)75 1256 y fq(Although)8 b
(we)g(have)h(proposed)f(some)h(ef)n(\256cient)g(techniques)f(to)g(implement)g
(the)g(multilist)g(model,)h(it)f(is)h(still)75 1334 y(very)i(dif)o(\256cult)g
(to)g(ar)o(gue)g(that)g(our)g(model)h(achieves)g(the)f(ultimate)g(goal:)17 b
(for)11 b fm(all)g fq(scheduling)g(algorithms,)75 1412 y(our)18 b(general)h
(approach)f(incurs)h(no)f(signi\256cant)h(overhead.)37 b(So,)20 b(we)f(will)g
(leave)f(this)h(problem)f(open)75 1490 y(and)d(only)f(ar)o(gue)h(that)g(our)f
(general)g(approach)h(incurs)g(no)f(signi\256cant)h(performance)e(overhead)i
(at)g(least)75 1569 y(for)e(the)g(following)g(four)g(important)f(scheduling)i
(algorithms:)19 b fm(PBFS-GPQ)p fq(,)d fm(PBFS-R)p fq(,)f fm(PDC-WK)p fq(,)g
(and)75 1647 y fm(PDC-RR)p fq(.)135 1869 y(1.)25 b(For)18 b(the)h fm(PBFS-GPQ)
g fq(scheduling)g(algorithm,)h(researchers)e(in)h([76)o(])g(also)g(used)g(a)f
(centralized)197 1947 y(mechanism)i(to)g(maintain)f(the)h(global)g(priority)f
(queue.)41 b(They)21 b(did)f(not)g(consider)f(the)i(sparse)197 2025 y(priorit\
y)14 b(distribution)g(situation)h(because)h(their)e(task)i(grain)f(size)h(was)
f(coarse)h(enough)f(and)g(they)197 2104 y(had)c(relatively)f(few)h(processors\
.)18 b(But,)12 b(if)f(their)f(task)h(grain)g(size)g(were)g(small)g(or)g(if)f
(they)h(had)g(many)197 2182 y(processors,)20 b(we)f(expect)f(that)g(our)f(adv\
anced)i(global)e(protocol)h(could)g(be)g(used)g(to)g(solve)h(their)197 2260 y
(problem.)28 b(So,)17 b(if)f(a)g(dedicated)g(design)g(for)f fm(PBFS-GPQ)j fq
(followed)d(our)g(protocol,)i(our)e(general)197 2338 y(system)e(should)f(perf\
orm)f(almost)h(as)h(ef)o(\256ciently)f(as)h(the)f(dedicated)g(one.)135 2477 y
(2.)25 b(For)7 b(the)i fm(PBFS-R)g fq(scheduling)g(algorithm,)f(Karp)g(and)g
(Zhang)h([57)o(])f(used)h(a)f(randomized)g(technique.)197 2555 y(The)k(corres\
ponding)f(scheduling)h(scheme)g(based)g(on)f(our)h(model)f(\(as)h(shown)g(in)
f(Section)g(3.1.1.2\))197 2634 y(mer)o(ges)k(PLs)g(into)f(local)h(VLs.)26 b
(Because)16 b(of)f(this)f(locality)m(,)i(our)e(model)g(will)h(perform)e(almos\
t)i(as)197 2712 y(ef)o(\256ciently)c(as)i(a)g(dedicated)f(design)h(for)e fm
(PBFS-R)p fq(.)988 2836 y(53)p eop
%%Page: 54 68
 bop 56 53 a fq(3.)24 b(For)9 b(the)h fm(PDC-WK)h fq(scheduling)e(algorithm,)
h(W)n(u)g(and)f(Kung)h([105)o(])g(used)g(a)g(global)f(pool)g(to)h(contain)117
132 y(all)j(the)g(nodes)g(at)g(the)f(highest)h(available)g(tree)f(level)h(in)
f(the)h(D&C)g(computation)f(tree.)19 b(Whenever)117 210 y(some)d(processor)f
(is)g(idle,)h(nodes)g(in)f(the)g(pool)g(can)g(be)g(donated)g(to)g(the)g(idle)
g(processor)m(.)27 b(In)14 b(fact,)117 288 y(this)f(algorithm)d(is)j(the)f
(same)g(as)h(the)f(simple)g(global)g(protocol)f(except)h(for)f(using)h fl(>)
1598 295 y fj(1)1629 288 y fq(\(see)g(Section)117 366 y(4.1.2.1\).)22 b(Note)
14 b(that)f(the)g(set)h fl(>)685 373 y fj(0)717 366 y fq(is)f(equivalent)g
(to)h(the)f(global)g(pool.)21 b(In)13 b(our)f(system,)j(the)e(set)h fl(>)1852
373 y fj(1)117 445 y fq(is)h(used)f(to)g(make)f(the)h(transition)f(from)g(the)
h(current)f(maximum)g(priority)f(to)i(the)g(next)f(maximum)117 523 y(priority)
i(smoother)m(.)29 b(In)16 b(fact,)h(a)f(dedicated)g(design)g(for)f(parallel)h
(D&C)g(may)g(also)g(bene\256t)g(from)117 601 y(using)d(this)f(technique)g(of)
g(adding)g(the)h(set)g fl(>)911 608 y fj(1)929 601 y fq(.)117 696 y(In)8 b
(the)h(advanced)f(protocol,)h(we)g(may)f(require)g(an)g(extra)g(combining)g
(and)g(disseminating)g(operation)117 774 y(when)j(there)f(is)h(a)g(sparse)g
(priority)f(distribution.)16 b(However)n(,)11 b(for)f fm(PDC-WK)p fq(,)i(we)f
(can)g(assign)g(a)g(very)117 853 y(lar)o(ge)i(grain)f(size)h(to)f(each)h(node\
,)g(such)g(that)g(the)f(total)g(load)h(of)f(tasks)h(in)g fl(>)1433 834 y fg
(0)1433 865 y fj(1)1464 853 y fq(is)g(very)f(lar)o(ge)g(in)h(most)117 931 y
(cases.)22 b(Since)12 b fl(>)417 938 y fj(1)449 931 y fq(already)g(has)i(enou\
gh)e(load,)i(we)f(do)g(not)f(need)h(to)g(use)g(the)g(extra)g(disseminating)
117 1009 y(operation)e(to)f(group)g(extra)h(tasks)g(into)g fl(>)842 991 y fg
(00)842 1021 y fj(1)863 1009 y fq(.)18 b(Thus,)12 b(the)f(amount)f(of)h(commu\
nication)f(is)h(almost)g(the)117 1087 y(same)i(as)g(the)g(simple)f(global)g
(protocol)f(or)h(a)h(dedicated)f fm(PDC-WK)i fq(algorithm.)117 1182 y(In)h
(addition,)g(for)g(PLs,)h(the)f fm(PDC-WK)h fq(algorithm)e(always)h(inserts)g
(and)g(deletes)h(a)f(task)g(with)g(the)117 1260 y(highest)j(priority)e(or)i
(the)f(lowest)h(priority)-5 b(,)20 b(as)e(mentioned)f(earlier)m(.)34 b(Thus,)
20 b(in)e(our)f(system,)j(the)117 1339 y(amortized)g(times)g(for)g(these)h
(DEQ)g(operations)f(are)g(only)g fk(O)q fi(\()p fq(1)p fi(\))p fq(.)43 b(In)
20 b(a)g(dedicated)h fm(PDC-WK)117 1417 y fq(design,)f(we)e(can)f(use)h(a)g
(doubly-linked)e(list)i(to)f(maintain)g(these)h(tasks)g(such)g(that)g(the)f
(time)g(for)117 1495 y(each)d(DEQ)f(operation)f(is)h(only)g fk(O)q fi(\()p fq
(1)p fi(\))p fq(.)20 b(Our)13 b(system)g(may)g(still)g(not)f(be)h(as)h(good)e
(as)i(the)f(dedicated)117 1573 y(design)18 b(which)g(uses)g(a)g(doubly-linked)
e(list,)k(but)d(it)h(is)g(only)f(within)g(a)h(constant)g(factor)l(.)34 b(In)
18 b(the)117 1652 y(future,)f(we)g(may)f(even)h(provide)f(several)g(types)h
(of)f(data)g(structures)h(\(including)e(doubly-linked)117 1730 y(list\))g(and)
f(allow)h(programmers)e(to)i(choose)g(their)f(preferred)f(data)i(structures.)
25 b(From)13 b(the)i(above,)117 1808 y(we)e(can)f(conclude)h(that)f(our)f(gen\
eral)h(system)h(incurs)f(no)g(signi\256cant)g(performance)f(overhead)h(for)
117 1886 y fm(PDC-WK)p fq(.)56 1998 y(4.)24 b(For)13 b(the)h fm(PDC-RR)h fq
(scheduling)e(algorithm)g(in)g(Section)g(3.1.2.2,)j(researchers)e(in)f([34)o
(,)i(82)o(,)g(44)o(])f(all)117 2076 y(used)g(the)g(following)e(strategy:)19 b
(an)14 b(idle)f(processor)g(requests)h(a)g(task)f(from)g(another)f(processor)
i(in)117 2154 y(a)f(round-robin)d(fashion.)18 b(Section)12 b(4.1.1)h(showed)g
(that)f(our)f(system)i(can)g(judge)f(from)f(the)h(priority)117 2233 y(range)e
(information)d(that)j(a)f(pre-selected)g(processor)h(does)g(not)f(need)g(to)h
(report)e(the)h(status)h(of)g(its)f(GL)117 2311 y(to)k(its)f(destination)g
(processors,)h(unless)g(its)f(destination)g(processors)h(become)f(idle)g(and)
g(explicitly)117 2389 y(send)20 b(task)g(requests.)39 b(Thus,)22 b(the)d(algo\
rithm)g(based)g(on)g(our)g(model)g(will)g(perform)f(almost)h(as)117 2467 y
(ef)o(\256ciently)12 b(as)h(a)g(dedicated)f fm(PDC-RR)h fq(design.)69 2634 y
(The)k(above)g(shows)g(that)f(our)h(system,)h(based)f(on)g(a)g(uniform)e(sche\
duling)i(model,)h(can)e(ef)o(\256ciently)-4 2712 y(implement)f(the)i(above)g
(scheduling)g(algorithms.)31 b(In)16 b(the)h(past,)h(it)f(has)g(been)g(dif)n
(\256cult)g(for)f(any)g(single)908 2836 y(54)p eop
%%Page: 55 69
 bop 75 53 a fq(scheduling)15 b(system)h(to)f(ef)o(\256ciently)g(support)g
(the)g(scheduling)g(algorithms)g(for)f(both)h(parallel)g(BFS)g(and)75 132 y
(D&C.)9 b(For)f(example,)i(Manber)f(and)f(Finkel)g(in)h([34)o(])g(provided)e
(a)i(parallel)f(programming)f(system)j(for)d(both)75 210 y(problems;)j(howeve\
r)m(,)h(they)f(also)g(pointed)f(out)h(that)f(it)h(is)g(dif)n(\256cult)f(for)g
(them)h(to)f(use)h(a)g(uniform)e(framework)75 288 y(to)14 b(ef)n(\256ciently)
f(support)h(these)g(algorithms.)22 b(W)l(e)13 b(believe)h(that)g(our)f(system)
h(is)g(the)g(\256rst)f(system)h(that)g(can)75 366 y(do)e(so.)988 2836 y(55)p
eop
%%Page: 56 70
 bop 908 2836 a fq(56)p eop
%%Page: 57 71
 bop 75 490 a fn(Chapter)25 b(5)75 802 y(Selected)g(Theor)n(etical)g(T)-9 b
(opics)75 1113 y fq(In)20 b(order)g(to)h(develop)f(our)g(multilist)g(scheduli\
ng)g(system,)k(we)d(have)g(also)g(studied)f(two)h(theoretical)75 1191 y(topic\
s.)d(This)10 b(chapter)g(will)f(present)h(their)g(results.)17 b(First,)11 b
(Section)e(5.1)i(will)e(present)h(the)g(communication)75 1269 y(complexity)h
(for)h(parallel)f(divide-and-conquer)g(\(D&C\).)h(The)g(theoretical)g(results)
g(in)g(Section)g(5.1)g(were)75 1348 y(previously)h(published)g(in)g([105].)21
b(Second,)14 b(Section)f(5.2)h(will)f(propose)g(an)g(ef)o(\256cient)g(algorit\
hm)g(for)f(the)75 1426 y(parallel)18 b(range)g(selection)g(problem)f(that)h
(will)g(be)h(used)f(in)g(the)g(implementation)f(of)h(our)g(model)g(\(see)75
1504 y(Section)11 b(4.1.2.2\).)19 b(Since)11 b(the)h(two)f(topics)h(in)f(this)
h(chapter)f(have)g(no)h(strong)f(relation)g(to)g(each)h(other)f(or)g(to)75
1582 y(the)h(rest)h(of)f(this)g(thesis,)h(the)g(reader)f(can)g(skip)h(this)f
(chapter)g(without)g(loss)h(of)f(continuity)l(.)75 1882 y fr(5.1)71 b(Communi\
cation)19 b(Complexity)f(for)h(Parallel)f(D&C)75 2086 y fq(In)10 b(this)g(sec\
tion,)i(we)e(will)g(theoretically)g(study)g(the)g(relationship)g(between)g
(load)h(balancing)f(and)g(commu-)75 2164 y(nication)i(cost)h(for)f(performing)
e(D&C)j(computations)f(on)g(a)h(parallel)f(system.)19 b(As)13 b(described)f
(in)h(Section)75 2242 y(3.1.2,)f(D&C)f(is)g(a)g(common)f(computation)g(paradi\
gm,)g(in)h(which)f(the)h(solution)f(to)h(a)g(problem)e(is)i(obtained)75 2321 y
(by)i(solving)g(subproblems)g(recursively)l(.)21 b(Each)14 b(node)f(in)g(the)
g(tree)g(corresponds)g(to)g(a)g(problem)f(instance,)75 2399 y(and)g(children)
f(of)g(the)h(node)f(correspond)g(to)h(its)g(subproblems.)18 b(During)11 b(the)
g(computation,)h(each)g(internal)75 2477 y(\(non-leaf\))f(node)i(goes)g(throu\
gh)f(two)g(phases.)21 b(The)13 b(\256rst)g(phase)g(is)g(the)g fm(divide)f(pha\
se)i fq(during)e(which)g(the)75 2555 y(problem)d(instance)h(associated)g(with)
g(the)f(node)h(is)g(divided)f(into)g(subproblems.)18 b(The)10 b(second)g(phas\
e)g(is)g(the)75 2634 y fm(combine)k(phase)h fq(during)e(which)h(the)g(solutio\
n)g(of)g(the)g(problem)g(instance)g(associated)h(with)f(the)h(node)f(is)75
2712 y(derived)d(by)g(combining)g(solutions)g(of)g(the)g(subproblems)g(associ\
ated)h(with)f(the)g(node')m(s)h(children.)35 b(After)988 2836 y(57)p eop
%%Page: 58 72
 bop -4 53 a fq(its)14 b(creation)f(each)h(leaf)g(will)g(perform)e(some)i(com\
putation)f(and)h(return)f(the)h(results)g(to)g(its)g(parent.)23 b(At)13 b(a)
-4 132 y(given)d(time,)i(nodes)f(on)g(a)h(wavefront)e(that)h(cuts)g(across)h
(all)f(paths)h(from)e(the)h(root)f(to)h(leaves)h(can)f(be)h(active)-4 210 y
(in)k(performing)f(divide,)i(combine,)h(or)e(compute)h(operations.)30 b(Along)
16 b(each)h(path)g(the)f(wavefront)g(\256rst)-4 288 y(moves)c(down)g(from)f
(the)i(root)e(to)i(its)f(leaf)g(and)h(then)f(up)g(from)g(the)g(leaf)g(to)g
(the)g(root.)69 433 y(At)21 b(\256rst)g(glance,)k(one)d(might)e(think)i(that)
f(it)g(should)h(be)g(straightforward)d(to)j(perform)e(D&C)i(in)-4 512 y(paral\
lel,)13 b(because)g(nodes)h(on)f(the)g(wavefront)f(can)h(all)g(be)g(processed)
g(independently)l(.)21 b(However)m(,)14 b(if)f(one)-4 590 y(wants)d(to)g(achi\
eve)g(good)g(load)g(balancing)g(between)g(the)g(processors,)h(then)f(parallel\
izing)f(D&C)h(becomes)-4 668 y(nontrivial.)16 b(In)9 b(fact,)h(doing)f(ef)o
(\256cient)g(D&C)h(on)f(any)h(real)f(parallel)g(machine)g(has)h(been)g(a)g
(major)f(challenge)-4 746 y(to)j(researchers)g([33,)g(34,)h(82,)g(89])f(for)f
(many)h(years.)69 892 y(The)g(dif)o(\256culties)g(are)g(due)g(to)g(the)g(fact)
g(that)g(many)g(D&C)g(computations)g(are)g(highly)g(dynamic)g(in)g(the)-4 970
y(sense)18 b(that)f(these)h(computations)e(are)h(data-dependent.)33 b(During)
16 b(computation,)i(a)g(problem)e(instance)-4 1048 y(can)22 b(be)f(expanded)h
(into)g(any)f(number)g(of)h(subproblems)f(depending)h(on)f(the)h(data)g(that)
g(have)f(been)-4 1126 y(computed)14 b(so)i(far)l(.)27 b(In)14 b(fact,)i(the)f
(trees)g(of)g(many)g(D&C)g(computations)f(can)i(be)f(expected)g(to)g(be)g(spa\
rse)-4 1205 y(and)d(irregular)l(,)h(and)f(as)g(a)h(result,)f(load)g(balancing)
f(must)h(be)h(adaptive)e(to)h(the)g(tree)g(structure)f(and)h(must)g(be)-4 1283
y(done)i(dynamically)f(at)i(run)e(time.)24 b(This)15 b(implies)f(that)g(compu\
tation)g(loads)g(need)h(to)f(be)g(moved)g(around)-4 1361 y(between)g(processo\
rs)i(during)e(computation.)25 b(The)15 b(challenge)g(is)h(then)e(to)h(devise)
g(ef)o(\256cient)g(scheduling)-4 1439 y(algorithms)d(which)h(can)h(achieve)g
(good)f(load)g(balancing)g(while)g(minimizing)f(the)i(communication)e(cost)-4
1518 y(for)f(moving)h(computations)g(around.)69 1663 y(In)j(general)f(there)h
(is)h(a)f(tradeof)o(f)g(between)g(balancing)g(computation)f(loads)i(and)f(min\
imizing)f(com-)-4 1741 y(munication)f(costs.)27 b(The)15 b(results)g(of)f(thi\
s)h(section)g(quantify)f(this)g(tradeof)n(f.)26 b(In)14 b(particular)m(,)i
(this)e(section)-4 1819 y(establishes)j(lower)f(bounds)g(on)h(the)f(communica\
tion)f(cost)i(for)f(any)g(scheduling)h(algorithm)e(based)i(on)-4 1897 y(how)
12 b(well)g(it)g(performs)f(load)i(balancing.)-4 2150 y fd(5.1.1)57 b(Summary)
16 b(of)f(Results)-4 2332 y fo(5.1.1.1)50 b(De\256nitions)11 b(and)h(Notation)
-4 2513 y fq(The)g(tree)h(of)e(a)i(D&C)f(computation)g(is)h(called)f(a)h fi
(\()p fk(N)r(;)8 b(h;)g(d)p fi(\))p fm(-tr)n(ee)p fq(,)13 b(if)68 2712 y fl
(\017)24 b fk(N)18 b fq(is)13 b(the)f(number)g(of)g(nodes)g(in)h(the)f(tree,)
908 2836 y(58)p eop
%%Page: 59 73
 bop 148 53 a fl(\017)24 b fk(h)12 b fq(is)h(the)f(height)g(of)g(the)h(tree,)
f(and)148 179 y fl(\017)24 b fk(d)13 b fq(is)h(the)e(maximal)h(number)f(of)g
(children)h(of)f(a)h(node.)20 b(\(W)l(e)13 b(assume)h(that)e fk(d)i fq(is)f
(at)g(least)g(2,)h(to)e(allow)197 257 y(parallel)g(processing)g(of)g(the)h
(tree.\))75 449 y(A)i(node)f(is)h(said)g(to)g(be)g(at)f(tree)h(level)f fk(i)h
fq(if)f(it)h(is)g(the)f fk(i)p fq(-th)g(node)h(on)f(the)h(path)f(from)g(the)h
(root)f(to)g(the)h(node.)75 527 y(Therefore,)d(the)h(root)e(is)i(at)f(level)h
(1,)f(and)h(the)f(height)g(of)g(the)g(tree)h(is)f(the)h(maximal)e(level)i(num\
ber)l(.)148 672 y(For)f(the)g(parallel)g(system)h(which)f(will)g(carry)g(out)
g(the)g(D&C)h(computation,)f(we)g(assume)h(that)148 864 y fl(\017)24 b fk(p)
13 b fq(is)g(the)f(number)g(of)f(processors)i(in)f(the)h(system,)g(and)148 989
y fl(\017)24 b fq(it)8 b(takes)i(one)e(time)h(step)g(for)f(a)h(processor)f
(to)h fm(expand)f fq(a)h(node,)h(i.e.,)h(to)e(perform)e(the)i(divide)f(operat\
ion)197 1068 y(for)j(an)h(internal)f(node,)h(or)f(to)h(perform)e(the)i(comput\
e)f(operation)g(for)g(a)h(leaf)f(node.)18 b(For)11 b(simplicity)m(,)197 1146 y
(we)h(assume)i(that)e(a)g(processor)h(takes)f(no)h(time)f(to)g(perform)f(a)h
(combine)g(operation.)148 1337 y(When)j(a)h(node)f(is)g(expanded,)h(zero)f
(or)g(more)g(children)f(may)h(be)g fm(generated)p fq(.)27 b(More)15 b(precise\
ly)m(,)h(if)f(a)75 1416 y(node)e(does)g(not)g(generate)f(any)h(children,)g
(the)g(node)g(is)g(a)g(leaf;)g(if)f(a)h(node)g(generates)g(one)g(or)g(more)f
(\(up)g(to)75 1494 y fk(d)p fq(\))h(children,)f(the)h(node)g(is)g(an)g(intern\
al)f(node.)19 b(Each)14 b(newly)e(generated)h(node)f(will)h(in)f(turn)g(be)h
(expanded)75 1572 y(by)h(some)h(processor)f(in)h(the)f(future.)24 b(A)14 b fm
(fr)o(ontier)g(node)h fq(is)f(a)h(node)f(which)h(has)g(been)f(generated)g(but)
h(has)75 1650 y(not)d(been)h(expanded.)148 1796 y(A)i fm(scheduling)h(algorit\
hm)e fq(for)h(a)g(D&C)h(computation)e(schedules)i(nodes)f(\(i.e.,)i(frontier)
d(nodes\))h(on)75 1874 y(processors)f(for)e(expansion.)44 b(W)l(e)13 b(assume)
i(that)e(scheduling)g(algorithms)g(cannot)g(\252lookahead\272.)43 b(This)75
1952 y(non-lookahead)13 b(assumption)h(is)g(reasonable)g(when)g(dealing)g(wit\
h)g(irregular)e(D&C)i(trees.)24 b(In)13 b(this)h(type)75 2030 y(of)h(tree,)h
(the)g(number)f(of)g(children)f(a)i(parent)f(may)h(have)f(\(if)g(any\))g(is)h
(typically)e(data-dependent)h(and)h(is)75 2109 y(therefore)11 b(not)h(known)g
fm(a)h(priori)p fq(.)148 2254 y(The)f fm(parallel)f(computation)f(cost)i fk
(T)787 2261 y fg(A)817 2254 y fi(\()p fk(H)t fi(\))f fq(of)g(a)g(scheduling)g
(algorithm)f fl(A)h fq(for)f(a)i(D&C)f(computation)75 2332 y(tree)g fk(H)k fq
(is)c(the)g(maximum)f(number)h(of)f(the)h(nodes)g(that)g(any)g(processor)g
(may)g(expand.)18 b(Since)10 b(there)h(are)g fk(N)75 2410 y fq(nodes)i(and)g
fk(p)g fq(processors,)g(a)g(lower)f(bound)h(on)f fk(T)951 2417 y fg(A)981 2410
y fi(\()p fk(H)t fi(\))h fq(is)g fk(T)1151 2417 y fh(min)1232 2410 y fi(=)h fl
(d)p fk(N)q(=p)p fl(e)p fq(.)21 b(The)13 b(parallel)f(computation)75 2488 y
(cost)h fk(T)197 2495 y fg(A)239 2488 y fq(of)f(algorithm)f fl(A)h fq(is)h
(de\256ned)f(as)h(the)f(maximum)g fk(T)1127 2495 y fg(A)1157 2488 y fi(\()p fk
(H)t fi(\))g fq(for)g(all)g fi(\()p fk(N)s(;)c(h;)g(d)p fi(\))p fq(-trees)k fk
(H)t fq(.)148 2634 y(The)h fm(communication)f(cost)h fk(C)686 2641 y fg(A)716
2634 y fi(\()p fk(H)t fi(\))g fq(of)f(a)h(scheduling)g(algorithm)e fl(A)h fq
(for)g(a)h(D&C)g(computation)e(tree)75 2712 y fk(H)23 b fq(is)d(the)f(total)g
(number)f(of)h(cross)g(nodes.)39 b(A)19 b fm(cr)o(oss)h(node)f fq(is)g(a)h
(node)f(which)g(is)g(generated)g(by)g(one)988 2836 y(59)p eop
%%Page: 60 74
 bop -4 53 a fq(processor)13 b(but)f(expanded)h(by)g(another)g(processor)m
(.)20 b(Note)13 b(that)g(the)g(processor)g(expanding)g(a)g(cross)h(node)-4 132
y(needs)j(to)g(receive)h(information)d(from)i(the)g(processor)g(generating)g
(the)g(node.)33 b(Therefore,)19 b fk(C)1708 139 y fg(A)1738 132 y fi(\()p fk
(H)t fi(\))e fq(is)-4 210 y(a)e(reasonable)h(measure)f(for)g(capturing)f(the)
i(interprocessor)f(communication)f(cost)i(in)f(performing)f(the)-4 288 y(divi\
de)f(phase)h(of)g(all)f(the)h(internal)f(nodes.)23 b(\(A)13 b(similar)g(de\
\256nition)g(of)h(communication)e(cost)i(is)h(used)f(by)-4 366 y(Papadimitrio\
u)d(and)i(Ullman)g(in)g([74)o(].\))20 b(The)13 b(communication)g(cost)g fk
(C)1265 373 y fg(A)1308 366 y fq(of)g(algorithm)f fl(A)h fq(is)g(de\256ned)g
(as)-4 445 y(the)f(maximum)f fk(C)318 452 y fg(A)349 445 y fi(\()p fk(H)t fi
(\))h fq(for)g(all)g fi(\()p fk(N)r(;)c(h;)g(d)p fi(\))p fq(-trees)13 b fk
(H)t fq(.)-4 670 y fo(5.1.1.2)50 b(Main)12 b(Results)117 944 y(Theorem)h(5.1)
24 b fm(For)13 b(each)f(scheduling)g(algorithm)g fl(A)g fm(for)g(a)h(parallel)
e(system)i(of)f fk(p)h fm(pr)n(oces-)117 1022 y(sors,)i(for)f(each)f(integer)
h fk(p)584 1004 y fg(0)596 1022 y fm(,)g fq(0)g fk(<)h(p)738 1004 y fg(0)765
1022 y fl(\024)g fk(p)p fm(,)g(and)e(for)g(each)g fk(N)6 b fm(,)13 b fk(h)p fm
(,)h(and)f fk(d)h fm(with)f(the)g(following)117 1101 y(two)g(r)n(estrictions,)
117 1205 y fo(S1.)25 b fk(N)19 b(>)14 b fq(3)p fk(pd)391 1187 y fj(2)410 1205
y fk(h)p fm(,)f(and)117 1307 y fo(S2.)25 b fk(h)14 b(>)g fl(d)p fq(log)386
1320 y fh(d)415 1307 y fk(N)5 b fl(e)11 b fi(+)g fl(d)p fq(log)627 1320 y fh
(d)656 1307 y fk(pdh)p fl(e)h fi(+)f fq(1)p fm(,)117 1411 y(ther)o(e)20 b(exi\
sts)h(some)g fi(\()p fk(N)r(;)8 b(h;)g(d)p fi(\))p fm(-tr)n(ee)21 b fk(H)j fm
(for)c(which)h(at)f(least)g(one)g(of)g(the)g(following)g(two)117 1489 y(pr)o
(operties)13 b(is)g(true:)117 1593 y fo(Q1.)25 b fm(the)12 b(parallel)g(compu\
tation)g(cost)h(of)f(the)g(algorithm)g(is)h fk(T)1224 1600 y fg(A)1254 1593 y
fi(\()p fk(H)t fi(\))h fl(\025)f fk(N)1447 1575 y fg(0)1458 1593 y fk(=p)1506
1575 y fg(0)1519 1593 y fm(;)117 1695 y fo(Q2.)25 b fm(the)12 b(communication)
g(cost)h(of)f(the)g(algorithm)g(is)h fk(C)1118 1702 y fg(A)1148 1695 y fi(\()
p fk(H)t fi(\))h fl(\025)g fk(C)1335 1677 y fg(0)1347 1695 y fm(,)117 1800 y
(wher)o(e)k fk(N)299 1782 y fg(0)331 1800 y fi(=)j fk(N)e fl(\000)13 b fq(3)p
fk(pd)574 1782 y fj(2)594 1800 y fk(h)p fm(,)19 b fk(C)691 1782 y fg(0)724
1800 y fi(=)h fk(p)806 1782 y fg(0)818 1800 y fk(\024)p fm(,)f fk(\024)i fi
(=)g(\()p fk(d)14 b fl(\000)f fq(1)p fi(\))p fk(h)1167 1782 y fg(0)1179 1800 y
fm(,)19 b(and)e fk(h)1330 1782 y fg(0)1362 1800 y fi(=)k fk(h)14 b fl(\000)f
(d)p fq(log)1601 1812 y fh(d)1630 1800 y fk(N)5 b fl(e)14 b(\000)117 1878 y
(d)p fq(log)203 1891 y fh(d)232 1878 y fk(pdh)p fl(e)e(\000)f fq(1)p fm(.)69
2086 y fq(Many)g(D&C)g(computations)f(are)h(expected)g(to)f(satisfy)h(restric\
tions)g(S1)f(and)h(S2.)18 b(Since)10 b fk(N)16 b fq(is)c(usually)-4 2164 y
(an)k(exponential)h(function)e(of)i fk(h)p fq(,)h(restriction)e(S1)g(is)h(eas\
ily)g(satis\256ed)g(in)g(these)g(cases.)32 b(Restriction)17 b(S2)-4 2242 y
(roughly)10 b(requires)h(that)h fk(N)19 b(<)13 b(d)555 2224 y fh(h)p fg(\000)
p fj(2)622 2242 y fk(=ph)p fq(.)19 b(If)11 b(a)h(tree)f(is)h(perfectly)f(bala\
nced)h(and)f(each)h(node)g(has)g(exactly)f fk(d)-4 2321 y fq(children,)e(then)
h fk(N)15 b fq(would)9 b(be)h fi(\002\()p fk(d)604 2303 y fh(h)p fg(\000)p fj
(1)670 2321 y fi(\))g fq(instead.)17 b(A)10 b(perfectly)f(balanced)g(tree)h
(is)g(easy)g(for)e(load)i(balancing)-4 2399 y(because)17 b(the)f(subtrees)h
(of)f(each)g(node)h(have)f(the)g(same)h(computation)f(load.)30 b(Restrictions)
16 b(S1)h(and)f(S2)-4 2477 y(basically)c(capture)h(those)f(interesting)g(D&C)
h(computations)f(with)g(irregular)f(trees.)20 b(This)13 b(class)g(of)g(D&C)-4
2555 y(computations)g(are)g(exactly)h(those)g(for)f(which)h(one)f(\256nds)h
(it)g(dif)n(\256cult)f(to)h(achieve)g(good)f(load)h(balancing)-4 2634 y(witho\
ut)e(paying)g(much)g(in)h(communication)f(overheads.)19 b(The)13 b(lower)f
(bound)h(on)f fk(C)1491 2641 y fg(A)1522 2634 y fi(\()p fk(H)t fi(\))p fq(,)h
(stated)g(in)g(Q2)-4 2712 y(of)e(the)i(theorem,)f(provides)g(an)g(explanation)
g(of)g(why)g(this)h(must)f(be)h(the)f(case.)908 2836 y(60)p eop
%%Page: 61 75
 bop 148 53 a fq(The)10 b(two)f(properties)g(Q1)g(and)h(Q2)f(in)g(Theorem)h
(5.1)f(can)h(be)f(expressed)h(in)g(terms)f(of)g(the)g(quantities)g fk(N)d fq
(,)75 132 y fk(h)p fq(,)12 b fk(d)f fq(\(associated)g(with)g(the)f(D&C)h(tree\
\))f(and)h fk(p)h fq(\(associated)f(with)f(the)h(parallel)f(system\))h(as)h
(follows.)17 b(One)75 210 y(can)8 b(check)g(that)f fk(N)403 192 y fg(0)428 210
y fl(\025)14 b fi(\()p fq(1)p fl(\000)q fk(\017)585 217 y fh(N)618 210 y fi
(\))p fk(N)f fq(and)8 b fk(h)797 192 y fg(0)822 210 y fl(\025)14 b fi(\()p fq
(1)p fl(\000)q fk(\017)979 217 y fh(h)1001 210 y fi(\))p fk(h)8 b fq(for)f
(each)h(positive)f fk(\017)1406 217 y fh(N)1453 210 y fl(\024)14 b fq(1)8 b
(and)f fk(\017)1638 217 y fh(h)1674 210 y fl(\024)14 b fq(1,)9 b(provided)75
288 y(that)15 b fk(h)j fl(\025)273 264 y fj(2)5 b(log)338 273 y fe(d)361 264 y
fh(ph)p fc(+)p fj(log)469 273 y fe(d)493 264 y fj(3)p fc(+)p fj(6)p fg(\000)p
fj(log)624 273 y fe(d)648 264 y fh(\017)662 270 y fe(N)273 277 y 419 2 v 465
305 a fh(\017)479 311 y fe(h)711 288 y fq(and)804 269 y fh(d)822 256 y fe(\
\017)835 265 y(h)855 256 y(h)804 277 y 72 2 v 28 x fh(pd)840 296 y fb(4)854
305 y fh(h)898 288 y fl(\025)18 b fk(N)23 b fl(\025)1078 267 y fj(3)p fh(pd)
1131 255 y fb(2)1145 267 y fh(h)1078 277 y 88 2 v 1100 305 a(\017)1114 311 y
fe(N)1171 288 y fq(.)k(\(Note:)c(if)15 b fk(h)j fl(\025)1514 264 y fj(2)6 b
(log)1579 273 y fe(d)1603 264 y fh(ph)p fc(+)p fj(log)1711 273 y fe(d)1735 264
y fj(3)p fc(+)p fj(6)p fg(\000)p fj(log)1865 273 y fe(d)1889 264 y fh(\017)
1903 270 y fe(N)1514 277 y 419 2 v 1706 305 a fh(\017)1720 311 y fe(h)1938 288
y fq(,)75 366 y(then)174 347 y fh(d)192 334 y fe(\017)205 343 y(h)225 334 y
(h)174 355 y 72 2 v 29 x fh(pd)210 374 y fb(4)225 384 y fh(h)264 366 y fl(\
\025)322 345 y fj(3)p fh(pd)375 333 y fb(2)389 345 y fh(h)322 355 y 88 2 v 344
384 a(\017)358 390 y fe(N)414 366 y fq(;)j(if)481 347 y fh(d)499 334 y fe(\
\017)512 343 y(h)532 334 y(h)481 355 y 72 2 v 29 x fh(pd)517 374 y fb(4)531
384 y fh(h)571 366 y fl(\025)14 b fk(N)5 b fq(,)k(then)f fk(\017)803 373 y fh
(h)825 366 y fk(h)14 b fl(\025)g fq(log)983 379 y fh(d)1012 366 y fk(N)6 b fi
(+)q fq(log)1160 379 y fh(d)1188 366 y fk(pdh)r fi(+)q fq(3)14 b fl(\025)g
(d)p fq(log)1484 379 y fh(d)1512 366 y fk(N)5 b fl(e)r fi(+)q fl(d)p fq(log)
1705 379 y fh(d)1733 366 y fk(pdh)p fl(e)r fi(+)q fq(1)14 b fi(=)75 445 y fk
(h)f fl(\000)f fk(h)195 427 y fg(0)207 445 y fq(,)17 b(i.e.,)h fk(h)354 427 y
fg(0)383 445 y fl(\025)g fi(\()p fq(1)13 b fl(\000)f fk(\017)568 452 y fh(h)
591 445 y fi(\))p fk(h)p fq(;)17 b(if)e fk(N)23 b fl(\025)839 423 y fj(3)p fh
(pd)892 412 y fb(2)906 423 y fh(h)839 433 y 88 2 v 861 462 a(\017)875 468 y fe
(N)931 445 y fq(,)17 b(then)e fk(N)1105 427 y fg(0)1135 445 y fl(\025)j fi
(\()p fq(1)13 b fl(\000)f fk(\017)1320 452 y fh(N)1354 445 y fi(\))p fk(N)5 b
fq(.\))54 b(From)15 b(this)g(and)h(the)f(fact)75 523 y(that)g fk(N)209 505 y
fg(0)238 523 y fk(<)j(N)i fq(and)15 b fk(h)468 505 y fg(0)497 523 y fk(<)j
(h)p fq(,)e(we)f(note)g(that)g fk(N)917 505 y fg(0)944 523 y fq(and)g fk(h)
1059 505 y fg(0)1086 523 y fq(approach)f fk(N)21 b fq(and)15 b fk(h)g fq(resp\
ectively)l(,)h(when)f(both)75 601 y fk(\017)95 608 y fh(N)142 601 y fq(and)f
fk(\017)248 608 y fh(h)284 601 y fq(approach)g(0.)23 b(Therefore,)14 b(Q1)g
(and)g(Q2)f(in)h(Theorem)g(5.1)g(become)g fk(T)1520 608 y fg(A)1550 601 y fi
(\()p fk(H)t fi(\))i(=)g(\012\()p fk(N)q(=p)p fi(\))f fq(and)75 679 y fk(C)
110 686 y fg(A)140 679 y fi(\()p fk(H)t fi(\))h(=)g(\012\()p fk(pdh)p fi(\))e
fq(for)f(lar)o(ge)h fk(h)p fq(,)g(when)g fk(p)841 661 y fg(0)867 679 y fq(is)
g(close)g(to)f fk(p)p fq(.)23 b(Furthermore,)12 b(we)i(can)g(slightly)f(chang\
e)h(the)75 758 y(theorem)e(as)h(Corollary)e(5.2.)197 1055 y fo(Cor)o(ollary)h
(5.2)25 b fm(For)8 b(each)h(scheduling)f(algorithm)f(for)h(a)g(parallel)g(sys\
tem)h(of)f fk(p)h fm(pr)n(ocessors,)197 1134 y(for)15 b(each)g(positive)f fk
(\017)568 1141 y fh(C)615 1134 y fk(<)j fq(1)p fm(,)e(which)g(can)g(be)f(arbi\
trarily)h(close)h(to)e(0,)i(ther)n(e)f(ar)n(e)g(values)g(of)197 1212 y fk(N)5
b fm(,)15 b fk(h)p fm(,)h fk(d)p fm(,)f fk(p)p fm(,)h(and)e fk(\017)537 1219 y
fh(T)564 1212 y fi(\()p fk(>)j fq(0)p fi(\))p fm(,)e(for)f(which)g(if)g(the)h
(parallel)f(computation)f(cost)h(is)h(between)1792 1192 y fh(N)1792 1200 y 32
2 v 1798 1229 a(p)197 1290 y fm(and)f fi(\()p fq(1)e fi(+)g fk(\017)412 1297 y
fh(T)439 1290 y fi(\))463 1270 y fh(N)463 1278 y 32 2 v 470 1307 a(p)500 1290
y fm(,)j(then)f(the)g(communication)f(cost)i(must)f(be)g(at)g(least)h fi(\()p
fq(1)d fl(\000)f fk(\017)1575 1297 y fh(C)1605 1290 y fi(\))p fk(C)1659 1297 y
fh(u)1681 1290 y fm(,)k(wher)o(e)197 1368 y fk(C)232 1375 y fh(u)268 1368 y fi
(=)f fk(pdh)p fm(.)197 1555 y fo(Proof.)41 b fq(Let)20 b fk(p)25 b fl(\025)
584 1536 y fj(3)573 1544 y 41 2 v 29 x fh(\017)587 1579 y fe(C)638 1555 y fq
(and)20 b fk(d)25 b fl(\025)860 1536 y fj(3)848 1544 y 41 2 v 29 x fh(\017)
862 1579 y fe(C)893 1555 y fq(.)42 b(Then,)23 b(let)d fk(\017)1174 1562 y fh
(T)1225 1555 y fi(=)1302 1536 y fj(1)1293 1544 y 35 2 v 29 x(2)p fh(p)1332
1555 y fq(.)42 b(And,)22 b(let)e fk(N)26 b fq(and)20 b fk(h)g fq(be)197 1634 y
(in)e(the)h(range)f(as)h(shown)g(above)f(with)g fk(\017)936 1641 y fh(h)981
1634 y fi(=)1046 1613 y fh(\017)1060 1619 y fe(C)1046 1622 y 41 2 v 1058 1651
a fj(3)1110 1634 y fq(and)g fk(\017)1220 1641 y fh(N)1276 1634 y fi(=)1350
1614 y fj(1)1341 1622 y 35 2 v 29 x(2)p fh(p)1380 1634 y fq(.)37 b(One)19 b
(can)g(check)f(that)197 1712 y fi(\()p fq(1)12 b fi(+)h fk(\017)324 1719 y fh
(T)351 1712 y fi(\))375 1692 y fh(N)375 1700 y 32 2 v 382 1729 a(p)428 1712 y
fl(\024)489 1689 y fc(\()p fj(1)p fc(+)p fh(\017)561 1695 y fe(T)586 1689 y fc
(\))p fh(N)631 1677 y ff(0)489 1700 y 153 2 v 500 1729 a fh(p)p fc(\()p fj
(1)p fg(\000)p fh(\017)590 1735 y fe(N)618 1729 y fc(\))664 1712 y fi(=)724
1689 y fh(N)756 1677 y ff(0)767 1689 y fc(\()p fj(2)p fh(p)p fc(+)p fj(1)p fc
(\))724 1700 y 149 2 v 737 1729 a fh(p)p fc(\()p fj(2)p fh(p)p fg(\000)p fj
(1)p fc(\))895 1712 y fk(<)965 1692 y fh(N)996 1681 y ff(0)955 1700 y 62 2 v
29 x fh(p)p fg(\000)p fj(1)1037 1712 y fq(and)i fk(p)1148 1694 y fg(0)1160
1712 y fi(\()p fk(d)e fl(\000)f fq(1)p fi(\))p fk(h)1340 1694 y fg(0)1368 1712
y fl(\025)17 b fi(\()p fq(1)c fl(\000)1537 1692 y fj(1)1537 1700 y 18 2 v 29 x
fh(p)1560 1712 y fi(\)\()p fq(1)f fl(\000)1692 1692 y fj(1)1691 1700 y 19 2 v
29 x fh(d)1714 1712 y fi(\)\()p fq(1)g fl(\000)197 1790 y fk(\017)217 1797 y
fh(h)239 1790 y fi(\))p fk(C)293 1797 y fh(u)329 1790 y fl(\025)i fi(\()p fq
(1)r fl(\000)474 1770 y fh(\017)488 1776 y fe(C)474 1778 y 41 2 v 486 1807 a
fj(3)519 1790 y fi(\))538 1772 y fj(3)557 1790 y fk(C)592 1797 y fh(u)628 1790
y fk(>)g fi(\()p fq(1)r fl(\000)r fk(\017)787 1797 y fh(C)816 1790 y fi(\))p
fk(C)870 1797 y fh(u)901 1790 y fq(when)8 b fk(p)1041 1772 y fg(0)1067 1790 y
fi(=)14 b fk(p)s fl(\000)r fq(1.)j(Thus,)10 b(if)1406 1770 y fh(N)1406 1778 y
32 2 v 1413 1807 a(p)1456 1790 y fl(\024)k fk(T)1538 1797 y fg(A)1582 1790 y
fl(\024)f fi(\()p fq(1)r fi(+)r fk(\017)1740 1797 y fh(T)1768 1790 y fi(\))
1792 1770 y fh(N)1792 1778 y 32 2 v 1798 1807 a(p)197 1868 y fq(\()p fk(<)280
1849 y fh(N)311 1837 y ff(0)270 1857 y 62 2 v 29 x fh(p)p fg(\000)p fj(1)337
1868 y fq(\),)g(the)f(communication)f(cost)i(must)f(be)h(at)f(least)h fi(\()p
fq(1)e fl(\000)g fk(\017)1313 1875 y fh(C)1342 1868 y fi(\))p fk(C)1396 1875 y
fh(u)1418 1868 y fq(.)1449 1832 y 29 2 v 49 x 2 49 v 26 w 2 49 v 1449 1883 a
29 2 v 148 2055 a(Theorem)18 b(5.1)h(also)g(implies)f(an)g(important)f(tradeo\
f)o(f)h(result:)29 b(if)18 b(a)g(scheduling)h(algorithm)e(wants)75 2134 y(to)
j(achieve)h(a)f(good)g(load)g(balancing)g(by)g(parallel)g(processing,)j(then)
d(it)g(must)g(pay)g(a)g(high)g(price)g(in)75 2212 y(communication)11 b(cost.)
19 b(W)l(e)13 b(can)f(express)h(the)g(tradeof)n(f)f(between)g fk(T)1279 2219 y
fg(A)1322 2212 y fq(and)g fk(C)1441 2219 y fg(A)1484 2212 y fq(explicitly)f
(by)i(showing)f(a)75 2290 y(lower)d(bound)g(on)h(their)f(product:)15 b fk(T)
704 2297 y fg(A)739 2290 y fl(\001)5 b fi(\()p fk(C)812 2297 y fg(A)847 2290 y
fi(+)g fk(\024)p fi(\))p fq(.)17 b(If)9 b fi(\()p fk(p)1052 2272 y fg(\003)
1077 2290 y fl(\000)t fq(1)p fi(\))p fk(\024)14 b fl(\024)g fk(C)1294 2297 y
fg(A)1338 2290 y fk(<)g(p)1414 2272 y fg(\003)1434 2290 y fk(\024)p fq(,)d
(where)e(0)14 b fk(<)f(p)1730 2272 y fg(\003)1764 2290 y fl(\024)h fk(p)p fq
(,)d(then)75 2368 y(by)f(Theorem)g(5.1,)i fk(T)440 2375 y fg(A)480 2368 y fq
(must)e(be)h(at)f(least)h fk(N)837 2350 y fg(0)848 2368 y fk(=p)896 2350 y fg
(\003)917 2368 y fq(.)18 b(Therefore,)10 b fk(T)1195 2375 y fg(A)1232 2368 y
fl(\001)c fi(\()p fk(C)1306 2375 y fg(A)1342 2368 y fi(+)h fk(\024)p fi(\))14
b fl(\025)f fi(\()p fk(N)1563 2350 y fg(0)1575 2368 y fk(=p)1623 2350 y fg
(\003)1644 2368 y fi(\))6 b fl(\001)g fk(p)1713 2350 y fg(\003)1733 2368 y fk
(\024)14 b fi(=)g fk(N)1871 2350 y fg(0)1889 2368 y fl(\001)6 b fk(\024)p fq
(.)75 2447 y(Note)15 b(that)g(because)h(of)f fk(T)536 2454 y fg(A)584 2447 y
fl(\025)j fk(N)q(=p)h fl(\025)e fk(N)848 2429 y fg(0)860 2447 y fk(=p)f fq
(this)g(tradeof)n(f)f(is)g(also)h(satis\256ed)g(when)f fk(C)1665 2454 y fg
(A)1713 2447 y fl(\025)j fk(p\024)p fq(.)27 b(This)75 2525 y(tradeof)n(f)12 b
(result)g(is)h(summarized)f(in)g(Corollary)g(5.3)g(below)m(.)988 2836 y(61)p
eop
%%Page: 62 76
 bop 117 53 a fo(Corollary)12 b(5.3)24 b fm(For)c(any)e(scheduling)h(algorith\
m)f fl(A)h fm(for)f(a)h(parallel)f(system)i(of)e fk(p)i fm(pr)n(o-)117 132 y
(cessors,)i(for)c(all)g fk(N)5 b fm(,)20 b fk(h)p fm(,)h(and)c fk(d)i fm(with)
f(r)n(estrictions)h(S1)f(and)g(S2)g(as)g(de\256ned)g(in)g(Theor)n(em)117 210 y
(5.1,)690 328 y fk(T)719 335 y fg(A)760 328 y fl(\001)11 b fi(\()p fk(C)839
335 y fg(A)880 328 y fi(+)g fk(\024)p fi(\))j fl(\025)g fk(N)1087 307 y fg
(0)1109 328 y fl(\001)d fk(\024;)117 479 y fm(wher)o(e)i fk(N)294 461 y fg
(0)318 479 y fm(and)f fk(\024)h fm(ar)n(e)g(de\256ned)f(in)g(Theor)o(em)g(5.1\
.)117 969 y fo(Theorem)h(5.4)24 b fm(A)14 b(scheduling)f(algorithm)g fl(A)g fm
(can)h(be)f(devised)h(to)f(have)h(the)f(pr)n(operty)h(that)117 1048 y(the)g
(parallel)g(computation)e(cost)i(is)g fk(T)796 1055 y fg(A)842 1048 y fi(=)h
fk(T)924 1055 y fh(min)1004 1048 y fm(and)f(the)f(communication)g(cost)h(is)g
fk(C)1664 1055 y fg(A)1710 1048 y fl(\024)117 1126 y fk(C)152 1133 y fh(u)175
1126 y fi(\(=)g fk(pdh)p fi(\))f fm(for)f(any)h fi(\()p fk(N)r(;)8 b(h;)g(d)p
fi(\))p fm(-tr)n(ee.)69 1404 y fq(The)19 b(algorithm)e(satisfying)i(Theorem)f
(5.4)h(has)h(the)e(minimum)g(parallel)g(computation)g(cost.)37 b(By)-4 1483 y
(Corollary)19 b(5.2,)24 b(the)c(algorithm)g(is)h(optimal)f(with)g(respect)h
(to)g(the)f(communication)g(cost,)j(since)f(the)-4 1561 y(parallel)15 b(compu\
tation)g(cost)h(of)f(the)h(algorithm)f(is)h(near)g(optimal.)28 b(These)17 b
(results)f(also)g(imply)f(that)h(the)-4 1639 y(lower)10 b(bound)g(on)h fk(T)
345 1646 y fg(A)382 1639 y fl(\001)c fi(\()p fk(C)457 1646 y fg(A)495 1639 y
fi(+)g fk(\024)p fi(\))k fq(in)g(Corollary)e(5.3)i(is)g(tight)g(when)f(both)h
fk(\017)1307 1646 y fh(N)1351 1639 y fq(and)g fk(\017)1454 1646 y fh(h)1486
1639 y fq(are)g(arbitrarily)e(close)-4 1717 y(to)j(0.)69 1862 y(Note)f(that)g
(Theorems)h(5.1)f(and)h(5.4)g(are)f(so)g(formulated)g(that)g(their)f(results)
i(are)f fm(system-independent)p fq(.)-4 1941 y(That)16 b(is,)i(the)e(results)
h(are)f(independent)g(from)f(the)h(interconnection)f(topology)h(of)g(the)g
(processors)h(and)-4 2019 y(various)f(control)f(overheads)h(such)h(as)g(data)
f(structure)g(maintenance)g(and)g(reading/writing)f(messages.)-4 2097 y(There\
fore,)20 b(our)f(upper)f(and)h(lower)g(bounds)g(on)g fk(C)934 2104 y fg(A)983
2097 y fq(are)g(intrinsic)f(to)h(any)g(parallel)g(system.)39 b(These)-4 2175 y
(bounds)11 b(give)g(insights)h(into)f(actual)g(communication)g(cost)g(in)h
(a)f(real)g(implementation,)g(but)g(exactly)h(how)-4 2254 y(they)j(are)g(rela\
ted)f(to)h(the)g(actual)h(cost)f(is)h(a)f(separate)g(matter)g(depending)g(on)
g(the)g(implementation.)25 b(W)l(e)-4 2332 y(have)9 b(investigated)h(this)f
(actual)h(cost)g(by)g(implementing)e(the)i(algorithm)e(on)i(a)f(variety)g(of)
h(interconnection)-4 2410 y(networks)i(in)g([104)o(].)69 2555 y(Section)i(5.1\
.2)h(describes)f(the)h(algorithm)e(of)h(Theorem)g(5.4.)25 b(Section)14 b(5.1.\
3)h(presents)g(a)f(simpli\256ed)-4 2634 y(version)e(of)g(Theorem)g(5.1)h(and)
f(its)h(proof)e(to)i(help)f(the)h(reading)e(of)i(Theorem)f(5.1.)19 b(A)12 b
(complete)h(proof)e(of)-4 2712 y(Theorem)h(5.1)g(is)h(given)f(in)h(Section)e
(5.1.4.)908 2836 y(62)p eop
%%Page: 63 77
 bop 75 53 a fo(5.1.1.3)51 b(Relation)11 b(to)h(Past)h(W)m(ork)75 253 y fq
(There)h(have)g(been)g(several)g(approaches)g(in)g(performing)e(parallel)h
(D&C.)i(A)f(simple)f(approach)h(\(e.g.,)h(in)75 331 y([7)o(]\))f(is)h(to)f
(expand)g(all)g(the)h(nodes)f(above)h(a)f(\256xed)g(level)h(on)f(one)g(proces\
sor)h(and)f(then)g(distribute)g(nodes)75 410 y(at)f(this)h(level)f(to)h(other)
f(processors.)22 b(Load)13 b(balancing)h(would)f(be)g(done)h(poorly)e(in)h
(this)h(approach)f(when)75 488 y(the)h(tree)f(is)i(irregular)-5 b(.)23 b(Anot\
her)13 b(approach)h([89)o(])g(is)g(to)g(distribute)f(generated)g(nodes,)i(and)
f(to)g(have)g(each)75 566 y(processor)8 b(perform)f(load)i(balancing)f(based)
h(on)f(load)h(status)g(information)e(from)g(its)i(neighbor)e(processors.)75
644 y(For)12 b(this)g(scheme,)h(the)g(communication)e(cost)i(can)f(be)h(very)
f(high)g(in)g(the)g(worst)h(case.)148 790 y(Recently)m(,)24 b(some)e(research\
ers)g(have)g(made)f(ef)o(forts)g(to)g(reduce)h(communication)e(overhead.)46 b
(A)75 868 y(popular)13 b(approach)g([34)o(,)i(82)o(,)g(108)o(])f(is)f(based)i
(on)e(the)h(\252donate-highest-subtree\272)e(strategy)m(,)i(in)g(which)f(an)
75 946 y(idle)18 b(processor)g(will)g(be)g(given)g(frontier)e(nodes)j(as)f
(near)g(to)g(the)g(root)f(as)i(possible.)36 b(Since)18 b(a)g(subtree)75 1024 y
(rooted)c(near)g(the)h(top)f(usually)h(has)g(many)g(nodes)g(and)f(these)h(nod\
es)g(can)g(all)g(be)f(expanded)h(locally)l(,)h(this)75 1103 y(strategy)c(tend\
s)g(to)g(reduce)g(the)g(amount)f(of)h(interprocessor)f(communication.)17 b
(Fer)o(guson)12 b(and)g(Korf)f([33)o(])75 1181 y(presented)16 b(a)g(D&C)g(sch\
eme)h(with)f(several)g(processors)g(scheduled)h(\256rst)e(to)h(a)h(node)f(and)
g(then)g(to)g(their)75 1259 y(children.)21 b(The)14 b(idea)f(behind)h(their)e
(scheme)i(is)g(also)g(that)f(of)g(distributing)f(frontier)g(nodes)i(near)f
(the)h(root)75 1337 y(to)e(idle)g(processors.)148 1483 y(Although)g(the)g(met\
hods)g(described)g(in)g(the)g(previous)g(paragraph)f(all)h(attempt)g(to)g(red\
uce)g(communi-)75 1561 y(cation)j(overhead,)h(they)f(do)g(not)f(use)i(global)
e(information)g(to)h(balance)g(the)g(load.)26 b(It)15 b(turns)f(out)h(that)g
(the)75 1639 y(communication)g(cost)i(for)e(these)i(methods)f(can)h(still)f
(be)g(high)g(in)g(the)g(worst)g(case.)31 b(For)15 b(example,)j(we)75 1717 y
(estimate)f(that)g(the)g(communication)f(cost)h(is)g fk(O)r fi(\()p fk(dh)
1013 1699 y fj(log)1056 1708 y fe(d)1079 1699 y fh(p)1099 1717 y fi(\))g fq
(for)f(Fer)o(guson)h(and)g(Korf)r(')l(s)h(scheme,)h(and)e(is)75 1796 y fk(O)r
fi(\()p fq(min)o fi(\()p fk(p)253 1777 y fj(2)272 1796 y fk(h;)8 b(pdh)399
1777 y fj(2)419 1796 y fi(\)\))k fq(for)g(the)g(scheme)h(in)f([34)o(])g(with)
h(round-robin)d(scheduling.)148 1941 y(In)j(contrast,)g(the)g(communication)e
(cost)j(for)e(the)g(scheduling)h(algorithm)f(here)g(\(Section)g(5.1.2\))h(is)
h(as)75 2019 y(low)e(as)i fk(O)q fi(\()p fk(pdh)p fi(\))g fq(\(Theorem)e(5.4\
\).)19 b(This)13 b(is)g(partly)f(due)h(to)f(the)h(fact)f(that)h(our)f(algorit\
hm)f(is)i(able)g(to)f(make)75 2097 y(ef)o(fective)g(use)h(of)f(global)g(infor\
mation)e(\(i.e.,)k(\252global)e(pool\272)g(in)g(Section)g(5.1.2\).)148 2242 y
(Most)19 b(importantly)-5 b(,)21 b(we)d(note)g(that)h(none)f(of)g(the)g(previ\
ous)g(work)g(has)h(any)f(lower)g(bound)g(results)75 2321 y(on)c(the)h(communi\
cation)e(cost)i(for)e(parallel)h(D&C)g(computations.)24 b(It)14 b(appears)g
(that)g(our)g(lower)g(bounds)75 2399 y(in)i(Theorem)h(5.1)g(and)f(Corollaries)
g(5.2)h(and)g(5.3)g(are)f(the)h(\256rst)f(lower)g(bound)g(results)h(for)e(tho\
se)i(D&C)75 2477 y(computations)9 b(whose)g(tree)g(structures)g(are)g(dynamic)
g(in)g(the)g(sense)h(that)f(the)g(tree)g(structure)f(is)i(determined)75 2555 y
(only)15 b(at)g(run)g(time.)26 b(Previous)14 b(results)i(on)f(computation)f
(and)h(communication)f(cost)i(tradeof)n(fs)f(such)h(as)75 2634 y(those)h(in)f
([51)o(,)h(52,)f(74])g(deal)h(with)e(only)h fm(static)h fq(computation)e(grap\
hs,)j(whose)e(topologies)g(are)g(known)75 2712 y(before)c(the)g(computation)g
(starts.)988 2836 y(63)p eop
%%Page: 64 78
 bop -4 53 a fd(5.1.2)57 b(A)14 b(Scheduling)i(Algorithm)g(and)f(Upper)g(Boun\
ds)-4 260 y fq(This)k(section)g(describes)g(a)g(new)g(scheduling)g(algorithm)
e(which)i(can)g(achieve)g(the)g(upper)f(bounds)h(in)-4 338 y(Theorem)12 b(5.4)
g(for)f(both)h(parallel)g(computation)f(cost)i(and)f(communication)f(cost.)19
b(The)12 b(bounds)h(hold)e(for)-4 417 y(any)h(D&C)g(computation,)g(i.e.,)i
(for)e(any)g fi(\()p fk(N)r(;)c(h;)g(d)p fi(\))p fq(-tree)k(no)h(matter)e(how)
h(irregular)f(it)i(is.)-4 621 y fo(Pr)o(oposed)f(Scheduling)f(Algorithm)69 790
y fq(The)k(scheduling)g(algorithm)f(uses)h(a)g(data)g(structure,)h(called)f
(a)g fm(Global)f(Pool)h fq(\(abbr)l(.)26 b fm(GP)p fq(\),)16 b(to)e(keep)-4
868 y(track)d(of)g(frontier)f(nodes)h(at)h(a)f(particular)g(tree)g(level)g
(which)h(have)f(not)g(been)h(taken)f(by)h(any)f(processor)g(for)-4 946 y(expa\
nsion.)23 b(This)15 b(level,)g(identi\256ed)e(by)h(a)g(variable)g fk(g)r(l)q
fq(,)h(has)f(the)g(property)f(that)h(nodes)h(at)f(higher)f(levels)-4 1024 y
(have)e(all)g(been)g(taken)h(by)f(processors.)18 b(Every)12 b(processor)f(wil\
l)g(try)f(to)i(take)f(a)g(node)h(from)e(the)h(GP)g(to)g(work)-4 1103 y(on)i
(whenever)h(it)f(becomes)h(idle.)23 b(For)13 b(the)h(proof)f(of)g(Theorem)h
(5.4,)h(it)e(suf)o(\256ces)h(to)g(assume)g(that)g(the)g(GP)-4 1181 y(is)g(mai\
ntained)g(by)g(some)h(single)g(processor)m(.)24 b(\(See)14 b([104])g(for)f
(a)i(distributed)f(scheme)h(where)f(the)g(GP)g(is)-4 1259 y(maintained)d(by)i
(multiple)e(processors.\))69 1404 y(Initially)-5 b(,)14 b(the)f(GP)g(contains)
h(only)f(the)g(root)f(and)i(the)f(value)g(of)g fk(g)r(l)h fq(is)g(one.)21 b
(The)13 b(GP)g(becomes)h(empty)-4 1483 y(when)h(all)g(of)f(its)i(nodes)f(at)g
(level)g fk(g)r(l)h fq(have)f(been)h(taken)f(by)g(the)g(processors.)27 b(At)
15 b(this)g(moment,)32 b(all)15 b(the)-4 1561 y(processors)i(are)f(requested)
h(to)g(send)g(in)f(their)h(frontier)e(nodes)i(at)g(level)f fk(g)s(l)e fi(+)f
fq(1)k(in)f(the)h(next)g(time)f(step)-4 1639 y(when)e(all)g(the)g(nodes)g(at)
g(level)h fk(g)r(l)d fi(+)g fq(1)j(have)f(been)g(generated.)24 b(Then)14 b
(the)g(GP)g(is)h(\256lled)e(with)h(this)g(set)h(of)-4 1717 y(new)f(nodes,)h
(and)f fk(g)r(l)h fq(is)f(increased)g(by)g(one.)23 b(This)15 b(process)g(is)f
(repeated)g(until)f(all)h(the)g(nodes)g(have)g(been)-4 1796 y(expanded.)69
1941 y(The)k(key)h(idea)f(of)g(this)g(algorithm)f(is)h(what)g(each)h(processo\
r)f(will)g(do)g(after)f(it)h(has)h(taken)f(a)h(node)-4 2019 y(from)c(the)i
(GP)-6 b(.)18 b(The)f(processor)g(will)f(do)h(a)g(depth-\256rst)f(traversal.)
31 b(Consequently)m(,)19 b(the)e(processor)f(can)-4 2097 y(exhaust)11 b(all)f
(possible)i(work)e(locally)h(before)f(asking)h(for)f(a)h(new)g(node)g(from)f
(the)h(GP)-6 b(.)11 b(As)h(a)f(result,)g(we)g(can)-4 2175 y(prove)i(\(below\))
f(that)i(the)f(communication)g(cost)h(can)g(be)g(as)g(low)f(as)i fk(C)1250
2182 y fh(u)1272 2175 y fq(.)22 b(While)14 b(not)f(related)h(to)f(parallel)-4
2254 y(computation)18 b(cost)h(and)g(communication)g(cost,)i(an)f(important)e
(advantage)h(of)f(this)i(local)f(depth-\256rst)-4 2332 y(strategy)12 b(is)g
(that)h(it)f(uses)h(the)f(minimum)f(amount)h(of)g(memory)l(.)69 2477 y(In)e
(essence)j(the)e(scheduling)f(algorithm)g(described)h(here)g(uses)h(a)f(bread\
th-\256rst)f(scheme)h(to)g(distribute)-4 2555 y(big)e(chunks)h(of)g(computati\
ons)f(to)h(processors,)h(and)f(has)h(each)f(processor)g(after)f(receiving)g
(a)h(computation)-4 2634 y(follow)17 b(the)i(depth-\256rst)e(strategy)h(local\
ly)m(.)37 b(Therefore,)20 b(the)e(algorithm)f(is)i(a)g(hybrid)f(method,)i(whi\
ch)-4 2712 y(interestingly)10 b(will)h(do)g(a)h(purely)f(depth-\256rst)f(trav\
ersal)h(of)g(the)h(tree)f(in)g(the)h(case)g(that)f(only)g(one)h(processor)908
2836 y(64)p eop
%%Page: 65 79
 bop 75 53 a fq(is)13 b(used.)148 199 y(Suppose)f(that)f(we)h(de\256ne)g(the)
f fm(parallel)h(computation)f(time)g fq(to)h(be)g(the)f(time)h(\(in)f(terms)g
(of)h(number)f(of)75 277 y(time)h(steps\))g(when)g(the)g(last)h(node)f(is)g
(expanded)g(by)g(a)g(processor)n(.)18 b(Then)13 b(the)f(parallel)f(computatio\
n)g(time)75 355 y(of)f(the)h(algorithm)e(described)h(here)h(is)f(at)h(most)g
fl(d)p fk(N)q(=p)d fi(+)f fk(h)p fl(e)p fq(.)18 b(T)m(o)10 b(see)h(this,)h
(we)e(note)h(that)f(some)h(processors)75 433 y(may)i(become)g(idle)f(only)h
(when)g(the)g(number)f(of)g(nodes)i(in)e(the)h(GP)g(is)g(smaller)g(than)g(the)
g(number)f(of)g(idle)75 512 y(processors.)30 b(In)16 b(the)g(worst)g(case)h
(all)f(the)g fk(p)g fq(processors)h(may)f(become)g(idle)g(at)g(the)g(end)g
(of)g(some)g(time)75 590 y(step,)f(but)e(at)h(this)g(time)f(there)g(is)h(only)
f(one)h(node)g(in)f(the)h(GP)-6 b(.)14 b(Thus,)h(in)f(the)f(next)h(time)f(ste\
p,)i(as)f(many)g(as)75 668 y fk(p)g fl(\000)e fq(1)k(processors)h(may)f(be)g
(idle.)29 b(This)16 b(situation)g(can)g(happen)g(at)g(most)g fk(h)g fq(times.)
30 b(Therefore,)16 b(in)g(the)75 746 y(entire)e(D&C)h(computation,)h(addition\
al)e fk(h)p fi(\()p fk(p)f fl(\000)f fq(1)p fi(\))j fq(nodes)g(could)g(have)g
(been)g(expanded)g(if)g(there)f(were)75 825 y(no)g(idle)f(processors)h(at)g
(any)f(time)g(step.)23 b(This)14 b(implies)f(that)h(the)f(parallel)h(computat\
ion)e(time)i(is)f(at)h(most)75 903 y fl(d)p fi(\()p fk(N)i fi(+)11 b fk(h)p fi
(\()p fk(p)h fl(\000)f fq(1)p fi(\)\))p fk(=p)p fl(e)k(\024)e(d)p fk(N)q(=p)f
fi(+)f fk(h)p fl(e)p fq(.)148 1048 y(Note)19 b(that)f(parallel)h(computation)
e(time)i(de\256ned)f(in)h(the)f(previous)h(paragraph)f(is)h(dif)n(ferent)f
(from)75 1126 y(parallel)11 b(computation)f(cost)i(de\256ned)f(in)g(Section)g
(5.1.1.1.)19 b(Being)11 b(able)g(to)g(take)h(into)f(account)22 b(processor)75
1205 y(waiting)17 b(time)h(induced)f(by)h(inter)n(-node)f(dependency)m(,)j
(parallel)d(computation)g(time)g(may)h(be)f(of)h(more)75 1283 y(practical)12 b
(interest)g(than)g(parallel)g(computation)g(cost.)148 1428 y(However)n(,)23 b
(to)d(prove)g(Theorem)g(5.4,)k(we)c(need)h(to)f(establish)h(an)g(upper)f(boun\
d)g(on)g(the)h(parallel)75 1506 y(computation)14 b(cost)h(of)g(the)g(algorith\
m.)24 b(W)l(e)16 b(will)e(do)h(this)g(and)g(also)g(establish)g(an)g(upper)g
(bound)f(on)h(the)75 1584 y(communication)c(cost)i(of)f(the)g(algorithm.)75
2439 y @beginspecial @setspecial
%%BeginDocument: dcfig/dftree.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 1 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 10 /Times-Roman FMDEFINEFONT
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
( :frontier node) 163.11 154.18 T
152.74 152 161.74 161 R
3 X
V
0.5 H
2 Z
0 X
N
213.21 123.31 224.74 120 213.21 116.69 213.21 120 4 Y
V
206.74 120 214.21 120 2 L
N
(gl) 194.97 118.17 T
251.74 143 260.74 152 R
7 X
V
0 X
N
269.74 116 278.74 125 R
3 X
V
0 X
N
251.74 116 260.74 125 R
3 X
V
0 X
N
233.74 116 242.74 125 R
7 X
V
0 X
N
256.74 125 256.74 143 2 L
N
256.74 143 274.74 125 2 L
N
256.74 143 238.74 125 2 L
N
251.74 89 260.74 98 R
3 X
V
0 X
N
233.74 89 242.74 98 R
3 X
V
0 X
N
215.74 89 224.74 98 R
7 X
V
0 X
N
238.74 98 238.74 116 2 L
N
238.74 116 256.74 98 2 L
N
238.74 116 220.74 98 2 L
N
216 36 225 45 R
7 X
V
0 X
N
198 36 207 45 R
7 X
V
0 X
N
179.74 35 188.74 44 R
7 X
V
0 X
N
203 45 203 63 2 L
N
203 63 221 45 2 L
N
234 9 243 19 R
3 X
V
0 X
N
179.74 8 188.74 17 R
7 X
V
0 X
N
161.74 8 170.74 17 R
7 X
V
0 X
N
184.74 17 184.74 35 2 L
N
221 36 239 18 2 L
N
184.74 35 166.74 17 2 L
N
287.74 130 247.74 130 247.74 112 287.74 112 4 L
2 H
N
(global pool) 296.74 118.18 T
274.74 171 256.74 153 2 L
0.5 H
N
216 9 225 18 R
3 X
V
0 X
N
198 9 207 18 R
3 X
V
0 X
N
221 18 221 36 2 L
N
221 36 203 18 2 L
N
233.74 62 242.74 71 R
3 X
V
0 X
N
215.74 62 224.74 71 R
3 X
V
0 X
N
197.74 62 206.74 71 R
7 X
V
0 X
N
220.74 71 220.74 89 2 L
N
220.74 89 238.74 71 2 L
N
220.74 89 202.74 71 2 L
N
202.74 62 184.74 44 2 L
N
FMENDPAGE
%%EndDocument
 @endspecial 283 2515 a(Figure)f(5.1:)18 b(At)13 b(most)f fk(d)h fq(frontier)
e(nodes)h(at)h(each)f(level)h(on)f(a)g(processor)h(\()p fk(d)h fi(=)f fq(3\).)
197 2712 y fo(Proof)8 b(of)h(Theor)o(em)h(5.4.)18 b fq(T)m(o)9 b(achieve)h
(the)f fl(d)p fk(N)q(=p)p fl(e)h fq(upper)f(bound)g(on)g(parallel)g(computati\
on)988 2836 y(65)p eop
%%Page: 66 80
 bop 117 53 a fq(cost,)16 b(we)e(will)g(need)g(to)g(add)g(some)h(fair)e(sched\
uling)h(feature)g(to)g(the)g(algorithm)f(described)117 132 y(above.)30 b(When\
ever)16 b(the)g(number)g(of)g(nodes)g(in)g(the)g(GP)g(is)h(smaller)e(than)h
(the)h(number)e(of)117 210 y(idle)i(processors,)i(we)f(will)e(select)i(the)f
(active)g(processors)g(for)g(the)g(next)g(time)f(step)i(from)117 288 y fm(all)
d fq(the)g fk(p)h fq(processors)f(in)g(a)g(fair)f(way)m(.)26 b(That)16 b(is,)
g(processors)f(take)g(turn)g(to)g(become)g(active)117 366 y(using)e(a)f(round\
-robin)e(scheme.)19 b(This)12 b(ensures)h(at)f(the)g(end)g(of)g(any)g(time)g
(step)g(that)g(the)g(total)117 445 y(number)g(of)g(nodes)g(expanded)h(by)f
(a)g(processor)h(so)f(far)g(will)g(not)g(exceed)g(that)h(expanded)f(by)117 523
y(any)i(other)f(processor)h(by)f(more)h(than)f(one.)22 b(Thus)15 b(when)e(all)
h(the)g fk(N)19 b fq(nodes)14 b(are)f(expanded,)117 601 y(each)j(processor)g
(will)f(have)h(expanded)g(at)g(most)f fl(d)p fk(N)r(=p)p fl(e)p fq(.)29 b(Thi\
s)16 b(proves)g(that)g(the)f(parallel)117 679 y(computation)d(cost)g(of)g(the)
g(scheduling)h(algorithm)e(with)h(the)g(fair)f(scheduling)h(feature)g(is)h
(at)117 758 y(most)g fl(d)p fk(N)q(=p)p fl(e)p fq(.)192 898 y(The)19 b(commun\
ication)f(cost)g(of)h(the)f(algorithm)f(is)i(at)g(most)f(the)g(number)g(of)g
(frontier)117 976 y(nodes)f(entering)f(the)g(GP)-6 b(,)17 b(as)f(this)h(repre\
sents)f(the)g(only)g(interprocessor)g(communication)117 1055 y(activity)e(for)
f(the)g(entire)h(algorithm.)21 b(Since)13 b(by)h(using)g(depth-\256rst)f(sear\
ch)h(each)g(processor)117 1133 y(has)j(at)f(most)g fk(d)g fq(local)g(nodes)h
(at)f(each)g(level)g(\(as)g(illustrated)f(in)h(Figure)f(5.1\),)j(the)e(GP)f
(can)117 1211 y(collect)g(at)h(most)f fk(pd)h fq(nodes)f(each)g(time)g(that)g
fk(g)r(l)h fq(increases.)27 b(This)16 b(will)e(happen)h(at)g(most)g fk(h)117
1289 y fq(times,)c(so)f(the)f(total)g(number)f(of)h(nodes)h(entering)f(the)g
(GP)g(is)h(bounded)f(above)g(by)g fk(C)1570 1296 y fh(u)1606 1289 y fi(=)14 b
fk(pdh)p fq(.)117 1332 y 29 2 v 48 x 2 49 v 27 w 2 49 v 117 1382 a 29 2 v 69
2019 a(Note)g(that)g(in)f(a)i(practical)e(implementation,)h(the)g(fair)f(sche\
duling)h(feature)g(may)g(not)g(be)g(used)g(since)-4 2097 y(minimizing)6 b(par\
allel)i(computation)f(cost)h(may)g(not)g(be)g(important.)16 b(W)n(ithout)8 b
(the)g(fair)f(scheduling)h(feature,)-4 2175 y(the)i(parallel)f(computation)g
(cost)i(would)e(become)h fl(d)p fk(N)r(=p)d fi(+)e fk(h)p fl(e)p fq(.)18 b
(However)n(,)11 b(the)f(communication)f(cost)h(can)-4 2254 y(be)i(reduced)g
(to)g fk(p)p fi(\()p fk(d)f fl(\000)g fq(1)p fi(\))p fk(h)p fq(,)h(if)g(a)h
(processor)f(right)f(after)h(expanding)g(a)g(node)g(will)g(schedule)g(one)h
(child,)f(if)-4 2332 y(any)l(,)h(of)f(the)g(node)h(for)e(expansion)i(at)f(the)
g(next)h(time)f(step.)69 2477 y(The)i(scheduling)g(algorithm)e(described)i
(in)g(this)g(section)g(is)g(being)f(used)h(as)h(a)f(basis)g(for)f(developing)
-4 2555 y(a)f(parallel)f(programming)f(model)i(for)f(D&C)h(computations.)18 b
(T)m(o)12 b(obtain)g(practical)f(insights,)i(we)f(plan)g(to)-4 2634 y(impleme\
nt)h(a)h(programming)f(system)i(based)g(on)f(the)g(model)g(on)g(the)h(26-host)
e(Nectar)h(network)g(system)-4 2712 y([6)o(])e(developed)g(at)h(Carnegie)f
(Mellon)g(University)l(.)908 2836 y(66)p eop
%%Page: 67 81
 bop 75 53 a fd(5.1.3)57 b(A)15 b(Simpli\256ed)h(V)-5 b(ersion)14 b(of)h(Theo\
r)o(em)g(5.1)75 236 y fq(This)g(section)g(presents)f(Theorem)g(5.5)h(\(see)g
(below\),)f(which)h(is)f(a)h(simpli\256ed)f(version)g(of)f(Theorem)i(5.1)75
314 y(dealing)h(with)g(only)h(two)f(processors.)31 b(A)17 b(relatively)f(simp\
le)g(proof)g(of)g(Theorem)g(5.5)h(is)g(given.)30 b(This)75 392 y(simple)10 b
(proof)f(captures)i(the)f(essence)i(of)d(a)i(more)f(complicated)f(proof)h(of)
g(Theorem)g(5.1)g(given)g(in)h(Section)75 471 y(5.1.4.)19 b(It)12 b(is)h(advi\
sed)f(that)g(the)h(reader)f(read)g(this)g(simple)h(proof)e(\256rst)h(to)g(und\
erstand)g(the)g(ideas.)197 835 y fo(Theor)o(em)h(5.5)25 b fm(For)14 b(each)g
(scheduling)f(algorithm)h fl(A)f fm(for)h(a)f(parallel)h(system)g(of)g(two)f
(pr)o(o-)197 913 y(cessors,)h(for)f(each)g fk(N)5 b fm(,)13 b fk(h)p fm(,)g
(and)f fk(d)h fm(with)f(the)g(following)g(thr)n(ee)h(r)o(estrictions,)197 1024
y fo(S1.)24 b fk(N)19 b(>)14 b fq(3)p fk(dh)p fm(,)197 1130 y fo(S2.)24 b fk
(h)14 b(>)g fl(d)p fq(log)466 1143 y fh(d)494 1130 y fk(N)6 b fl(e)11 b fi
(+)g fq(2)p fm(,)i(and)197 1236 y fo(S3.)24 b fk(h)12 b fl(\000)e(d)p fq(log)
461 1249 y fh(d)490 1236 y fk(N)5 b fl(e)11 b(\000)g fq(2)h fm(is)h(an)f(even)
h(integer)-5 b(,)197 1348 y(ther)n(e)21 b(exists)g(some)f fi(\()p fk(N)s(;)8 b
(h;)f(d)p fi(\))p fm(-tr)o(ee)20 b fk(H)25 b fm(for)20 b(which)g(at)g(least)g
(one)h(of)f(the)g(following)f(two)197 1426 y(pr)n(operties)13 b(is)g(true:)
197 1537 y fo(T1.)25 b fm(the)12 b(parallel)g(computation)g(cost)h(of)f(the)g
(algorithm)g(is)h fk(T)1298 1544 y fg(A)1328 1537 y fi(\()p fk(H)t fi(\))h fl
(\025)f fk(N)k fl(\000)10 b fq(3)p fk(dh)p fm(;)197 1643 y fo(T2.)25 b fm(the)
12 b(communication)g(cost)h(of)f(the)g(algorithm)g(is)h fk(C)1192 1650 y fg
(A)1222 1643 y fi(\()p fk(H)t fi(\))h fl(\025)g fk(h)1399 1625 y fg(0)1410
1643 y fi(\()p fk(d)e fl(\000)e fq(1)p fi(\))p fm(,)197 1754 y(wher)o(e)i fk
(h)357 1736 y fg(0)383 1754 y fi(=)i(\()p fk(h)d fl(\000)g(d)p fq(log)628 1767
y fh(d)657 1754 y fk(N)5 b fl(e)11 b(\000)g fq(2)p fi(\))p fk(=)p fq(2)p fm
(.)148 1974 y fq(Note)j(that)f(restrictions)g(S1)g(and)g(S2)g(correspond)g
(to)h(those)f(in)h(Theorem)f(5.1.)22 b(Restriction)13 b(S3)g(is)h(for)75 2053
y(a)f(minor)e(technical)h(convenience,)h(namely)m(,)f(ensuring)h(that)f fk
(h)1175 2035 y fg(0)1199 2053 y fq(an)g(integer)m(.)148 2198 y(Theorem)f(5.5)
g(implies,)h(for)e(example,)h(that)g(if)f(the)h(communication)f(cost)h(is)g
(small)g(\(in)g(the)f(sense)i(that)75 2276 y(T2)f(does)h(not)e(hold\),)h(then)
g(the)g(parallel)g(computation)f(cost)h(must)g(be)g(lar)o(ge)g(\(in)f(the)h
(sense)h(that)f(T1)g(holds\).)75 2354 y(In)j(particular)m(,)h(if)e fk(C)426
2361 y fg(A)456 2354 y fi(\()p fk(H)5 b fi(\))16 b fk(<)g(h)637 2336 y fg(0)
649 2354 y fi(\()p fk(d)c fl(\000)g fq(1)p fi(\))i fq(and)g(if)f(3)p fk(dh)k
fl(\034)f fk(N)5 b fq(,)15 b(then)f(the)g(parallel)g(computation)f(cost)h(wil\
l)75 2433 y(be)e(close)h(to)g fk(N)5 b fq(.)75 2712 y fo(Proof)12 b(of)f(Theo\
rem)i(5.5)988 2836 y fq(67)p eop
%%Page: 68 82
 bop -4 53 a fq(Suppose)15 b(that)g(we)h(are)g(given)f(a)h(scheduling)f(algor\
ithm)g fl(A)g fq(for)g(performing)f(a)h(D&C)h(computation)f(on)-4 132 y(proce\
ssors)f fk(P)251 139 y fj(1)284 132 y fq(and)g fk(P)401 139 y fj(2)420 132 y
fq(.)24 b(For)13 b(algorithm)g fl(A)p fq(,)i(we)f(will)g(prove)f(the)i(existe\
nce)f(of)g(a)g fi(\()p fk(N)r(;)8 b(h;)g(d)p fi(\))p fq(-tree)14 b fk(H)k fq
(for)-4 210 y(which)12 b(at)g(least)h(one)f(of)g(T1)h(and)f(T2)h(must)g(hold.)
69 355 y(By)h(playing)g(an)g(adversary)g(game)g(with)g(algorithm)f fl(A)p fq
(,)i(we)f(will)g(construct)f(the)i(tree)f(by)g(growing)f(it)-4 433 y(from)c
(the)i(root)f(one)h(step)g(at)g(a)g(time.)18 b(A)11 b(time)f(step)h(consists)
h(of)f(two)f(phases,)j(node)d(scheduling)h(phase)h(and)-4 512 y(node)f(expans\
ion)g(phase.)18 b(In)11 b(the)g(node)g(scheduling)g(phase,)i(algorithm)d fl
(A)h fq(schedules)g(a)h(node)f(or)g(no)g(node)-4 590 y(for)i(each)i(processor)
f(to)g(execute.)25 b(Then,)16 b(in)e(the)h(node)f(expansion)g(phase,)i(these)
f(scheduled)g(nodes)g(are)-4 668 y(expanded.)27 b(In)15 b(this)g(phase)h(we)f
(will)g(determine)g(the)g(number)g(of)g(children)f(each)i(scheduled)g(node)f
(will)-4 746 y(generate.)69 892 y(W)l(e)10 b(will)g(\256rst)g(de\256ne)g(a)h
(special)f(class)h(of)f(subtrees)h(which)f(will)g(be)g(used)h(to)f(describe)g
(some)h(suf)o(\256cient)-4 970 y(conditions)h(under)h(which)f(a)i(tree)e(can)
i(grow)e(to)h(a)g fi(\()p fk(N)s(;)7 b(h;)h(d)p fi(\))p fq(-tree.)20 b(W)l
(e)14 b(will)e(then)h(give)g(the)g(main)f(part)h(of)-4 1048 y(the)f(proof)f
(including)h(a)g(description)g(of)g(the)g(tree)h(construction)e(procedure.)-4
1252 y fo(HFD-Subtr)m(ee)117 1598 y(De\256nition)g(5.1)25 b fm(At)17 b(any)f
(given)g(time)h(during)f(the)g(tr)n(ee)h(construction,)h(a)e(High-and-Full-)
117 1676 y(Degr)o(ee)i(subtr)n(ee)g(\(abbv)l(.)33 b(HFD-subtr)o(ee\))17 b(is)
h(a)f(subtr)o(ee,)i(which)f(is)f(r)o(ooted)g(at)g(a)h(node)f(at)117 1755 y
(or)d(above)f(level)g fk(h)f fl(\000)f(d)p fq(log)590 1768 y fh(d)618 1755 y
fk(N)5 b fl(e)p fm(,)14 b(and)f(which)g(has)h(been)f(constructed)g(using)g
(the)g(following)117 1833 y(rules:)117 1933 y fo(A1.)25 b fm(nodes)13 b(above)
f(level)h fk(h)f fm(generate)h fk(d)g fm(childr)n(en;)f(and)117 2032 y fo(A2.)
25 b fm(nodes)13 b(at)f(level)h fk(h)f fm(generate)h(no)f(childr)n(en.)-4 2233
y fq(Note)h(that)g(rules)g(A1)h(and)f(A2)g(imply)g(that)g(a)h(node)f(which)g
(is)h(above)g(level)f fk(h)g fq(and)h(has)g(no)f(children)g(must)-4 2311 y
(be)f(a)h(frontier)d(node.)117 2634 y fo(Lemma)k(5.1)25 b fm(At)20 b(any)f
(given)h(time)g(during)f(the)h(tr)n(ee)g(construction,)i(if)e(the)f(curr)o
(ent)h(tr)n(ee)117 2712 y(satis\256es)14 b(the)e(following)g(four)g(pr)o(oper\
ties:)908 2836 y fq(68)p eop
%%Page: 69 83
 bop 197 53 a fo(I1.)25 b fm(the)15 b(total)g(number)g(of)g(generated)h(nodes)
f(is)h(at)f(most)g fk(N)j fl(\000)12 b fk(h)h fl(\000)f fk(d)k fm(\(generated)
f(nodes)304 132 y(include)d(the)h(r)n(oot\);)197 231 y fo(I2.)25 b fm(the)12 b
(height)g(is)h(at)f(most)h fk(h)p fm(;)197 330 y fo(I3.)25 b fm(the)12 b(degr)
o(ee)h(of)f(any)g(node)g(is)h(at)f(most)h fk(d)p fm(;)f(and)197 429 y fo(I4.)
25 b fm(the)12 b(tr)o(ee)g(contains)h(an)f(HFD-subtr)o(ee,)197 528 y(then)g
(a)h(construction)f(pr)n(ocedur)o(e)h(can)f(be)g(devised)h(to)f(gr)o(ow)g(the)
h(tr)n(ee)g(to)f(a)g fi(\()p fk(N)s(;)c(h;)g(d)p fi(\))p fm(-tr)n(ee:)197 727
y fo(Proof.)33 b fq(W)l(e)18 b(\256rst)f(note)g(that)g(in)h(the)f(HFD-subtree)
g(of)g(I4)g(there)g(exist)h(nodes)g(which)f(are)197 805 y(above)10 b(level)h
fk(h)g fq(and)f(have)h(no)f(children.)17 b(Otherwise,)11 b(the)g(subtree)f
(would)h(have)f(been)h(\252fully)197 884 y(grown\272)e(to)g(level)h fk(h)p fq
(,)h(according)e(to)g(rules)h(A1)f(and)h(A2.)17 b(Since)10 b(its)f(root)g(is)
h(at)g(and)g(above)f(level)197 962 y fk(h)k fl(\000)g(d)p fq(log)376 975 y fh
(d)405 962 y fk(N)5 b fl(e)p fq(,)18 b(this)e(fully)g(grown)f(HFD-subtree)h
(would)g(have)g(at)g(least)h fk(d)1556 944 y fg(d)p fj(log)1615 953 y fe(d)
1639 944 y fh(N)s fg(e)1688 962 y fi(\()p fl(\025)i fk(N)5 b fi(\))197 1040 y
fq(nodes.)17 b(This)10 b(contradicts)e(I1.)17 b(As)9 b(noted)f(above,)i(those)
f(nodes)g(in)g(the)f(current)g(HFD-subtree)197 1118 y(which)k(are)g(above)h
(level)f fk(h)h fq(and)f(have)h(no)f(children)f(must)i(all)f(be)h(frontier)d
(nodes.)272 1197 y(Let)16 b fk(H)394 1204 y fj(1)429 1197 y fq(be)g(the)g(cur\
rent)f(tree.)28 b(W)l(e)16 b(will)g(identify)f(a)h(set)g(of)g(\252padding)f
(nodes\272)h(which)197 1275 y(can)d(be)f(added)g(to)h fk(H)561 1282 y fj(1)
592 1275 y fq(to)f(make)h(it)f(a)g fi(\()p fk(N)s(;)c(h;)g(d)p fi(\))p fq(-tr\
ee.)75 1871 y @beginspecial @setspecial
%%BeginDocument: dcfig/exist-new.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 4 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 10 /Times-Roman FMDEFINEFONT
1 10 /Times-Italic FMDEFINEFONT
2 12 /Times-Italic FMDEFINEFONT
3 9 /Times-Roman FMDEFINEFONT
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
337.5 72.94 353.25 69.01 362.87 52.47 353.25 35.94 343.62 36.72 327.87 54.83 333.12 65.86 7 Y
2 X
V
0.5 H
2 Z
0 X
N
243 35.82 432 35.82 337.49 125.82 3 Y
N
0 F
(at most ) 30.02 23.6 T
1 F
(h) 61.68 23.6 T
0 F
( nodes on the path) 66.67 23.6 T
(+) 385.3 113.98 T
(: ) 417.3 113.98 T
1 F
(N) 422.57 113.98 T
0 F
( nodes) 429.24 113.98 T
(\050a\051) 108 11.18 T
(\050b\051) 335.09 11.17 T
362.3 107.98 380.3 125.98 R
5 X
V
1 H
0 X
N
394.3 107.98 412.3 125.98 R
2 X
V
0 X
N
(: current nodes) 218 115.2 T
198 108.01 216 126 R
5 X
V
0 X
N
337.29 125.82 279.75 70.86 295.95 62.29 311.45 62.29 316.62 71.36 332.12 66.83 337.5 72.94
 363.13 66.83 378.63 75.9 399.31 66.83 10 Y
5 X
V
0.5 H
0 X
N
340.28 95.63 346.25 69.79 2 L
1 H
N
309.03 35.82 371.53 35.82 340.28 95.63 3 Y
2 H
N
346.25 71.37 341 62.71 350.62 62.71 3 Y
4 X
V
0.5 H
0 X
N
1 F
(d) 156.19 39.67 T
0 F
( nodes) 161.18 39.67 T
110.05 48.11 121 53.02 114.31 43.05 112.18 45.58 4 Y
V
96 32 112.95 46.21 2 L
N
136.08 50.3 128.04 59.2 139.58 55.91 137.83 53.1 4 Y
V
154 43.17 136.99 53.6 2 L
N
18 36 207 36 112.49 126 3 Y
N
112.29 126 54.75 71.04 70.95 62.47 86.45 62.47 91.62 71.55 107.12 67.01 112.5 73.13
 138.13 67.01 153.63 76.09 174.31 67.01 10 Y
5 X
V
0 X
N
115.28 95.81 121.25 69.98 2 L
1 H
N
84.03 36 146.53 36 115.28 95.81 3 Y
2 H
N
121.25 71.55 113 58.17 129 58.17 3 Y
2 X
V
0.5 H
0 X
N
121.25 69.98 123.09 36 2 L
3 H
N
0 125.33 9 125.33 2 L
0.5 H
N
0 36.65 9 36.65 2 L
N
1.69 114.45 5 125.98 8.31 114.45 5 114.45 4 Y
V
5 89.2 5 115.45 2 L
N
8.31 47.52 5 35.98 1.69 47.52 5 47.52 4 Y
V
5 72.78 5 46.52 2 L
N
2 F
(h) 2 78.36 T
3 F
(fully grown ) 43 51.34 T
5 X
90 450 3.5 3.5 120.5 70.67 G
0 X
90 450 3.5 3.5 120.5 70.67 A
346.25 71.37 338 57.98 354 57.98 3 Y
2 X
V
0 X
N
346.25 69.79 348.09 35.82 2 L
2 X
V
3 H
0 X
N
5 X
90 450 3.5 3.5 345.5 70.48 G
0.5 H
0 X
90 450 3.5 3.5 345.5 70.48 A
0 F
(node ) 152.19 54.67 T
1 F
(v) 174.12 54.67 T
133.35 61.63 124.04 69.2 135.95 67.71 134.65 64.67 4 Y
V
150 58.17 133.73 65.03 2 L
N
0 F
(: padding nodes) 218 88.18 T
198 81 216 98.98 R
2 X
V
1 H
0 X
N
3 F
(HFD-subtree) 39 42.34 T
(fully grown ) 268 52.32 T
(HFD-subtree) 264 43.32 T
FMENDPAGE
%%EndDocument
 @endspecial 459 1949 a(Figure)k(5.2:)18 b(Growing)12 b(the)g(current)f(tree)
i(to)f(a)g fi(\()p fk(N)s(;)c(h;)g(d)p fi(\))p fq(-tree.)272 2086 y(If)j fk
(H)357 2093 y fj(1)387 2086 y fq(has)i(height)e(less)h(than)g fk(h)g fq(or)f
(degree)h(less)g(than)g fk(d)p fq(,)g(we)g(will)f(grow)h(it)f(by)h(extending)
197 2164 y(the)d(current)g(HFD-subtree)g(from)f(one)h(of)g(its)h(frontier)e
(nodes)i(which)f(are)g(above)h(level)f fk(h)p fq(.)18 b(Let)197 2242 y fk(v)d
fq(be)g(this)f(frontier)e(node,)j(as)g(shown)f(in)g(Figure)f(5.2.)24 b(W)l
(e)14 b(generate)g fk(d)g fq(children)f(for)h fk(v)h fq(and)197 2321 y(create)
d(a)h(path)f(from)f fk(v)j fq(to)e(a)h(node)f(at)g(level)h fk(h)p fq(,)f(as)h
(shown)g(in)f(Figure)f(5.2)i(\(a\).)18 b(The)13 b(resulting)197 2399 y(tree,)
e(called)g fk(H)465 2406 y fj(2)484 2399 y fq(,)h(has)f(height)f fk(h)p fq
(,)i(degree)e fk(d)p fq(,)i(and)f(no)f(more)h(than)f fi(\()p fk(N)j fl(\000)7
b fk(h)g fl(\000)g fk(d)p fi(\))h(+)f fk(d)h fi(+)f fk(h)14 b fi(=)g fk(N)197
2477 y fq(nodes.)272 2555 y(If)c fk(H)356 2562 y fj(2)386 2555 y fq(has)h(les\
s)h(than)f fk(N)16 b fq(nodes,)c(we)f(will)g(pad)f(it)h(with)g(nodes)g(in)g
(the)g(fully)f(grown)g(HFD-)197 2634 y(subtree)19 b(which)h(are)f(reachable)g
(from)g(the)g(current)g(frontier)f(nodes)h(and)h(other)f(padding)197 2712 y
(nodes,)i(as)e(illustrated)e(in)h(Figure)g(5.2)h(\(b\).)35 b(Since)18 b(the)h
(fully)e(grown)h(HFD-subtree)g(has)988 2836 y(69)p eop
%%Page: 70 84
 bop 117 53 a fq(at)17 b(least)g fk(N)22 b fq(nodes,)c(it)f(has)g(suf)o(\256c\
ient)f(nodes)h(which)g(can)f(be)h(added)g(to)f fk(H)1466 60 y fj(2)1502 53 y
fq(to)g(make)h(it)f(a)117 132 y fi(\()p fk(N)s(;)8 b(h;)g(d)p fi(\))p fq(-tre\
e.)192 213 y(After)j(having)h(identi\256ed)f(all)h(these)g(padding)g(nodes,)g
(we)g(now)g(have)g(a)g(\252blueprint\272)f(for)117 291 y(a)f(construction)f
(procedure)g(to)g(follow)l(.)18 b(More)9 b(precisely)m(,)i(the)e(construction)
g(procedure)g(will)117 369 y(just)k(generate)f(all)g(those)h(padding)f(nodes)
h(in)f(the)g(dark)g(region)g(in)g(Figure)f(5.2)i(\(b\).)1587 333 y 29 2 v 49 x
2 49 v 26 w 2 49 v 1587 384 a 29 2 v -4 646 a fo(Main)e(Part)i(of)f(Proof)f
(of)h(Theorem)h(5.5)69 815 y fq(The)i(tree)g(construction)g(procedure)f(consi\
sts)i(of)f(three)f(stages.)28 b(Each)15 b(stage)h(uses)g(an)f(independent)-4
893 y(set)d(of)g(rules)h(in)f(constructing)f(the)i(tree.)-4 1364 y
@beginspecial @setspecial
%%BeginDocument: dcfig/2areas.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 4 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Symbol FMDEFINEFONT
1 12 /Times-Italic FMDEFINEFONT
2 10 /Times-Italic FMDEFINEFONT
3 12 /Times-Roman FMDEFINEFONT
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
213.39 81 154.47 9 2 L
0.5 H
2 Z
0 X
N
213.39 81 270.48 9 2 L
N
183.83 45 241.84 45 2 L
N
155.32 9 271.47 9 2 L
N
280.62 81 298.62 81 2 L
N
280.47 45 298.47 45 2 L
N
280.62 9 298.62 9 2 L
N
286.31 69.47 289.62 81 292.93 69.47 289.62 69.47 4 Y
V
289.62 67.5 289.62 70.47 2 L
N
292.78 56.53 289.47 45 286.16 56.53 289.47 56.53 4 Y
V
289.47 58.5 289.47 55.53 2 L
N
286.31 33.47 289.62 45 292.93 33.47 289.62 33.47 4 Y
V
289.62 31.5 289.62 34.47 2 L
N
292.93 20.53 289.62 9 286.31 20.53 289.62 20.53 4 Y
V
289.62 22.5 289.62 19.53 2 L
N
0 F
(\351) 307.47 23.06 T
1 F
(log) 312.07 23.06 T
2 F
(d) 327.4 20.06 T
1 F
( N) 332.4 23.06 T
0 F
( \371) 343.4 23.06 T
3 F
(Area 1) 199.47 47.6 T
(Area 2) 198.58 17.4 T
127.47 81 145.47 81 2 L
N
127.47 9 145.47 9 2 L
N
133.16 69.47 136.47 81 139.78 69.47 136.47 69.47 4 Y
V
136.47 57 136.47 70.47 2 L
N
139.78 20.53 136.47 9 133.16 20.53 136.47 20.53 4 Y
V
136.47 33 136.47 19.53 2 L
N
1 F
(h) 134.47 41.92 T
3 F
(2 ) 312.45 56.28 T
1 F
(h) 321.45 56.28 T
0 F
(\242) 327.44 56.28 T
1 F
(+) 330.41 56.28 T
3 F
(2) 338.5 56.28 T
FMENDPAGE
%%EndDocument
 @endspecial 480 1440 a(Figure)f(5.3:)18 b(T)m(wo)12 b(areas)h(in)f(the)g(con\
structed)h(tree.)69 1588 y(In)j(stage)h(1,)h(we)f(expand)f(each)h(node)g(with)
f(exactly)h fk(d)g fq(children.)30 b(Stage)16 b(1)h(terminates)f(at)h(time)f
fk(T)1852 1595 y fj(1)-4 1667 y fq(when)11 b(a)h(total)f(of)h(2)p fk(h)356
1649 y fg(0)379 1667 y fq(or)f(2)p fk(h)485 1649 y fg(0)506 1667 y fi(+)f fq
(1)h(nodes)h(have)g(just)g(been)g(expanded.)18 b(\(Note)11 b(that)g(at)h(this)
g(time)f(the)h(tree)f(is)-4 1745 y(completely)g(inside)h(area)h(1)f(of)g(Figu\
re)f(5.3.\))18 b(Since)12 b(the)h(number)e(of)h(frontier)f(nodes)h(increases)
h(by)f fk(d)f fl(\000)g fq(1)-4 1823 y(each)i(time)g(when)g(a)h(node)f(is)h
(expanded,)g(there)e(are)i(exactly)f(2)p fk(h)1130 1805 y fg(0)1142 1823 y fi
(\()p fk(d)e fl(\000)h fq(1)p fi(\))f(+)h fq(1)h(or)g fi(\()p fq(2)p fk(h)
1518 1805 y fg(0)1541 1823 y fi(+)f fq(1)p fi(\)\()p fk(d)f fl(\000)h fq(1)p
fi(\))f(+)h fq(1)-4 1901 y(frontier)7 b(nodes)h(at)h(time)f fk(T)449 1908 y fj
(1)468 1901 y fq(.)34 b(W)n(ithout)8 b(loss)h(of)f(generality)l(,)i(we)f(assu\
me)g(that)f(processor)h fk(P)1574 1908 y fj(1)1602 1901 y fq(has)g(generated)
-4 1980 y(at)j(least)h fk(h)176 1961 y fg(0)187 1980 y fi(\()p fk(d)f fl(\000)
f fq(1)p fi(\))h fq(frontier)f(nodes.)69 2125 y(Stage)h(2)i(starts)f(right)f
(after)g fk(T)589 2132 y fj(1)608 2125 y fq(.)20 b(In)13 b(this)g(stage)h(eve\
ry)e(node)h(above)g(level)g fk(h)h fq(expanded)f(by)g(processor)-4 2203 y fk
(P)27 2210 y fj(1)62 2203 y fq(will)j(have)g fk(d)h fq(children,)g(while)f
(every)g(node)g(at)g(level)g fk(h)h fq(or)f(expanded)g(by)g(processor)g fk
(P)1647 2210 y fj(2)1683 2203 y fq(will)f(have)-4 2281 y(no)d(children.)20 b
(Stage)12 b(2)h(terminates)g(at)g(time)g fk(T)816 2288 y fj(2)847 2281 y fq
(when)g(one)g(of)f(the)h(following)f(two)h(conditions)f(becomes)-4 2360 y(tru\
e:)-4 2577 y fo(C1)24 b fq(At)12 b(least)h fk(h)275 2559 y fg(0)287 2577 y fi
(\()p fk(d)e fl(\000)g fq(1)p fi(\))h fq(cross)h(nodes)g(have)f(been)h(schedu\
led.)-4 2712 y fo(C2)24 b fq(At)12 b(least)h fk(N)j fl(\000)11 b fk(h)g fl
(\000)g fq(2)p fk(d)i fq(nodes)f(have)h(been)f(generated.)908 2836 y(70)p eop
%%Page: 71 85
 bop 148 53 a fq(The)13 b(following)e(shows)i(that)f(C1)g(or)g(C2)g(must)g
(become)h(true)e(sometime,)i(i.e.,)g fk(T)1561 60 y fj(2)1592 53 y fq(exists.)
19 b(Recall)12 b(that)75 132 y(by)k(the)h(end)g(of)f(stage)h(1)f(processor)h
fk(P)765 139 y fj(1)800 132 y fq(has)g(generated)g(at)f(least)h fk(h)1282 114
y fg(0)1294 132 y fi(\()p fk(d)d fl(\000)f fq(1)p fi(\))j fq(frontier)f(nodes\
.)32 b(In)16 b(stage)75 210 y(2)i(processor)f fk(P)357 217 y fj(1)394 210 y fq
(will)h(generate)f(nodes)h(in)g(the)f(subtrees)i(rooted)e(at)g(those)h(fronti\
er)f(nodes)h(which)f(are)75 288 y(still)d(in)g fk(P)248 295 y fj(1)267 288 y
fq(.)23 b(For)13 b(each)h(of)g(these)g(subtrees,)h(since)f(its)g(root)g(is)g
(in)g(area)g(1)g(of)f(Figure)g(5.3,)i(the)f(subtree)g(can)75 366 y(have)h(at)
g(least)g fk(N)j fl(\000)12 b fk(h)h fl(\000)f fq(2)p fk(d)j fq(nodes)g(unles\
s)h(some)f(of)g(these)g(nodes)g(are)g(moved)f(to)h(processor)g fk(P)1819 373 y
fj(2)1853 366 y fq(from)75 445 y(processor)f fk(P)311 452 y fj(1)330 445 y fq
(.)23 b(If)13 b(C1)h(does)g(not)g(hold,)g(then)g(fewer)f(than)h fk(h)1137 427
y fg(0)1148 445 y fi(\()p fk(d)e fl(\000)g fq(1)p fi(\))i fq(nodes)g(can)g
(be)g(moved)f(from)g fk(P)1878 452 y fj(1)1911 445 y fq(to)75 523 y fk(P)106
530 y fj(2)125 523 y fq(.)18 b(Consequently)m(,)13 b(some)f(subtree)g(will)f
(have)h(at)g(least)g fk(N)j fl(\000)10 b fk(h)g fl(\000)g fq(2)p fk(d)i fq
(nodes,)h(and)f(thus)g(C2)g(will)f(be)h(true.)148 668 y(Stage)h(3)g(starts)g
(right)f(after)g(time)g fk(T)769 675 y fj(2)787 668 y fq(.)20 b(Lemma)13 b
(5.2)g(below)g(shows)g(that)g(properties)f(I1-I4)f(of)i(Lemma)75 746 y(5.1)h
(hold)g(for)f(the)h(tree)g(at)g(time)g fk(T)672 753 y fj(2)690 746 y fq(.)23 b
(In)14 b(stage)g(3,)h(we)f(follow)g(the)f(procedure)h(described)g(in)g(the)g
(proof)f(of)75 825 y(Lemma)g(5.1)f(to)h(grow)e(the)i(tree)f(to)g(a)h fi(\()p
fk(N)r(;)8 b(h;)g(d)p fi(\))p fq(-tree.)197 1216 y fo(Lemma)14 b(5.2)24 b fm
(At)e(any)g(time)g(in)f(stage)h(1)g(or)g(2,)j(including)c(time)g fk(T)1435
1223 y fj(2)1454 1216 y fm(,)j(the)e(tr)n(ee)g(satis\256es)197 1294 y(pr)n
(operties)13 b(I1-I4)e(of)i(Lemma)f(5.1.)197 1533 y fo(Proof.)34 b fq(It)18 b
(is)g(obvious)g(from)f(the)g(descriptions)h(of)g(stages)h(1)f(and)g(2)f(that)
h(I2)g(and)g(I3)f(are)197 1611 y(satis\256ed.)22 b(For)13 b(I1,)h(we)f(note)h
(that)f(the)g(total)h(number)e(of)h(nodes)h(generated)f(in)h(stage)g(1)f(is)h
(at)197 1689 y(most)d fi(\()p fq(2)p fk(h)377 1671 y fg(0)397 1689 y fi(+)e fq
(1)p fi(\))p fk(d)g fi(+)f fq(1,)k(and)f(thus)h(at)f(most)g fk(N)j fl(\000)8 b
fk(h)h fl(\000)f fk(d)k fq(by)f(restriction)f(S1)h(of)g(Theorem)g(5.5.)197
1767 y(In)h(stage)h(2,)h(I1)e(obviously)g(holds)h(when)f(C2)h(is)g(not)g(true\
.)19 b(Suppose)12 b(that)h(C2)g(becomes)g(true)197 1846 y(at)f(time)f fk(T)
374 1853 y fj(2)392 1846 y fq(.)18 b(Since)12 b(the)f(tree)h(has)g(no)g(more)
f(than)g fk(N)k fl(\000)9 b fk(h)h fl(\000)f fq(2)p fk(d)j fq(nodes)g(in)g
(the)f(previous)g(time)197 1924 y(step)h(and)g(since)g(at)f(most)h fk(d)g fq
(nodes)g(can)g(be)g(generated)f(\(in)g(processor)h fk(P)1454 1931 y fj(1)1473
1924 y fq(\))f(in)g(one)h(time)f(step,)197 2002 y(there)h(are)g(at)h(most)f fk
(N)k fl(\000)11 b fk(h)g fl(\000)g fk(d)i fq(nodes)g(at)f(time)g fk(T)1079
2009 y fj(2)1097 2002 y fq(.)272 2086 y(Property)d(I4)h(clearly)h(holds)f(for)
g(stage)h(1)g(by)f(examining)h(its)f(description.)18 b(It)10 b(remains)g(to)
197 2164 y(prove)i(that)h(I4)f(holds)h(for)f(stage)i(2.)20 b(The)13 b(proof)f
(is)h(similar)f(to)h(the)g(earlier)f(proof)g(of)h(the)f(fact)197 2242 y(that)
g(C1)g(or)g(C2)h(must)f(become)g(true)g(in)g(stage)h(2.)18 b(Recall)13 b(that)
f(in)g(stage)h(1)f(processor)g fk(P)1730 2249 y fj(1)1762 2242 y fq(has)197
2321 y(generated)d(at)g(least)g fk(h)573 2303 y fg(0)585 2321 y fi(\()p fk
(d)t fl(\000)s fq(1)p fi(\))g fq(frontier)f(nodes.)17 b(W)l(e)10 b(note)e(tha\
t)h(any)g(of)g(these)g(subtrees)h(rooted)197 2399 y(at)f(these)h(nodes)g(is)g
(an)g(HFD-subtree)e(if)h(the)h(subtree)f(does)h(not)f(contain)h(any)f(expande\
d)h(cross)197 2477 y(node.)18 b(Since)10 b(the)h(number)f(of)g(cross)h(nodes)
g(expanded)g(\(not)f(just)g(scheduled\))h(through)e(time)197 2555 y fk(T)226
2562 y fj(2)256 2555 y fq(is)k(less)g(than)f fk(h)515 2537 y fg(0)526 2555 y
fi(\()p fk(d)f fl(\000)f fq(1)p fi(\))p fq(,)j(one)f(of)g(these)g(subtrees)g
(must)h(be)f(an)g(HFD-subtree.)17 b(Note)12 b(that)197 2634 y(if)h(C2)h(becom\
es)g(true)f(at)g(time)g fk(T)772 2641 y fj(2)804 2634 y fq(\(in)g(the)h(node)
f(scheduling)h(phase\),)g(the)f(node)h(scheduled)197 2712 y(has)f(not)f(been)
g(expanded.)716 2676 y 29 2 v 48 x 2 49 v 26 w 2 49 v 716 2726 a 29 2 v 988
2836 a(71)p eop
%%Page: 72 86
 bop 69 53 a fq(T)m(o)12 b(complete)f(the)h(proof)f(of)h(Theorem)g(5.5,)h(we)
f(observe)g(that)g(if)f(C1)i(becomes)f(true)g(at)g(some)g(time)g(in)-4 132 y
(stage)g(2)f(or)h(3,)g(it)f(will)h(remain)f(true)g(for)g(the)h(rest)f(of)h
(the)f(tree)h(construction)f(process.)19 b(Therefore)11 b(property)-4 210 y
(T2)h(of)g(Theorem)h(5.5)f(will)g(hold)g(for)g(the)g(\256nal)g fi(\()p fk(N)s
(;)7 b(h;)h(d)p fi(\))p fq(-tree.)69 355 y(Now)h(assuming)h(that)f(C1)h(never)
f(holds)g(at)h(any)f(time)g(in)h(stage)g(2)f(or)g(3,)i(we)e(want)h(to)f(show)
g(that)h(property)-4 433 y(T1)i(of)f(Theorem)h(5.5)g(will)f(hold)h(for)f(the)
h(\256nal)f fi(\()p fk(N)s(;)d(h;)f(d)p fi(\))p fq(-tree.)18 b(W)l(e)12 b(der\
ive)g(an)g(upper)f(bound)g(on)h(the)g(total)-4 512 y(number)f(of)h(nodes)g
(expanded)g(by)h(processor)f fk(P)842 519 y fj(2)861 512 y fq(.)18 b(The)13 b
(upper)f(bound)g(is)g(the)g(sum)h(of)e(four)h(terms)g fk(U)1763 519 y fj(1)
1781 512 y fq(,)h fk(U)1839 519 y fj(2)1858 512 y fq(,)-4 590 y fk(U)29 597 y
fj(3)63 590 y fq(and)i fk(U)183 597 y fj(4)202 590 y fq(.)27 b(In)15 b(stage)
h(1,)g(processor)f fk(P)706 597 y fj(2)741 590 y fq(has)h(expanded)f(at)g(mos\
t)g fk(U)1225 597 y fj(1)1262 590 y fi(=)j fq(2)p fk(h)1371 572 y fg(0)1395
590 y fi(+)13 b fq(1)i(nodes.)28 b(At)15 b(time)g fk(T)1840 597 y fj(1)1858
590 y fq(,)-4 668 y(processor)c fk(P)229 675 y fj(2)259 668 y fq(can)h(have)f
(generated)g(up)g(to)g fi(\()p fk(h)808 650 y fg(0)828 668 y fi(+)e fq(1)p fi
(\)\()p fk(d)f fl(\000)h fq(1)p fi(\))f(+)h fq(1)i(frontier)e(nodes,)k(each)e
(of)g(which)g(can)g(be)-4 746 y(expanded)i(at)i(most)f(once)g(by)g(processor)
g fk(P)770 753 y fj(2)803 746 y fq(in)g(stage)g(2)g(or)g(3.)23 b(It)13 b(is)i
(also)f(possible)g(for)g(processor)g fk(P)1799 753 y fj(2)1832 746 y fq(to)-4
825 y(expand)f(nodes)i(which)e(are)h(generated)g(by)f fk(P)796 832 y fj(1)830
825 y fq(but)g(subsequently)h(moved)g(to)g fk(P)1415 832 y fj(2)1434 825 y fq
(.)23 b(The)14 b(total)g(number)f(of)-4 903 y(these)d(nodes)h(is)g(at)f(most)
g fk(C)467 910 y fg(A)498 903 y fi(\()p fk(H)t fi(\))k fl(\024)f fk(U)679 910
y fj(3)712 903 y fi(=)h fk(h)792 885 y fg(0)803 903 y fi(\()p fk(d)7 b fl(\
\000)g fq(1)p fi(\))p fq(.)17 b(Moreover)n(,)11 b(to)f(take)h(care)f(of)g(the)
g(nodes)h(generated)-4 981 y(after)k fk(T)132 988 y fj(2)166 981 y fq(in)h
(stage)g(3,)h(processor)f fk(P)631 988 y fj(2)667 981 y fq(may)f(expand)h(up)
g(to)g fk(U)1082 988 y fj(4)1119 981 y fl(\024)j fk(h)13 b fi(+)g fq(2)p fk
(d)j fq(nodes.)30 b(Therefore)15 b(the)h(total)-4 1059 y(number)d(of)h(nodes)
g(expanded)g(by)g(processor)g fk(P)853 1066 y fj(2)886 1059 y fq(is)h(at)f
(most)g fk(U)21 b fi(=)c fk(U)1237 1066 y fj(1)1267 1059 y fi(+)12 b fk(U)
1350 1066 y fj(2)1381 1059 y fi(+)g fk(U)1464 1066 y fj(3)1495 1059 y fi(+)g
fk(U)1578 1066 y fj(4)1613 1059 y fl(\024)k fq(3)p fk(dh)p fq(.)24 b(This)-4
1138 y(implies)11 b(that)h(processor)g fk(P)475 1145 y fj(1)507 1138 y fq(has)
g(expanded)g(at)h(least)f fk(N)k fl(\000)10 b fk(U)19 b fi(=)14 b fk(N)i fl
(\000)10 b fq(3)p fk(dh)p fq(;)j(that)f(is,)h(property)e(T1)h(holds.)-4 1180 y
29 2 v 48 x 2 49 v 26 w 2 49 v -4 1230 a 29 2 v 359 x fd(5.1.4)57 b(Pr)o(oof)
14 b(of)h(Theor)o(em)f(5.1)-4 1796 y fq(Suppose)e(that)h(we)h(are)f(given)f
(a)i(scheduling)f(algorithm)e fl(A)i fq(for)g(performing)e(a)i(D&C)g(computat\
ion)f(on)h(a)-4 1874 y(parallel)c(system)h(of)g fk(p)g fq(processors.)18 b
(For)9 b(algorithm)g fl(A)p fq(,)h(we)g(will)g(prove)f(the)h(existence)g(of)g
(a)g fi(\()p fk(N)r(;)e(h;)g(d)p fi(\))p fq(-tree)-4 1952 y fk(H)14 b fq(for)
9 b(which)h(either)f(only)h fk(p)496 1934 y fg(0)518 1952 y fq(processors)g
(are)g(active)g(for)f(expanding)g(most)h(of)g(nodes)g(\(at)f(least)i fk(N)
1716 1934 y fg(0)1738 1952 y fq(nodes\))-4 2030 y(or)g(at)h(least)h fk(C)239
2012 y fg(0)263 2030 y fq(nodes)f(are)g(moved)g(between)g(processors)h(to)f
(balance)g(their)g(computation)f(loads.)18 b(For)12 b(the)-4 2109 y(former)l
(,)h(the)e(parallel)h(computation)f(cost)h(will)f(be)h(high,)g(i.e.,)i fk(T)
1117 2116 y fg(A)1147 2109 y fi(\()p fk(H)t fi(\))g fl(\025)f fk(N)1339 2090 y
fg(0)1351 2109 y fk(=p)1399 2090 y fg(0)1423 2109 y fq(\(property)e(Q1\).)18 b
(For)11 b(the)-4 2187 y(latter)m(,)i(the)f(number)g(of)g(cross)h(nodes)f(will)
g(be)h(lar)n(ge,)g(i.e.,)h fk(C)1050 2194 y fg(A)1080 2187 y fi(\()p fk(H)t fi
(\))g fl(\025)g fk(C)1267 2169 y fg(0)1291 2187 y fq(\(property)d(Q2\).)69
2332 y(By)j(playing)g(an)g(adversary)g(game)g(with)g(algorithm)f fl(A)p fq
(,)i(we)f(will)g(construct)f(the)i(tree)f(by)g(growing)f(it)-4 2410 y(from)f
(the)h(root)f(one)h(step)h(at)f(a)g(time.)21 b(The)14 b(de\256nition)e(of)h
(time)f(step)i(is)f(the)g(same)h(as)g(that)f(in)g(the)g(proof)f(of)-4 2488 y
(Theorem)g(5.5.)69 2634 y(W)l(e)j(will)f(give)g(some)h(more)f(de\256nitions)g
(in)h(Section)f(5.1.4.1)i(and)e(then)h(give)f(the)h(main)f(part)g(of)h(this)
-4 2712 y(proof)c(in)h(Section)g(5.1.4.2.)19 b(All)12 b(the)h(related)f(lemma\
s)g(are)h(in)f(Section)g(5.1.4.3.)908 2836 y(72)p eop
%%Page: 73 87
 bop 75 53 a fo(5.1.4.1)51 b(De\256nitions)75 232 y fq(T)m(o)10 b(help)g(deri\
ve)g(a)g(lower)g(bound)g(on)g(the)g(number)f(of)h(cross)h(nodes,)g(we)f(intro\
duce)g(the)g(following)f(relation)75 310 y(between)j(subtrees.)197 627 y fo
(De\256nition)f(5.2)24 b fm(A)16 b(set)f(of)f(subtr)o(ees)h(is)g(pr)o(ocessor\
-or)o(-ancestry)g(independent)f(\(abbr)-5 b(.)25 b(P)-6 b(A-)197 706 y(indepe\
ndent\))11 b(if)g(for)h(each)f(pair)h(of)f(subtr)o(ees)h(in)f(the)h(set)g(at)
f(least)h(one)f(of)h(the)f(following)g(two)197 784 y(pr)n(operties)i(is)g(sat\
is\256ed:)242 883 y(1.)25 b(Pr)o(ocessor)18 b(Independence:)26 b(the)17 b(r)n
(oots)g(of)g(these)g(two)g(subtr)n(ees)h(ar)n(e)f(generated)g(on)304 961 y
(differ)n(ent)c(pr)n(ocessors;)242 1060 y(2.)25 b(Ancestry)14 b(Independence:)
k(neither)13 b(is)h(a)e(subtr)o(ee)h(of)g(the)f(other)-5 b(.)20 b(That)12 b
(is,)i(ther)n(e)f(is)g(no)304 1138 y(ancestor-descendant)f(r)n(elationship)g
(between)h(the)f(two)h(r)n(oots.)148 1336 y fq(Note)c(that)g(for)f(two)h(P)-5
b(A-independent)8 b(subtrees)i(rooted)e(at)h(nodes)g fk(r)1318 1343 y fj(1)
1346 1336 y fq(and)g fk(r)1449 1343 y fj(2)1468 1336 y fq(,)h(if)f(node)g fk
(r)1658 1343 y fj(1)1686 1336 y fq(is)g(an)g(ancestor)75 1414 y(of)k(node)f fk
(r)261 1421 y fj(2)280 1414 y fq(,)i(then)f(both)f(nodes)i(must)e(be)i(genera\
ted)e(on)h(dif)o(ferent)f(processors.)20 b(This)14 b(implies)f(that)f(there)
75 1493 y(must)g(exist)g(at)g(least)g(one)g(cross)h(node)f(on)f(the)h(path)g
(from)f(node)h fk(r)1221 1500 y fj(1)1252 1493 y fq(\(inclusive\))f(to)h(the)
f(parent)h(\(inclusive\))75 1571 y(of)f(node)f fk(r)257 1578 y fj(2)276 1571 y
fq(.)18 b(Therefore,)11 b(from)f(this)h(property)l(,)h(if)e(there)h(are)g fk
(k)i fq(P)-5 b(A-independent)10 b(subtrees)h(each)h(of)e(which)75 1649 y(has)
i(at)g(least)g(one)f(expanded)h(cross)g(node,)g(then)f(there)h(are)f(at)h(lea\
st)g fk(k)h fq(expanded)f(cross)g(nodes)g(in)f(the)h(tree.)75 1727 y(This)h
(is)g(shown)f(in)g(Lemma)h(5.3)g(\(in)f(Section)f(5.1.4.3\).)197 2044 y fo
(De\256nition)g(5.3)24 b fm(An)12 b(HFDC-subtr)o(ee)f(is)h(an)f(HFD-subtr)n
(ee)h(\(as)f(de\256ned)g(in)g(De\256nition)f(5.1\))197 2123 y(or)g(a)f(subtr)
o(ee)g(with)h(at)f(least)h(one)f(cr)o(oss)h(node)f(alr)n(eady)h(expanded.)17 b
(If)9 b(the)h(r)n(oot)f(of)h(an)f(HFDC-)197 2201 y(subtr)o(ee)16 b(is)h(gener\
ated)g(on)g(pr)n(ocessor)h fk(P)7 b fm(,)19 b(the)d(subtr)o(ee)h(is)g(called)
f(an)h(HFDC-subtr)n(ee)g(on)197 2279 y(pr)n(ocessor)d fk(P)7 b fm(.)148 2477 y
fq(By)k(Lemma)h(5.3)f(and)g(De\256nition)g(5.3,)h(if)e(there)h(are)g fk(k)i fq
(P)-5 b(A-independent)11 b(HFDC-subtrees)g(and)g(fewer)75 2555 y(than)j fk
(k)i fq(expanded)e(cross)g(nodes,)h(then)f(there)g(exists)g(an)g(HFD-subtree,)
g(as)g(shown)h(in)e(Lemma)h(5.4.)24 b(W)l(e)75 2634 y(will)14 b(use)g(this)g
(lemma)g(to)g(show)g(the)g(existence)h(of)e(an)h(HFD-subtree)g(during)f(some)
h(periods)g(of)f(the)h(tree)75 2712 y(construction)e(procedure.)988 2836 y
(73)p eop eos end TeXDict begin bos 300 @start /fa df[<040E0E1C1C1C3838307070
6060C0C0>7 15 1 -1 10]48 dc dfe /fb 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 10 14 23 21 21 42 35 14 14 14 21 24 10 14 10 12 21 21 21
21 21 21 21 21 21 21 14 14 24 24 24 21 39 30 28 30 30 28 25 32 32 16 21 32 28
39 30 32 25 32 30 23 28 30 30 42 30 30 28 14 12 14 24 21 14 21 23 18 23 18 14
21 23 12 14 23 12 35 23 21 23 23 18 16 14 23 21 30 21 21 18 16 9 16 22 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 14 21 21 7 21 21
21 21 12 21 21 14 14 23 23 0 21 21 21 10 0 22 15 14 21 21 21 42 42 0 21 0 14
14 14 14 14 14 14 14 0 14 14 0 14 14 14 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 42
0 12 0 0 0 0 28 32 42 14 0 0 0 0 0 30 0 0 0 12 0 0 12 21 30 23 0 0 0 0
/Times-Bold 1000 655360 rf /fc df[<FFFFFFFFE0FFFFFFFFF07000001FF078000001F03C
000000781C000000180E0000000C0F000000040700000004038000000203C000000001E0000000
00E0000000007000000000780000000038000000001C000000001E000000000F00000000070000
0000038000000003800000000300000000070000000006000000000C0000000018000000003800
00000030000000006000000000C000000001C00000000180000002030000000406000000040E00
00000C0C00000018180000007830000001F07000001FF07FFFFFFFF0FFFFFFFFE0>39 42 2 42
44]80 dc dfe /fd df[<FFFFFF80FFFFFF80>25 2 3 -9 32]0 dc[<00000180000007800000
1E00000078000001E00000078000001E00000078000001E00000078000001E00000078000000E0
000000780000001E0000000780000001E0000000780000001E0000000780000001E00000007800
00001E000000078000000180000000000000000000000000000000000000000000000000000000
007FFFFF00FFFFFF80>25 34 3 8 32]20 dc[<00000300000000030000000001800000000180
00000000C00000000060007FFFFFF000FFFFFFF8000000000E00000000070000000001E0000000
007800000001E0000000038000000006000000001C00FFFFFFF8007FFFFFF00000000060000000
00C0000000018000000001800000000300000000030000>37 24 2 2 42]41 dc dfe /fe df[<
FFFFF00F00F00F00300F00100F00100F00180F00080F00080F00080F00000F00000F00000F0000
0F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0000
0F8000FFF800>21 28 2 0 26]0 dc[<004000800100020006000C000C00180018003000300070
00600060006000E000E000E000E000E000E000E000E000E000E000E000E0006000600060007000
30003000180018000C000C0006000200010000800040>10 42 3 11 16]40 dc[<800040002000
100018000C000C000600060003000300038001800180018001C001C001C001C001C001C001C001
C001C001C001C001C0018001800180038003000300060006000C000C0018001000200040008000
>10 42 2 11 16]41 dc[<00060000000600000006000000060000000600000006000000060000
000600000006000000060000000600000006000000060000FFFFFFE0FFFFFFE000060000000600
000006000000060000000600000006000000060000000600000006000000060000000600000006
000000060000>27 28 2 4 32]43 dc[<7FFFFFC0FFFFFFE00000000000000000000000000000
000000000000000000000000000000000000FFFFFFE07FFFFFC0>27 12 2 -4 32]61 dc dfe
/ff df[<0FFFF81FFFF83FFFF0608400408400808C00010C00010C00030C00030C00020C00061C
00061C000E1C000C1C001C0E001C0E00180C00>21 18 2 0 24]25 dc[<60F0F0701010101020
204080>4 12 4 8 12]59 dc[<0001F808000E061800380138006000F001C00070038000700700
00300F0000200E0000201C0000203C0000203C000000780000007800000078000000F0000000F0
000000F0000000F0000000F0000100F0000100F000010070000200700002003000040038000800
1C0010000E0060000701800000FE0000>29 30 2 1 30]67 dc[<01FE0000FF003E0000F0002E
0001E0002E0002E0002E0002E0002E0004E0004E0009C0004E0009C000470011C000470011C000
870023800087004380008700438000870083800107010700010701070001038207000103820700
0203840E000203880E000203880E000203900E000403A01C000403A01C000401C01C000C01C01C
001C01803C00FF8103FF80>40 28 2 0 40]77 dc[<01FC00FF80001C001C00002E001800002E
001000002E001000002700100000470020000043002000004380200000438020000081C0400000
81C040000081C040000080E040000100E080000100708000010070800001007080000200390000
0200390000020039000002001D000004001E000004000E000004000E00000C000E00001C000400
00FF80040000>33 28 2 0 33]78 dc[<1FFFFFF01C0380703007003020070020600700204007
0020400E0020800E0020800E0020000E0000001C0000001C0000001C0000001C00000038000000
38000000380000003800000070000000700000007000000070000000E0000000E0000000E00000
00E0000001E000007FFF0000>28 28 1 0 24]84 dc[<0007E00000E00000E00001C00001C000
01C00001C000038000038000038000038001E7000717000C0F00180F00380E00300E00700E0070
0E00E01C00E01C00E01C00E01C00E03880E03880E038806078803199001E0E00>19 29 2 0 22]
100 dc[<0FC00001C00001C0000380000380000380000380000700000700000700000700000E3E
000EC3000F03800E03801E03801C03801C03801C0380380700380700380700380E00700E20700E
20701C20701C40E00C80600700>19 29 2 0 24]104 dc[<07078009C86008D03008E03011C030
11C03801C03801C0380380700380700380700380600700E00700C00701800783000E86000E7800
0E00000E00001C00001C00001C00001C00003C0000FF8000>21 26 -1 8 21]112 dc dfe /fg
df[<0102040C1818303070606060E0E0E0E0E0E0E0E0E0E060606070303018180C040201>8 34
3 9 14]40 dc[<8040203018180C0C0E060606070707070707070707070606060E0C0C18183020
4080>8 34 2 9 14]41 dc[<003000003000003000003000003000003000003000003000003000
003000003000FFFFFCFFFFFC003000003000003000003000003000003000003000003000003000
003000003000>22 24 2 4 27]43 dc dfe /fh 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 15 19 32 29 29 58 48 19 19 19 29 33 15 19 15 16 29
29 29 29 29 29 29 29 29 29 19 19 33 33 33 29 54 42 39 42 42 39 36 45 45 23 29
45 39 55 42 45 36 45 42 32 39 42 42 58 42 42 39 19 16 19 34 29 19 29 32 26 32
26 19 29 32 16 19 32 16 48 32 29 32 32 26 23 19 32 29 42 29 29 26 23 13 23 30
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 19 29 29
10 29 29 29 29 16 29 29 19 19 32 32 0 29 29 29 15 0 31 20 19 29 29 29 58 58 0
29 0 19 19 19 19 19 19 19 19 0 19 19 0 19 19 19 58 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 58 0 17 0 0 0 0 39 45 58 19 0 0 0 0 0 42 0 0 0 16 0 0 16 29 42 32 0 0 0 0
/Times-Bold 1000 917504 rf /fi df[<007800180018003000300030073018E03060606060
60C0C0C0C0C0C841C862D03C70>13 17 2 0 16]100 dc[<040C00000000007058989830306064
646830>6 18 2 0 11]105 dc[<73C09C20986098001800300030003000300060006000>11 11
2 0 14]114 dc[<08181818FF30303030606062646438>8 15 2 0 12]116 dc dfe /fj df[<
081C1C3838383070706060C0C0>6 13 2 -1 9]48 dc dfe /fk df[<0000300000F00001C000
0700001E0000780001E0000380000E00003C0000F00000F000003800000E000007800001E00000
7800001C000007000003C00000F00000300000000000000000000000000000000000007FFFE0FF
FFF0>20 30 3 8 27]20 dc[<060F0F0E1E1E1C3C383830707060E0C040>8 17 1 -1 10]48 dc
[<00001800000038000000380000007800000078000000F8000000B8000001B800000138000003
38000006380000063800000C380000183C0000183C0000301C00006FFC00007FFC0000C01C0001
801C0083801E00C7001E00FE000F807C000F0038000000>25 25 1 1 28]65 dc[<7F80FF80C0
00C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000
C000C000C000C000C000C000C000C000C000C000C0004000>9 34 6 9 16]100 dc[<FF80FF80
018001800180018001800180018001800180018001800180018001800180018001800180018001
80018001800180018001800180018001800180018001800080>9 34 0 9 16]101 dc dfe /fl
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 10 12 15 15
24 23 10 10 10 15 16 7 10 7 8 15 15 15 15 15 15 15 15 15 15 8 8 16 16 16 13 27
21 19 19 21 18 16 21 21 10 11 21 18 26 21 21 16 21 19 16 18 21 21 27 21 21 18
10 8 10 14 15 10 13 15 13 15 13 10 15 15 8 8 15 8 23 15 15 15 15 10 11 8 15 15
21 15 15 13 14 6 14 16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 10 15 15 5 15 15 15 15 5 13 15 10 10 16 16 0 15 15 15 7 0 13 10 10
13 13 15 29 29 0 13 0 10 10 10 10 10 10 10 10 0 10 10 0 10 10 10 29 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 26 0 8 0 0 0 0 18 21 26 9 0 0 0 0 0 19 0 0 0 8 0 0 8 15
21 15 0 0 0 0 /Times-Roman 1000 458752 rf /fm df[<0FFFC01FFFC02108004110008110
000210000210000210000610000410000C10000C1800181800180800>18 14 1 0 20]25 dc[<
60F0F070101020204040>4 10 3 6 10]59 dc[<003E000C000C000C000C001800180018001807
3018F0307060706060C060C060C06080C080C480C4C1C446C83870>15 23 2 0 18]100 dc[<07
C01C20301060106020FFC0C000C000C000C000C010402060C01F00>12 14 2 0 16]101 dc[<1F
0006000600060006000C000C000C000C0018F01B181C0818083818301830183030603060316061
6062C022C03C>16 23 2 0 20]104 dc[<0300038003000000000000000000000000001C002400
460046008C000C0018001800180031003100320032001C00>9 23 1 0 12]105 dc[<00180038
001000000000000000000000000001C0022004300430086000600060006000C000C000C000C001
800180018001806300E300C6007800>13 29 0 6 14]106 dc[<3E0C0C0C0C1818181830303030
60606060C0C8C8C8D070>7 23 2 0 11]108 dc[<383C1E0044C6630047028100460301008E07
03000C0603000C0603000C060600180C0600180C0620180C0C20180C0C403018044030180780>
27 14 1 0 31]109 dc[<1C3C22462382230346030603060306030C060C060C0C0C081A3019E0
18001800300030003000FC00>16 20 0 6 18]112 dc[<38F04518463846308C000C000C000C00
180018001800180030003000>13 14 1 0 16]114 dc[<07C00C201870187038001E000FC003E0
00606060E060C0C0C1803F00>12 14 2 0 16]115 dc[<030003000600060006000600FFC00C00
0C000C001800180018001800300030803080310031001E00>10 20 1 0 13]116 dc dfe /fn
df[<FFFFFF000F801F000780070007800300078001000780010007800180078000800780008007
800080078000800780000007800000078000000780000007800000078000000780000007800000
078000000780000007800000078000000780000007800000078000000780000007800000078000
000780000007800000078000000FC00000FFFE0000>25 34 2 0 30]0 dc[<000FE00000783C00
00E00E0003C00780078003C00F0001E00E0000E01E0000F03E0000F83C0000787C00007C7C0000
7C7800003C7800003CF840043EF840043EF87FFC3EF87FFC3EF87FFC3EF840043EF840043EF800
003EF800003E7800003C7C00007C7C00007C3C0000783C0000781E0000F00E0000E00F0001E007
8003C003C0078000E00E0000783C00000FE000>31 36 3 1 38]2 dc[<00200040008001000300
060004000C000C00180018003000300030007000600060006000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E0006000600060007000300030003000180018000C000C000400
060003000100008000400020>11 50 4 13 19]40 dc[<800040002000100018000C0004000600
06000300030001800180018001C000C000C000C000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000C000C000C001C0018001800180030003000600060004000C0018001000
200040008000>11 50 3 13 19]41 dc[<00018000000180000001800000018000000180000001
800000018000000180000001800000018000000180000001800000018000000180000001800000
018000FFFFFFFEFFFFFFFE00018000000180000001800000018000000180000001800000018000
000180000001800000018000000180000001800000018000000180000001800000018000>31 34
3 5 38]43 dc[<FFFFFFFEFFFFFFFE000000000000000000000000000000000000000000000000
0000000000000000FFFFFFFEFFFFFFFE>31 12 3 -6 38]61 dc dfe /fo 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 11 14 17 17 28 26 11 11 11 17
19 8 11 8 9 17 17 17 17 17 17 17 17 17 17 9 9 19 19 19 15 31 24 22 22 24 20 18
24 24 11 13 24 20 30 24 24 18 24 22 18 20 24 24 31 24 24 20 11 9 11 16 17 11
15 17 15 17 15 11 17 17 9 9 17 9 26 17 17 17 17 11 13 9 17 17 24 17 17 15 16 7
16 18 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11
17 17 6 17 17 17 17 6 15 17 11 11 18 18 0 17 17 17 8 0 15 12 11 15 15 17 33 33
0 15 0 11 11 11 11 11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 30 0 9 0 0 0 0 20 24 30 10 0 0 0 0 0 22 0 0 0 9 0 0 9 17 24 17 0 0 0 0
/Times-Roman 1000 524288 rf /fp df[<000F8000186000602000401000C000018000018000
01800001800001C00001E00001F00000F800003C00003E0000EF000387000703800E03801C0180
3C01803C0180780180780180780180F00100F00100F00300F00200700600700400300C00380800
1C300007C000>20 35 2 0 22]14 dc[<0300700701F80702780E04700E08000E30000E40001C
80001F00001FF0001C3C00380E00380E00380700380704700E08700E08700E08700610E0032060
01C0>22 21 3 0 28]20 dc[<03800000E00000F000007000007000007800003800003800003C
00001C00001C00001C00001E00000E00000E00000F00000700000700000780000780000F80001B
800031C00021C00041C000C1E00180E00300E00600F00C00701C0070380078700038E00038C000
1C>22 35 3 0 28]21 dc[<07FFFF1FFFFF3FFFFF30410040410080410080C300008200008200
0182000182000106000306000307000707000607000E07000E07001C03801C0380180300>24 21
2 0 28]25 dc[<70F8F8F870>5 5 4 0 14]58 dc[<70F8FCFC7404040404080810102040>6 15
4 10 14]59 dc[<0000001800000078000001E00000078000001E00000078000003E000000F80
00003C000000F0000003C000000F0000003C000000F0000000F00000003C0000000F00000003C0
000000F00000003C0000000F80000003E0000000780000001E0000000780000001E00000007800
000018>29 28 4 2 38]60 dc[<00008000018000018000030000030000030000060000060000
0600000C00000C00000C0000180000180000180000300000300000300000600000600000600000
C00000C00000C0000180000180000180000180000300000300000300000600000600000600000C
00000C00000C0000180000180000180000300000300000300000600000600000600000C00000C0
0000C00000>17 49 3 12 24]61 dc[<00007F00800003808100000E0063000038002700007000
1F0000E0000E0001C0000E000380000E000700000E000F000004000E000004001E000004003C00
0004003C00000800780000000078000000007800000000F000000000F000000000F000000000F0
00000000F000000000E000000000E000002000E000002000E000004000E000004000F000008000
70000080007000010000380002000018000400001C0008000006003000000381C0000000FE0000
00>33 36 3 1 35]67 dc[<007FFC1FFF00078001E000078001E000078001E0000F0003C0000F
0003C0000F0003C0000F0003C0001E000780001E000780001E000780001E000780003C000F0000
3C000F00003C000F00003C000F00007FFFFE000078001E000078001E000078001E0000F0003C00
00F0003C0000F0003C0000F0003C0001E000780001E000780001E000780001E000780003C000F0
0003C000F00003C000F00003C000F00007C001F000FFFC3FFF00>40 34 2 0 40]72 dc[<007F
FE000007C0000007800000078000000F0000000F0000000F0000000F0000001E0000001E000000
1E0000001E0000003C0000003C0000003C0000003C000000780000007800000078000000780000
00F0000000F0000000F0001000F0001001E0002001E0002001E0004001E0004003C000C003C000
8003C0018003C0078007C01F00FFFFFF00>28 34 2 0 33]76 dc[<007FC00001FF0007C00003
E00007C00005E00007C00005E00009E0000BC00009E0000BC00009E00013C00009E00023C00011
E00027800011E00047800011E00047800011E00087800021E0010F000020F0010F000020F0020F
000020F0040F000040F0041E000040F0081E000040F0081E000040F0101E000080F0203C000080
78203C00008078403C00008078803C0001007880780001007900780001007900780001007A0078
0002007C00F00002007C00F00002003800F00006003800F0000F003001F000FFE0203FFF00>48
34 2 0 47]77 dc[<007FC003FF0007C000780007C000600005E000200009E000400009E00040
0008F000400008F000400010F800800010780080001078008000103C008000203C010000203E01
0000201E010000201E010000400F020000400F020000400F020000400782000080078400008007
C400008003C400008003C400010001E800010001E800010001F800010000F800020000F0000200
007000020000700006000070000F00002000FFE0002000>40 34 2 0 39]78 dc[<00007F0000
0381C0000E0060003800380070003800E0001C01C0001E0380000E0700000E0F00000F0E00000F
1C00000F3C00000F3C00000F7800000F7800000F7800000FF000001EF000001EF000001EF00000
3CF000003CF000003CE0000078E0000078E00000F0F00000E0F00001E0F00003C0700007807800
070038000E001C0038000E0070000783C00000FE0000>32 36 3 1 37]79 dc[<007FFFF00000
07801C000007800F000007800700000F000380000F000380000F000380000F000380001E000780
001E000780001E000780001E000F00003C000F00003C001E00003C003C00003C007000007801E0
00007FFF00000078000000007800000000F000000000F000000000F000000000F000000001E000
000001E000000001E000000001E000000003C000000003C000000003C000000003C000000007C0
000000FFFC000000>33 34 2 0 31]80 dc[<1FFFFFFE1E01E00E1801E0063001E0062003C006
2003C0064003C0044003C00440078004800780048007800400078000000F0000000F0000000F00
00000F0000001E0000001E0000001E0000001E0000003C0000003C0000003C0000003C00000078
000000780000007800000078000000F0000000F0000000F0000000F0000001F00000FFFFC000>
31 34 2 0 29]84 dc[<3FFE01FF8003C0003C0003C000300003C0001000078000200007800020
00078000200007800020000F000040000F000040000F000040000F000040001E000080001E0000
80001E000080001E000080003C000100003C000100003C000100003C0001000078000200007800
020000780002000078000200007000040000F000040000F0000800007000080000700010000070
00200000380040000038008000001C01000000060600000001F8000000>33 35 3 1 33]85 dc[
<00001E0001FC00001C00001C00001C0000380000380000380000380000700000700000700000
700000E00078E001C4E00302E00601C00E01C01C01C03C01C0380380780380780380780380F007
00F00700F00700F00708F00E10700E10701E1030262018C6200F01C0>23 35 2 0 25]100 dc[<
007C000382000701000E01001C0100380100780200700400FFF800F00000F00000E00000E00000
E00000E00000E00080E000807003003004001838000FC000>17 21 3 0 23]101 dc[<00F0000F
E00000E00000E00000E00001C00001C00001C00001C00003800003800003800003800007000007
1F0007218007C0C00F00E00F00E00E00E00E00E01C01C01C01C01C01C01C01C038038038038038
0700380704700708700E08700E08700610E006206003C0>22 35 3 0 28]104 dc[<00E000E001
E000C00000000000000000000000000000000000001E0023004380438083808380870007000E00
0E000E001C001C0038003820384070407040308031001E00>11 34 2 0 17]105 dc[<0000E000
01E00001E00000C0000000000000000000000000000000000000000000000000000000001E0000
2300004380008380010380010380010380000700000700000700000700000E00000E00000E0000
0E00001C00001C00001C00001C0000380000380000380000380000700000700000700070E000F0
C000F180006300003E0000>19 44 -1 10 20]106 dc[<00F0000FE00000E00000E00000E00001
C00001C00001C00001C0000380000380000380000380000700000700F00703080704380E08780E
10780E20300E40001C80001F00001FC0001C7000383800383800381C00381C1070382070382070
3820701840E00C80600700>21 35 3 0 25]107 dc[<3C07E01F00461830618047201880C08740
1D00E087801E00E087801C00E087001C00E00E003801C00E003801C00E003801C00E003801C01C
007003801C007003801C007007001C007007043800E007083800E00E083800E00E083800E00610
7001C006203000C003C0>38 21 2 0 43]109 dc[<3C07C0461860472030874038878038870038
8700380E00700E00700E00700E00701C00E01C00E01C01C01C01C13801C2380382380382380184
7001883000F0>24 21 2 0 29]110 dc[<03C0F004631C04740E08780E08700708700708700F00
E00F00E00F00E00F00E00F01C01E01C01E01C01E01C03C03803803803803C07003C0E007218007
1E000700000700000E00000E00000E00000E00001C00001C00001C0000FFC000>24 31 -1 10
24]112 dc[<00782001C4600302E00601C00E01C01C01C03C01C0380380780380780380780380
F00700F00700F00700F00700F00E00700E00701E00302E0018DC000F1C00001C00001C00003800
00380000380000380000700000700000700007FF00>19 31 2 10 22]113 dc[<3C0F004630C0
4741C08783C08783C08701808700000E00000E00000E00000E00001C00001C00001C00001C0000
380000380000380000380000700000300000>18 21 2 0 22]114 dc dfe /fq df[<FFFFFFFC
FFFFFFFC>30 2 4 -11 39]0 dc[<03F0000FFC001FFE003FFF007FFF807FFF80FFFFC0FFFFC0
FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC07FFF807FFF803FFF001FFE000FFC0003F000>18 20
3 -2 25]15 dc[<0000000C0000003C000000F0000003C000000F0000003C000000F0000007C0
00001F00000078000001E00000078000001E00000078000000E0000000780000001E0000000780
000001E0000000780000001F00000007C0000000F00000003C0000000F00000003C0000000F000
00003C0000000C0000000000000000000000000000000000000000000000000000000000000000
7FFFFFF8FFFFFFFC>30 39 4 7 39]20 dc[<C0000000F00000003C0000000F00000003C00000
00F00000003C0000000F80000003E0000000780000001E0000000780000001E000000078000000
1C00000078000001E00000078000001E00000078000003E000000F8000003C000000F0000003C0
00000F0000003C00000070000000C0000000000000000000000000000000000000000000000000
00000000000000000000007FFFFFF8FFFFFFFC>30 39 4 7 39]21 dc[<C00300000000F003C0
0000003800E00000000E003800000007801E00000001E007800000007801E00000001C00700000
0007001C00000003C00F00000000F003C00000003C00F00000000F003C00000003800E00000001
E007800000007801E00000007801E0000000E00380000003800E0000000E00380000003C00F000
0000F003C0000003C00F00000007001C0000001C00700000007801E0000001E00780000007801E
0000000E00380000003800E0000000F003C0000000C00300000000>43 32 3 4 50]29 dc[<00
0000006000000000003000000000003000000000001800000000001800000000000C0000000000
0600000000000380FFFFFFFFFFE0FFFFFFFFFFC0000000000380000000000600000000000C0000
0000001800000000001800000000003000000000003000000000006000>43 18 3 -3 50]33 dc
[<03F80001F80007FE000FFE001E3F801C0300380FC03001802003E06000804001F0C000404000
F9800040C0007F00002080003F00002080003E00002080001F00002080000F80002080001F8000
2080001FC00060400033E00040400061F000402000C0F800803001807E03801807003F8F000FFE
000FFC0003F00003F800>43 21 3 0 50]49 dc[<0000000018001FFFFFE000FFFFFFC001FFFF
FF0006001E00000E001E00001C003C00003C003C000038003C000078007800007000780000C000
7800000000F800000000F000000000F000000000F000000001F000000001E000000001E0000000
01E000000003E000000003C000000003C000000003C00000000780000000078000000007000000
000F000000000E000000001C0000000018000000003000000001FFE0000003FFC000000FFF0000
00>37 35 1 0 27]84 dc[<7FF0FFF0C000C000C000C000C000C000C000C000C000C000C000C0
00C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000
C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C0004000>12 50 9
13 22]100 dc[<FFF0FFF000300030003000300030003000300030003000300030003000300030
003000300030003000300030003000300030003000300030003000300030003000300030003000
3000300030003000300030003000300030003000300030003000300010>12 50 0 13 22]101
dc dfe /fr 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12
17 21 25 25 41 39 17 17 17 25 34 12 17 12 14 25 25 25 25 25 25 25 25 25 25 17
17 34 34 34 25 46 30 30 33 36 30 30 36 36 17 22 33 28 41 33 36 30 36 30 25 28
36 30 41 30 28 28 19 14 19 21 25 17 25 25 22 25 22 14 25 25 14 14 22 14 36 25
25 25 25 19 19 14 25 22 33 22 22 19 20 14 20 27 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 19 25 25 8 25 25 25 25 11 28 25 17 17 25
25 0 25 25 25 12 0 26 17 17 28 28 25 44 50 0 25 0 17 17 17 17 17 17 17 17 0 17
17 0 17 17 17 44 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 44 0 14 0 0 0 0 28 36 47 15 0
0 0 0 0 33 0 0 0 14 0 0 14 25 33 25 0 0 0 0 /Times-Italic 1000 786432 rf /fs 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 17 28 25 25
50 41 17 17 17 25 28 12 17 12 14 25 25 25 25 25 25 25 25 25 25 17 17 28 28 28
25 46 36 33 36 36 33 30 39 39 19 25 39 33 47 36 39 30 39 36 28 33 36 36 50 36
36 33 17 14 17 29 25 17 25 28 22 28 22 17 25 28 14 17 28 14 41 28 25 28 28 22
19 17 28 25 36 25 25 22 20 11 20 26 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 17 25 25 8 25 25 25 25 14 25 25 17 17 28 28 0 25 25
25 12 0 27 17 17 25 25 25 50 50 0 25 0 17 17 17 17 17 17 17 17 0 17 17 0 17 17
17 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 50 0 15 0 0 0 0 33 39 50 16 0 0 0 0 0 36
0 0 0 14 0 0 14 25 36 28 0 0 0 0 /Times-Bold 1000 786432 rf /ft 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 14 17 21 21 35 32 14 14
14 21 23 10 14 10 12 21 21 21 21 21 21 21 21 21 21 12 12 23 23 23 18 38 30 28
28 30 25 23 30 30 14 16 30 25 37 30 30 23 30 28 23 25 30 30 39 30 30 25 14 12
14 19 21 14 18 21 18 21 18 14 21 21 12 12 21 12 32 21 21 21 21 14 16 12 21 21
30 21 21 18 20 8 20 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 14 21 21 7 21 21 21 21 7 18 21 14 14 23 23 0 21 21 21 10 0 19 15
14 18 18 21 42 42 0 18 0 14 14 14 14 14 14 14 14 0 14 14 0 14 14 14 42 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 37 0 11 0 0 0 0 25 30 37 13 0 0 0 0 0 28 0 0 0 12 0 0
12 21 30 21 0 0 0 0 /Times-Roman 1000 655360 rf /fu 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 17 20 25 25 41 39 17 17 17 25 28 12
17 12 14 25 25 25 25 25 25 25 25 25 25 14 14 28 28 28 22 46 36 33 33 36 30 28
36 36 17 19 36 30 44 36 36 28 36 33 28 30 36 36 47 36 36 30 17 14 17 23 25 17
22 25 22 25 22 17 25 25 14 14 25 14 39 25 25 25 25 17 19 14 25 25 36 25 25 22
24 10 24 27 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 17 25 25 8 25 25 25 25 9 22 25 17 17 28 28 0 25 25 25 12 0 23 17 17 22 22 25
50 50 0 22 0 17 17 17 17 17 17 17 17 0 17 17 0 17 17 17 50 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 44 0 14 0 0 0 0 30 36 44 15 0 0 0 0 0 33 0 0 0 14 0 0 14 25 36 25
0 0 0 0 /Times-Roman 1000 786432 rf /fv 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 18 23 39 35 35 71 59 23 23 23 35 40 18 23 18 20 35
35 35 35 35 35 35 35 35 35 23 23 40 40 40 35 66 51 47 51 51 47 43 55 55 27 35
55 47 67 51 55 43 55 51 39 47 51 51 71 51 51 47 23 20 23 41 35 23 35 39 31 39
31 23 35 39 20 23 39 20 59 39 35 39 39 31 27 23 39 35 51 35 35 31 28 16 28 37
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 23 35 35
12 35 35 35 35 20 35 35 23 23 39 39 0 35 35 35 18 0 38 25 23 35 35 35 71 71 0
35 0 23 23 23 23 23 23 23 23 0 23 23 0 23 23 23 71 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 71 0 21 0 0 0 0 47 55 71 23 0 0 0 0 0 51 0 0 0 20 0 0 20 35 51 39 0 0 0 0
/Times-Bold 1000 1114112 rf end
 TeXDict begin @letter
%%Page: 74 88
 bop -6 41 a 1976 2 v 1826 x 2 1827 v 1973 w 2 1827 v -6 1869 a 1976 2 v 17
106 a fb(Stage)10 b(1)21 b fe(=)-6 b fd(\))96 171 y fb(Apply)51 b ft(the)10 b
(following)e(four)i(rules:)200 236 y fb(R1.)25 b ft(Nodes)11 b(in)e(area)j
(1)e(\(shown)g(in)f(Figure)h(5.5\))g(will)f(generate)i ff(d)f ft(children.)
200 300 y fb(R2.)25 b ft(Cross)10 b(nodes)g(in)g(areas)i(2)e(and)g(3)g(\(show\
n)g(in)g(Figure)f(5.5\))h(will)f(not)h(generate)h(any)f(children.)200 365 y fb
(R3.)25 b ft(Non-cross)10 b(nodes)g(in)g(areas)i(2)e(and)g(3)g(\(excluding)f
(level)h ff(h)p ft(\))g(will)f(generate)i ff(d)f ft(children.)200 430 y fb
(R4.)25 b ft(Nodes)11 b(at)f(level)g ff(h)g ft(will)f(not)h(generate)h(any)f
(children.)96 495 y fb(Repeat)36 b ft(rules)10 b(R1-R4)f fb(until)h ft(time)g
ff(T)670 501 y fl(1)697 495 y ft(when)h(any)f(of)g(the)g(following)e(three)i
(conditions)e(holds:)200 559 y fb(C1.)25 b ft(For)10 b(some)h ff(p)473 544 y
fa(0)495 559 y ft(processors,)g(at)g(least)f ff(h)842 544 y fa(0)864 559 y ft
(non-cross)g(nodes)g(have)h(been)f(expanded)h(on)f(each)h(processor)n(.)200
624 y fb(C2.)25 b ft(At)10 b(least)h ff(C)457 609 y fa(0)479 624 y ft(cross)g
(nodes)f(have)h(been)g(scheduled.)200 689 y fb(C3.)25 b ft(At)10 b(least)h ff
(N)j fd(\000)9 b fe(\()p ff(pd)g fe(+)h ff(d)e fe(+)i ff(h)p fe(\))g ft(nodes)
h(have)f(been)h(generated.)17 819 y fb(Stage)f(2)21 b ft(\(continued)9 b(from)
h(time)g ff(T)553 825 y fl(1)581 819 y ft(when)g(C1)g(holds\))f fe(=)-7 b fd
(\))96 883 y fb(Find)77 b ft(a)11 b(set)g fe(\000)f ft(of)g ff(p)444 868 y fa
(0)466 883 y ft(processors)g(with)g(the)g(following)d(two)j(properties:)201
948 y fb(B1.)26 b ft(There)11 b(are)h(at)e(least)g ff(C)614 933 y fa(0)636 948
y ft(P)l(A-independent)f(HFDC-subtrees)h(in)g fe(\000)p ft(.)201 1013 y fb
(B2.)26 b ft(There)11 b(are)h(at)e(most)g ff(h)610 998 y fa(0)632 1013 y ft
(non-cross)g(nodes)g(expanded)g(on)g(each)i(of)e(the)g(other)f ff(p)h fd(\000)
f ff(p)1513 998 y fa(0)1535 1013 y ft(processors)286 1078 y(in)h(the)g(set)
447 1044 y 26 2 v 34 x fe(\000)o ft(.)96 1142 y fb(Apply)51 b ft(the)10 b(fol\
lowing)e(three)j(rules:)200 1207 y fb(R5.)25 b ft(Nodes)11 b(\(excluding)e
(those)h(at)g(level)g ff(h)p ft(\))g(in)g fe(\000)g ft(will)f(generate)i ff
(d)f ft(children.)200 1272 y fb(R6.)25 b ft(Nodes)11 b(in)445 1238 y 26 2 v 34
x fe(\000)g ft(will)e(not)g(generate)i(any)f(children.)200 1337 y fb(R7.)25 b
ft(Nodes)11 b(at)f(level)g ff(h)g ft(will)f(not)h(generate)h(any)f(children.)
96 1401 y fb(Repeat)36 b ft(rules)10 b(R5-R7)f fb(until)h ft(time)g ff(T)670
1407 y fl(2)697 1401 y ft(when)h(either)e(of)h(the)h(following)c(two)j(condit\
ions)e(holds:)200 1466 y fb(C4.)25 b ft(At)10 b(least)h ff(C)457 1451 y fa
(0)479 1466 y ft(cross)g(nodes)f(have)h(been)g(scheduled.)200 1531 y fb(C5.)
25 b ft(At)10 b(least)h ff(N)j fd(\000)9 b fe(\()p ff(pd)g fe(+)h ff(d)e fe
(+)i ff(h)p fe(\))g ft(nodes)h(have)f(been)h(generated.)17 1660 y fb(Stage)f
(3)21 b ft(\(continued)9 b(from)h(time)g ff(T)553 1666 y fl(1)581 1660 y ft
(when)g(C2)g(or)g(C3)g(holds)f(or)h(from)g(time)g ff(T)1188 1666 y fl(2)1215
1660 y ft(when)h(C4)e(or)h(C5)g(holds.\))k fe(=)-6 b fd(\))96 1725 y fb(Use)
96 b ft(the)21 b(construction)8 b(procedure)j(described)f(in)g(the)g(proof)f
(of)h(Lemma)i(5.1)f(to)e(grow)h(the)g(tree)256 1790 y(to)g(a)h fe(\()p ff(N)r
(;)c(h;)f(d)p fe(\))p ft(-tree.)529 1974 y fu(Figure)11 b(5.4:)18 b(T)o(ree)
12 b(construction)g(procedure.)-4 2596 y @beginspecial @setspecial
%%BeginDocument: dcfig/3areas.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 5 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 10 /Symbol FMDEFINEFONT
1 10 /Times-Italic FMDEFINEFONT
2 8 /Times-Italic FMDEFINEFONT
3 10 /Times-Roman FMDEFINEFONT
4 12 /Times-Italic FMDEFINEFONT
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
218.21 126 154.75 18 2 L
0.5 H
2 Z
0 X
N
218.21 126 279.68 18 2 L
N
176.51 54 259.9 54 2 L
N
197.36 90 239.05 90 2 L
N
155.66 18 280.75 18 2 L
N
289.9 126 307.9 126 2 L
N
289.9 90 307.9 90 2 L
N
289.75 54 307.75 54 2 L
N
289.9 18 307.9 18 2 L
N
302.2 101.53 298.9 90 295.59 101.53 298.9 101.53 4 Y
V
298.9 103.5 298.9 100.53 2 L
N
295.59 78.47 298.9 90 302.2 78.47 298.9 78.47 4 Y
V
298.9 76.5 298.9 79.47 2 L
N
302.05 65.53 298.75 54 295.44 65.53 298.75 65.53 4 Y
V
298.75 67.5 298.75 64.53 2 L
N
295.59 42.47 298.9 54 302.2 42.47 298.9 42.47 4 Y
V
298.9 40.5 298.9 43.47 2 L
N
302.2 29.53 298.9 18 295.59 29.53 298.9 29.53 4 Y
V
298.9 31.5 298.9 28.53 2 L
N
295.59 114.47 298.9 126 302.2 114.47 298.9 114.47 4 Y
V
298.9 112.5 298.9 115.47 2 L
N
0 F
(\351) 309.06 103.62 T
1 F
(log) 312.9 103.62 T
2 F
(d) 325.67 101.12 T
1 F
( pdh) 329.67 103.62 T
0 F
(\371) 347.16 103.62 T
(\351) 313.74 32.06 T
1 F
(log) 317.58 32.06 T
2 F
(d) 330.35 29.56 T
1 F
( N) 334.35 32.06 T
0 F
( \371) 343.51 32.06 T
3 F
(Area 1) 206.14 92.6 T
(Area 2) 205.42 68 T
(Area 3) 205.42 33 T
127.75 126 145.75 126 2 L
N
127.75 18 145.75 18 2 L
N
133.44 114.47 136.75 126 140.05 114.47 136.75 114.47 4 Y
V
136.75 90 136.75 115.47 2 L
N
140.05 29.53 136.75 18 133.44 29.53 136.75 29.53 4 Y
V
136.75 54 136.75 28.53 2 L
N
4 F
(h) 134.75 68.82 T
1 F
(h) 318.72 65.28 T
0 F
(\242) 323.72 65.28 T
1 F
(+) 326.19 65.28 T
3 F
(1) 332.93 65.28 T
FMENDPAGE
%%EndDocument
 @endspecial 466 2672 a(Figure)g(5.5:)18 b(Three)12 b(areas)h(in)f(the)h(cons\
tructed)f(tree.)908 2836 y(74)p eop
%%Page: 75 89
 bop 75 53 a fs(5.1.4.2)51 b(Main)12 b(Part)g(of)g(Proof)g(of)g(Theor)o(em)h
(5.1)75 232 y fu(The)e(tree)f(construction)g(procedure)f(consists)j(of)e(thre\
e)g(stages.)18 b(Basically)m(,)12 b(this)e(procedure,)h(summarized)75 310 y
(in)j(Figure)f(5.4,)j(is)e(similar)g(to)g(that)g(in)g(Section)g(5.1.3.)24 b
(The)15 b(main)f(dif)n(ference)g(is)g(that)g(in)g(stage)h(1)f(of)g(this)75 389
y(procedure)i(we)h(uses)g(more)f(sophisticated)h(rules)g(to)f(prove)g(a)h(bet\
ter)f(lower)h(bound)f(of)g(the)h(number)f(of)75 467 y(cross)d(nodes.)21 b(\(N\
ote)12 b(that)h(if)g fp(h)h fq(\035)h fu(log)768 480 y fm(d)796 467 y fp(N)5 b
fu(,)14 b fp(p)h fn(=)g fu(2,)e(and)g fp(p)1117 449 y fk(0)1144 467 y fn(=)i
fu(1,)e(the)g(lower)g(bound)g(of)f(communication)75 545 y(cost)h(in)f(this)g
(theorem)g(is)h(approximately)e(twice)h(as)h(lar)o(ge)f(as)h(that)f(in)h(Theo\
rem)f(5.5.\))148 690 y(In)k(stage)h(1,)h(we)f(will)f(repeatedly)g(apply)g(rul\
es)g(R1-R4)h(\(in)f(Figure)f(5.4\))i(until)f(time)g fp(T)1719 697 y fo(1)1754
690 y fu(when)g(one)75 769 y(of)g(the)h(conditions)g(C1-C3)g(holds.)31 b(Rule\
s)18 b(R1-R4)f(ensure)f(that)h(each)g(subtree)g(rooted)f(in)h(area)g(1)g(or)f
(2)75 847 y(is)i(always)g(an)g(HFDC-subtree)g(because)g(in)g(constructing)f
(the)h(subtree)g(either)f(rules)h(A1)g(and)f(A2)h(are)75 925 y(followed)12 b
(\(using)h(R1,)g(R3,)h(and)f(R4\))f(or)h(some)g(cross)g(nodes)h(are)e(expande\
d)h(\(using)g(R2\).)19 b(Basically)n(,)13 b(the)75 1003 y(procedure)c(in)h
(stage)h(1)f(attempts)g(to)f(produce)h(at)g(least)g fp(C)1065 985 y fk(0)1087
1003 y fu(P)-5 b(A-independent)9 b(HFDC-subtrees)h(on)g(some)g fp(p)1938 985 y
fk(0)75 1082 y fu(processors)j(\(property)d(B1\))j(while)f(preventing)f(each)
i(of)f(the)g(other)g fp(p)f fq(\000)g fp(p)1386 1063 y fk(0)1411 1082 y fu
(processors)h(from)f(expanding)75 1160 y(more)h(than)g fp(h)316 1142 y fk(0)
340 1160 y fu(non-cross)g(nodes)h(\(property)e(B2\).)18 b(\(Recall)12 b(that)
g(in)g(the)h(proof)e(of)h(Theorem)g(5.5)h(subtrees)75 1238 y(rooted)f(at)g
(frontier)f(nodes)i(at)f(time)g fp(T)732 1245 y fo(1)763 1238 y fu(are)g(P)-5
b(A-independent)12 b(HFDC-subtrees.\))75 1896 y @beginspecial @setspecial
%%BeginDocument: dcfig/turning.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 10 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 10 /Times-Roman FMDEFINEFONT
1 10 /Times-Italic FMDEFINEFONT
2 8 /Times-Italic FMDEFINEFONT
3 10 /Symbol FMDEFINEFONT
4 9 /Times-Roman FMDEFINEFONT
5 9 /Times-Italic FMDEFINEFONT
6 9 /Symbol FMDEFINEFONT
7 12 /Times-Italic FMDEFINEFONT
8 12 /Times-Roman FMDEFINEFONT
9 12 /Symbol FMDEFINEFONT
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
41.34 26.3 36.38 9 31.42 26.3 36.38 26.3 4 Y
0 X
V
36.38 115 36.38 25.3 2 L
2 H
2 Z
N
0 F
(T) 26.38 121 T
(ime) 32.14 121 T
29.38 106 43.38 106 2 L
0.5 H
N
29.38 35 43.38 35 2 L
N
29.38 70.5 43.38 70.5 2 L
N
1 F
(T) 9 34.61 T
2 F
(1) 14.56 32.11 T
1 F
(T) 9 103.61 T
2 F
(1) 14.56 101.11 T
3 F
(-) 18.56 103.61 T
0 F
(2) 24.04 103.61 T
1 F
(T) 9 68.61 T
2 F
(1) 14.56 66.11 T
3 F
(-) 18.56 68.61 T
0 F
(1) 24.04 68.61 T
247.99 76.89 271.32 85.89 R
1 X
V
0 X
N
247.99 61.89 271.32 70.89 R
5 X
V
0 X
N
4 F
(:Each processor expands at least ) 273.66 79.17 T
5 F
(h) 392.21 79.17 T
6 F
(\242) 396.7 79.17 T
4 F
( non-cross nodes.) 398.92 79.17 T
(Each processor expands exactly ) 55.38 12.46 T
5 F
(h) 172.18 12.46 T
6 F
(\242) 176.67 12.46 T
4 F
( non-cross nodes.) 178.89 12.46 T
(:Each processor expands fewer than ) 274.66 64.17 T
5 F
(h) 406.18 64.17 T
6 F
(\242) 410.67 64.17 T
4 F
( non-cross nodes.) 412.89 64.17 T
66.38 89.18 218.46 98.18 R
5 X
V
0 X
N
66.38 49.18 218.46 58.18 R
5 X
V
0 X
N
66.38 89.18 136.08 98.18 R
1 X
V
0 X
N
77.91 115.87 66.38 119.18 77.91 122.49 77.91 119.18 4 Y
V
137.22 122.49 148.76 119.18 137.22 115.87 137.22 119.18 4 Y
V
76.91 119.18 138.22 119.18 2 L
0 Z
N
160.29 115.87 148.76 119.18 160.29 122.49 160.29 119.18 4 Y
V
206.93 122.49 218.46 119.18 206.93 115.87 206.93 119.18 4 Y
V
159.29 119.18 207.93 119.18 2 L
N
136.08 49.18 160.73 58.18 R
3 X
V
2 Z
0 X
N
78.82 133.87 67.29 137.18 78.82 140.49 78.82 137.18 4 Y
V
207.84 140.49 219.38 137.18 207.84 133.87 207.84 137.18 4 Y
V
77.82 137.18 208.84 137.18 2 L
0 Z
N
66.38 49.18 161.43 58.18 R
1 X
V
2 Z
0 X
N
141.7 38.46 136.5 41.46 141.7 44.46 3 L
0 Z
N
155.9 44.46 161.09 41.46 155.9 38.46 3 L
N
136.5 41.46 161.09 41.46 2 L
N
161.09 61.46 161.09 36.46 2 L
2 Z
N
136.5 101.46 136.5 35.46 2 L
N
(B2 and C1 hold.) 44.02 33.06 T
(B2 holds, but C1 does not.) 43.02 68.06 T
153.02 28.48 153.38 40.48 159.43 30.12 156.23 29.3 4 Y
V
158.38 20.46 155.99 30.25 2 L
N
148.76 133.46 148.76 26.46 2 L
2 H
N
112.37 124.18 175.68 142.18 R
7 X
V
7 F
0 X
( p) 112.37 134.18 T
8 F
( processors) 121.37 134.18 T
102.38 106.18 114.96 124.18 R
7 X
V
7 F
0 X
( p) 102.38 116.18 T
9 F
(\242) 111.37 116.18 T
4 F
(B2 holds, but C1 does not.) 43.02 104.06 T
171.57 105.18 201.38 123.18 R
7 X
V
7 F
0 X
( p) 171.57 115.18 T
9 F
(-) 180.57 115.18 T
7 F
(p) 187.15 115.18 T
9 F
(\242) 193.15 115.18 T
FMENDPAGE
%%EndDocument
 @endspecial 391 1972 a(Figure)f(5.6:)18 b(Around)12 b(the)g(time)g(when)h
(condition)e(C1)i(becomes)g(true.)148 2097 y(If)g(condition)f(C1)i(holds)f
(at)h(time)e fp(T)769 2104 y fo(1)788 2097 y fu(,)i(then)f(from)f(Figure)h
(5.6)g(we)h(can)f(\256nd)g(a)h(set)f fn(\000)h fu(of)f fp(p)1714 2079 y fk
(0)1740 2097 y fu(processors)75 2175 y(for)k(which)h(condition)f(C1)h(and)f
(property)g(B2)h(hold.)34 b(According)17 b(to)h(Lemma)g(5.5,)i(there)d(are)h
(at)g(least)75 2254 y fp(\024)p fn(\(=)23 b(\()p fp(d)15 b fq(\000)f fu(1)p fn
(\))p fp(h)367 2236 y fk(0)379 2254 y fn(\))k fu(P)l(A-independent)g(HFDC-sub\
trees)g(on)h(each)g(processor)g(which)f(has)i(expanded)e fp(h)1938 2236 y fk
(0)75 2332 y fu(non-cross)c(nodes.)25 b(So)14 b(there)g(are)g(at)g(least)h fp
(C)886 2314 y fk(0)898 2332 y fn(\(=)h fp(p)995 2314 y fk(0)1008 2332 y fp
(\024)p fn(\))e fu(P)-5 b(A-independent)14 b(HFDC-subtrees)g(in)g fn(\000)h fu
(at)f(this)75 2410 y(time.)k(Therefore,)12 b(property)f(B1)i(holds,)g(and)f
(we)h(are)f(ready)g(for)g(stage)h(2.)148 2555 y(In)j(stage)g(2,)h(we)f(will)g
(repeatedly)f(apply)h(rules)f(R5-R7)h(until)g(time)f fp(T)1398 2562 y fo(2)
1432 2555 y fu(when)h(condition)f(C4)h(or)g(C5)75 2634 y(holds.)h(\(Note)8 b
(that)g(these)g(rules)g(are)g(exactly)g(the)h(same)f(as)h(those)f(of)g(stage)
h(2)f(in)g(Section)f(5.1.3.\))18 b(According)75 2712 y(to)e(property)e(B1,)k
(initially)l(,)f(there)e(are)h(at)g(least)g fp(C)973 2694 y fk(0)1000 2712 y
fu(P)-5 b(A-independent)15 b(HFDC-subtrees)h(in)g fn(\000)p fu(.)29 b(In)16 b
(stage)988 2836 y(75)p eop
%%Page: 76 90
 bop -4 53 a fu(2,)14 b(these)g(subtrees)f(continue)g(to)h(be)f(HFDC-subtrees\
,)h(because)g(either)f(rules)h(A1)f(and)h(A2)f(are)g(followed)-4 132 y(\(usin\
g)f(R5)h(and)f(R7\))h(or)f(some)h(cross)g(nodes)g(are)f(expanded)h(\(using)f
(R6\).)38 b(In)12 b(addition,)h(by)f(rule)g(R6,)i(the)-4 210 y(set)63 171 y 31
2 v 39 x fn(\000)f fu(of)f(the)g(other)g fp(p)g fq(\000)f fp(p)458 192 y fk
(0)482 210 y fu(processors)i(will)f(not)g(generate)g(any)h(new)f(nodes.)69 355
y(Now)l(,)17 b(we)f(want)f(to)g(show)h(that)f(one)h(of)f(the)g(conditions)g
(C2-C5)h(must)f(become)h(true)f(at)g(time)g fp(T)1795 362 y fo(1)1829 355 y fu
(or)-4 433 y fp(T)25 440 y fo(2)43 433 y fu(.)j(According)11 b(to)g(Lemma)g
(5.6)h(\(in)f(Section)g(5.1.4.3\),)h(at)g(any)f(time)g(in)g(stage)h(1)f(or)g
(2)g(properties)g(I1-I4)f(of)-4 512 y(Lemma)i(5.1)h(hold;)e(so,)j(at)e(any)g
(time)g(in)g(stage)h(1)f(or)g(2)g(the)h(tree)f(will)f(be)i(able)f(to)g(grow)g
(to)g(a)h fn(\()p fp(N)r(;)8 b(h;)g(d)p fn(\))p fu(-tree)-4 590 y(by)k(Lemma)
g(5.1.)37 b(Hence,)13 b(if)f(C2)h(or)f(C4)g(never)g(hold,)h(C3)f(or)g(C5)h
(becomes)g(true.)69 735 y(Stage)g(3)h(starts)g(right)f(after)g(one)h(of)g(the)
g(conditions)f(C2-C5)h(becomes)g(true.)22 b(\(If)13 b(C2)h(or)g(C3)g(holds)g
(at)-4 813 y fp(T)25 820 y fo(1)43 813 y fu(,)j(this)f(implies)f(that)h(stage)
g(2)g(is)g(empty)l(.\))28 b(Since)16 b(Lemma)g(5.6)g(also)g(shows)g(that)g
(properties)f(I1-I4)f(of)-4 892 y(Lemma)d(5.1)h(hold)g(for)e(the)i(tree)f(at)
h(time)f fp(T)739 899 y fo(1)769 892 y fu(or)h fp(T)852 899 y fo(2)870 892 y
fu(,)g(in)g(stage)g(3)f(we)h(will)f(follow)g(the)h(procedure)f(described)-4
970 y(in)h(the)g(proof)f(of)h(Lemma)h(5.1)g(to)f(grow)g(the)g(tree)g(to)g(a)h
fn(\()p fp(N)r(;)8 b(h;)g(d)p fn(\))p fu(-tree)k fp(H)5 b fu(.)69 1115 y(T)m
(o)11 b(complete)f(the)h(proof,)g(we)g(observe)h(that)e(if)h fp(C)927 1122 y
fk(A)957 1115 y fn(\()p fp(H)t fn(\))j fq(\025)g fp(C)1144 1097 y fk(0)1167
1115 y fu(it)d(will)g(remain)f(true)h(for)f(the)h(rest)g(of)g(the)-4 1193 y
(tree)h(construction)f(process.)19 b(Therefore)12 b(property)f(Q2)i(of)e(Theo\
rem)i(5.5)f(will)g(hold)g(for)g fp(H)t fu(.)69 1338 y(Now)l(,)j(assuming)g
(that)e fp(C)515 1345 y fk(A)546 1338 y fn(\()p fp(H)t fn(\))j fp(<)g(C)737
1320 y fk(0)748 1338 y fu(,)f(we)g(want)e(to)h(prove)g(that)g(property)f(Q1)h
(holds)g(for)f fp(H)t fu(.)24 b(Since)-4 1417 y(C2)15 b(and)g(C4)g(never)g
(hold,)h(either)e(C3)h(will)g(become)g(true)g(at)g(time)f fp(T)1212 1424 y fo
(1)1246 1417 y fu(or)g(C5)i(will)e(become)h(true)g(at)g(time)-4 1495 y fp(T)
25 1502 y fo(2)43 1495 y fu(.)65 b(First,)19 b(suppose)f(that)f(condition)f
(C5)i(becomes)f(true)g(at)g(time)g fp(T)1268 1502 y fo(2)1286 1495 y fu(.)34 b
(T)m(o)17 b(prove)f(that)i(property)e(Q1)-4 1573 y(holds)g(in)f(this)h(case,)
j(we)d(will)f(derive)h(an)g(upper)g(bound)f(on)h(the)g(total)g(number)f(of)g
(nodes)i(expanded)f(in)-4 1612 y 31 2 v 39 x fn(\000)p fu(.)35 b(The)18 b(upp\
er)g(bound)f(consists)i(of)e(\256ve)h(terms)f fp(U)931 1658 y fo(1)950 1651 y
fu(,)j fp(U)1015 1658 y fo(2)1034 1651 y fu(,)f fp(U)1098 1658 y fo(3)1117
1651 y fu(,)h fp(U)1182 1658 y fo(4)1201 1651 y fu(,)g(and)d fp(U)1355 1658 y
fo(5)1374 1651 y fu(.)35 b(Assume)19 b(that)e(there)h(are)-4 1730 y fp(C)31
1737 y fo(1)69 1730 y fp(<)j(U)161 1737 y fo(1)200 1730 y fn(=)f fp(C)296 1712
y fk(0)325 1730 y fu(cross)e(nodes)f(expanded)g(in)842 1691 y 31 2 v 39 x fn
(\000)g fu(in)g(stage)h(1.)32 b(In)17 b(stage)g(1,)i(the)e(processors)g(in)
1729 1691 y 31 2 v 39 x fn(\000)g fu(have)-4 1808 y(expanded)11 b(at)h(most)g
fp(U)388 1815 y fo(2)421 1808 y fn(=)i(\()p fp(p)c fq(\000)g fp(p)599 1790 y
fk(0)612 1808 y fn(\))p fp(h)659 1790 y fk(0)682 1808 y fu(non-cross)i(nodes)
g(due)g(to)g(property)f(B2.)18 b(These)13 b(nodes)g(expanded)-4 1886 y(in)e
(stage)h(1)g(will)f(generate)h(at)g(most)g fp(U)657 1893 y fo(3)689 1886 y fn
(=)i(\(\()p fp(p)c fq(\000)g fp(p)886 1868 y fk(0)898 1886 y fn(\))p fp(h)945
1868 y fk(0)966 1886 y fn(+)g fp(C)1049 1893 y fo(1)1068 1886 y fn(\))p fp
(d)i fu(frontier)e(nodes)i(in)1464 1847 y 31 2 v 39 x fn(\000)g fu(at)g(time)
f fp(T)1683 1893 y fo(1)1701 1886 y fu(,)i(each)f(of)-4 1964 y(which)h(can)g
(be)h(expanded)f(at)h(most)f(once)h(in)798 1925 y 31 2 v 39 x fn(\000)p fu
(.)22 b(After)12 b(time)h fp(T)1111 1971 y fo(1)1130 1964 y fu(,)h(it)f(is)h
(also)g(possible)f(for)g(the)g(processors)-4 2043 y(in)52 2004 y 31 2 v 39 x
fn(\000)k fu(to)h(expand)f(nodes)g(moved)g(from)f(the)i(processors)f(in)g fn
(\000)p fu(.)34 b(The)18 b(total)f(number)f(of)h(these)h(nodes)f(is)-4 2121 y
fp(U)29 2128 y fo(4)66 2121 y fq(\024)g fp(C)157 2128 y fk(A)188 2121 y fn
(\()p fp(H)t fn(\))c fq(\000)f fp(C)369 2128 y fo(1)388 2121 y fu(.)28 b(More\
over)m(,)17 b(to)e(take)h(care)f(of)g(the)h(nodes)g(generated)f(after)g fp
(T)1513 2128 y fo(2)1531 2121 y fu(,)i(processors)f(in)1840 2082 y 31 2 v 39 x
fn(\000)-4 2199 y fu(may)d(expand)g(up)g(to)h fp(U)401 2206 y fo(5)435 2199 y
fq(\024)h fp(pd)d fn(+)g fp(d)g fn(+)g fp(h)h fu(nodes.)22 b(Therefore,)14 b
(the)f(total)g(number)g(of)g(nodes)g(expanded)h(in)-4 2238 y 31 2 v 39 x fn
(\000)e fu(is)f(at)h(most)f fp(U)20 b fn(=)13 b fp(U)375 2284 y fo(1)403 2277
y fn(+)d fp(U)484 2284 y fo(2)512 2277 y fn(+)f fp(U)592 2284 y fo(3)620 2277
y fn(+)g fp(U)700 2284 y fo(4)728 2277 y fn(+)g fp(U)808 2284 y fo(5)841 2277
y fq(\024)k fu(3)p fp(pd)967 2259 y fo(2)987 2277 y fp(h)p fu(.)18 b(This)12 b
(implies)f(that)h(the)f(processors)h(in)f fn(\000)h fu(have)-4 2356 y(expande\
d)g(at)g(least)g fp(N)k fq(\000)11 b fp(U)19 b fn(=)14 b fp(N)i fq(\000)10 b
fu(3)p fp(pd)737 2338 y fo(2)756 2356 y fp(h)j fu(nodes;)f(therefore,)g fp
(T)1173 2363 y fk(A)1202 2356 y fn(\()p fp(H)5 b fn(\))13 b fq(\025)h fn(\()p
fp(N)i fq(\000)10 b fu(3)p fp(pd)1548 2338 y fo(2)1568 2356 y fp(h)p fn(\))p
fp(=p)1663 2338 y fk(0)1689 2356 y fq(\025)k fp(N)1786 2338 y fk(0)1798 2356 y
fp(=p)1846 2338 y fk(0)1858 2356 y fu(,)-4 2434 y(i.e.,)f(property)e(Q1)i(hol\
ds.)69 2579 y(Suppose)i(that)f(condition)h(C3)g(becomes)g(true)g(at)g(time)f
fp(T)1084 2586 y fo(1)1103 2579 y fu(.)26 b(Since)15 b(condition)f(C1)h(does)
g(not)g(hold)g(in)-4 2657 y(stage)c(1,)h(we)g(can)g(\256nd)f(a)g(set)h fn(\
\000)g fu(of)f fp(p)617 2639 y fk(0)640 2657 y fu(processors)h(with)f(propert\
y)f(B2)i(\(see)g(Figure)e(5.6)i(also\).)18 b(Since)11 b(stage)908 2836 y(76)p
eop
%%Page: 77 91
 bop 75 53 a fu(2)17 b(is)g(empty)f(for)g(this)h(case,)i(we)e(can)g(let)g(tim\
e)f fp(T)950 60 y fo(2)985 53 y fu(be)h(the)g(same)g(as)h fp(T)1334 60 y fo
(1)1352 53 y fu(.)32 b(Thus,)19 b(we)e(can)g(use)g(the)g(same)75 132 y(techni\
que)12 b(as)h(above)f(to)h(prove)f(that)g(property)f(Q1)h(holds.)1124 96 y 29
2 v 48 x 2 49 v 26 w 2 49 v 1124 146 a 29 2 v 75 349 a fs(5.1.4.3)51 b(Releva\
nt)11 b(Lemmas)197 643 y(Lemma)j(5.3)24 b fr(Suppose)10 b(that)f(ther)n(e)h
(ar)n(e)g fp(k)h fr(P)-6 b(A-independent)9 b(subtr)o(ees)h(at)f(some)h(time)f
(during)197 721 y(the)15 b(computation.)24 b(If)14 b(each)h(of)f(these)h(subt\
r)o(ees)g(has)g(at)g(least)f(one)h(expanded)g(cr)n(oss)h(node,)197 800 y(then)
11 b(the)h(total)f(number)h(of)f(expanded)g(cr)o(oss)h(nodes)g(in)g(the)f(who\
le)h(tr)n(ee)g(constructed)g(so)g(far)197 878 y(is)h(at)f(least)g fp(k)r fr
(.)197 1072 y fs(Proof.)21 b fu(This)14 b(proof)e(is)i(not)f(trivial)f(becaus\
e)j(among)e(these)h(subtrees)f(those)h(with)f(ancestry)197 1150 y(relationshi\
p)f(may)g(contain)g(the)g(same)h(expanded)f(cross)h(node.)75 1876 y
@beginspecial @setspecial
%%BeginDocument: dcfig/pa-indep-new.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 6 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 9 /ZapfChancery-MediumItalic FMDEFINEFONT
1 7 /Times-Italic FMDEFINEFONT
2 9 /Times-Italic FMDEFINEFONT
3 9 /Times-Roman FMDEFINEFONT
4 12 /ZapfChancery-MediumItalic FMDEFINEFONT
5 10 /Times-Italic FMDEFINEFONT
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
149 26.31 257 26.31 203 113.03 3 Y
V
0.5 H
2 Z
0 X
N
158 26.31 194 26.31 176 51.09 3 Y
7 X
V
0 X
N
203 26.31 239 26.31 221 63.48 3 Y
7 X
V
0 X
N
204 108.9 209 89.63 2 L
2 H
N
221 67.73 210 83.43 2 L
N
203 109.02 186 75.99 2 L
N
185 68.29 176 55.91 2 L
N
0 F
(T) 146 12.69 T
1 F
(1) 150.49 10.44 T
2 F
(, ) 153.99 12.69 T
0 F
(T) 158.48 12.69 T
1 F
(2) 162.98 10.44 T
2 F
(, ) 166.47 12.69 T
0 F
(T) 170.96 12.69 T
1 F
(3) 175.46 10.44 T
2 F
(, ) 178.95 12.69 T
0 F
(T) 183.45 12.69 T
1 F
(4) 187.94 10.44 T
2 F
( ) 191.43 12.69 T
3 F
(:P) 193.68 12.69 T
(A-independent subtrees.) 200.35 12.69 T
4 F
(T) 221 142.55 T
5 F
( 1) 227 139.55 T
4 F
(T ) 212 106.67 T
5 F
(2) 220.63 103.67 T
4 F
(T ) 186 50.34 T
5 F
(3) 194.63 47.34 T
135 26.44 288 26.44 210 146.87 3 Y
0.5 H
N
176 48.98 175 38.88 2 L
2 H
N
221 60.64 223 38.88 2 L
N
211 143.76 209 129 2 L
N
208 122.79 203 115.02 2 L
N
4 F
(T ) 225 55 T
5 F
(4) 233.63 52 T
7 X
90 450 4.5 3.5 211.5 148.81 G
0.5 H
0 X
90 450 4.5 3.5 211.5 148.81 A
7 X
90 450 4.5 3.5 203.5 112.3 G
0 X
90 450 4.5 3.5 203.5 112.3 A
7 X
90 450 4.5 3.5 176.5 51.7 G
0 X
90 450 4.5 3.5 176.5 51.7 A
7 X
90 450 4.5 3.5 221.5 64.13 G
0 X
90 450 4.5 3.5 221.5 64.13 A
3 X
90 450 4.5 3.5 209.5 126.28 G
0 X
90 450 4.5 3.5 209.5 126.28 A
3 X
90 450 4.5 3.5 186.5 72.68 G
0 X
90 450 4.5 3.5 186.5 72.68 A
3 X
90 450 4.5 3.5 210.5 85.11 G
0 X
90 450 4.5 3.5 210.5 85.11 A
3 X
90 450 4.5 3.5 174.5 36.16 G
0 X
90 450 4.5 3.5 174.5 36.16 A
3 X
90 450 4.5 3.5 223.5 35.39 G
0 X
90 450 4.5 3.5 223.5 35.39 A
203.05 133.13 204.99 127.47 199.12 128.62 201.08 130.88 4 Y
V
207 148.42 M
 198.54 146.14 195.83 137.28 201.1 130.82 D
1 H
0 Z
N
183.29 81.41 182.99 75.42 177.95 78.68 180.62 80.04 4 Y
V
198 110.36 M
 183.12 105.6 176.67 91.32 180.65 80.02 D
N
167.63 42.87 169.99 37.35 164.04 38.07 165.83 40.47 4 Y
V
171 51.31 M
 162.66 49.06 160.59 45.21 165.8 40.42 D
N
217.81 42.16 219.99 36.58 214.07 37.48 215.94 39.82 4 Y
V
218 61.41 M
 209.41 56.07 208.94 46.71 215.96 39.75 D
N
3 X
90 450 4.5 3.5 242.5 130.28 G
0.5 H
2 Z
0 X
90 450 4.5 3.5 242.5 130.28 A
3 F
(expanded cross node) 252 128.31 T
FMENDPAGE
%%EndDocument
 @endspecial 239 1952 a(Figure)e(5.7:)18 b(Expanded)13 b(cross)g(nodes)f(corr\
esponding)g(to)g(P)-5 b(A-independent)12 b(subtrees.)272 2086 y(In)i(this)h
(proof,)g(we)g(will)g(prune)f(the)h fp(k)i fu(P)-5 b(A-independent)15 b(subtr\
ees)g(one)g(by)g(one)g(under)197 2164 y(the)d(restriction)f(that)g(the)h(subt\
ree)g(being)f(pruned)g(contains)h(no)g(other)f(subtrees)h(which)g(have)197
2242 y(not)h(been)h(pruned)f(yet.)23 b(\(For)12 b(the)i(example)g(illustrated)
f(in)g(Figure)g(5.7,)i(we)f(can)g(prune)f(the)197 2321 y(subtrees)i(in)g(the)
g(order:)22 b fq(T)674 2328 y fo(4)692 2321 y fu(,)16 b fq(T)747 2328 y fo
(3)766 2321 y fu(,)g fq(T)821 2328 y fo(2)840 2321 y fu(,)g(and)f fq(T)982
2328 y fo(1)1001 2321 y fu(.\))25 b(For)15 b(this)f(proof,)h(it)g(suf)o(\256c\
es)g(to)g(prove)f(that)197 2399 y(each)f(pruned)e(subtree)i(has)g(at)f(least)
h(one)f(expanded)h(cross)f(node.)272 2477 y(Initially)-5 b(,)11 b(the)e(\256r\
st)h(pruned)f(subtree)g(obviously)g(has)h(at)g(least)g(one)g(expanded)f(cross)
h(node)197 2555 y(by)17 b(the)f(assumption)h(of)g(the)f(lemma.)32 b(As)17 b
(mentioned)f(in)h(Section)f(5.1.4.1,)k(for)c(any)g(two)197 2634 y(P)-5 b(A-in\
dependent)12 b(subtrees)h fq(T)25 b fu(and)13 b fq(T)882 2616 y fk(0)906 2634
y fu(rooted)g(at)f(nodes)h fp(r)h fu(and)f fp(r)1368 2616 y fk(0)1393 2634 y
fu(respectively)l(,)h(if)e fp(r)i fu(is)f(an)197 2712 y(ancestor)e(of)g fp
(r)450 2694 y fk(0)462 2712 y fu(,)h(there)f(must)g(exist)g(at)g(least)h(one)
f(expanded)g(cross)h(node)f(on)g(the)g(path)g(from)f fp(r)988 2836 y fu(77)p
eop
%%Page: 78 92
 bop -4 672 a @beginspecial @setspecial
%%BeginDocument: dcfig/c1.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 1 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
7 142.82 322 142.82 2 L
3 H
2 Z
0 X
N
7 25.82 322 25.82 2 L
N
138 146.82 138 128.82 2 L
0.5 H
N
139 146.82 155 128.82 2 L
N
138 146.82 120 128.82 2 L
N
120 120.82 120 102.82 2 L
N
121 120.82 137 102.82 2 L
N
120 120.82 102 102.82 2 L
N
102 94.82 102 76.82 2 L
N
103 94.82 119 76.82 2 L
N
102 94.82 84 76.82 2 L
N
84 66.82 84 48.82 2 L
N
85 66.82 101 48.82 2 L
N
84 66.82 66 48.82 2 L
N
53 35.82 166 134.82 R
N
0 F
(Area 1) 304 153.82 T
(Area 2) 304 80.64 T
(Area 3) 304 8.64 T
(Generated on a single Processor ) 133.1 57.42 T
(: Non-cross node) 384.06 44.64 T
368 45 377 54 R
3 X
V
0 X
N
134 119 143 128 R
N
151 119 160 128 R
N
116 94 125 103 R
N
134 93 143 102 R
N
98 67 107 76 R
N
116 67 125 76 R
N
97 39 106 48 R
N
79 39 88 48 R
N
134 147 143 156 R
N
116 120 125 129 R
3 X
V
0 X
N
98 94 107 103 R
3 X
V
0 X
N
80 68 89 77 R
3 X
V
0 X
N
62 40 71 49 R
N
FMENDPAGE
%%EndDocument
 @endspecial 76 x fu(Figure)13 b(5.8:)21 b(In)13 b(stage)i(1,)f(any)g(non-cro\
ss)g(node')m(s)g(ancestors)g(in)g(area)g(2)g(must)g(have)g(been)g(generated)g
(on)-4 826 y(the)e(same)h(processor)m(.)117 964 y(\(inclusive\))c(to)f(the)h
(parent)g(\(inclusive\))f(of)h fp(r)887 946 y fk(0)908 964 y fu(due)g(to)g
(processor)g(independence.)17 b(Therefore,)117 1043 y(if)f(we)h(prune)f fq
(T)409 1025 y fk(0)437 1043 y fu(at)h fp(r)513 1025 y fk(0)525 1043 y fu(,)h
fq(T)29 b fu(still)16 b(has)h(at)g(least)g(one)f(expanded)h(cross)f(node.)31 b
(Hence,)18 b(after)117 1121 y(we)c(prune)e(each)i(subtree)f(under)f(the)h(abo\
ve)g(restriction,)g(each)h(of)e(the)h(remaining)f(subtrees)117 1199 y(will)h
(still)g(have)g(at)g(least)g(one)g(expanded)g(cross)g(node.)20 b(This)13 b
(implies)g(that)g(the)f(next)h(pruned)117 1277 y(subtree)h(also)g(has)g(at)f
(least)h(one)g(expanded)f(cross)h(node.)22 b(So,)13 b(each)h(pruned)f(subtree)
h(has)g(at)117 1356 y(least)f(one)g(expanded)f(cross)h(node.)751 1320 y 29 2 v
48 x 2 49 v 27 w 2 49 v 751 1370 a 29 2 v 117 1696 a fs(Lemma)h(5.4)25 b fr
(At)9 b(some)g(time,)h(if)e(ther)n(e)h(ar)o(e)f fp(k)j fr(P)-6 b(A-independen\
t)8 b(HFDC-subtr)o(ees)h(and)g(fewer)117 1774 y(than)j fp(k)j fr(expanded)d
(cr)o(oss)h(nodes,)g(ther)o(e)f(exists)h(an)g(HFD-subtr)n(ee.)117 1985 y fs
(Proof.)49 b fu(Assume)24 b(that)e(there)h(exists)g(no)g(HFD-subtree.)49 b
(Thus,)26 b(each)d(of)g(these)g(P)-5 b(A-)117 2063 y(independent)18 b(HFDC-su\
btrees)g(has)h(at)g(least)f(one)h(expanded)f(cross)h(node)f(according)g(to)
117 2141 y(the)10 b(de\256nition)g(of)f(HFDC-subtree.)17 b(By)10 b(Lemma)h
(5.3,)g(there)f(are)g(at)g(least)g fp(k)i fu(expanded)e(cross)117 2220 y(node\
s.)19 b(This)13 b(is)g(contradictory)e(to)h(the)g(assumption)h(of)f(the)g(lem\
ma.)1346 2184 y 29 2 v 48 x 2 49 v 27 w 2 49 v 1346 2234 a 29 2 v 117 2560 a
fs(Lemma)i(5.5)25 b fr(In)10 b(stage)h(1,)g(if)f(a)h(pr)n(ocessor)h(has)f(exp\
anded)f fp(h)1184 2542 y fk(0)1207 2560 y fr(non-cr)n(oss)h(nodes,)h(then)e
(ther)n(e)117 2638 y(ar)o(e)i(at)h(least)f fp(\024)h fr(P)-6 b(A-independent)
12 b(HFDC-subtr)n(ees)i(on)e(the)g(pr)o(ocessor)-5 b(.)908 2836 y fu(78)p eop
%%Page: 79 93
 bop 197 53 a fs(Proof.)16 b fu(As)10 b(mentioned)f(in)g(Section)g(5.1.4.2,)j
(each)d(subtree)h(rooted)f(in)g(area)g(1)h(or)f(2)g(is)h(always)197 132 y(an)
16 b(HFDC-subtree)f(in)g(stage)h(1.)28 b(Thus)16 b(it)g(suf)o(\256ces)f(to)h
(prove)f(that)g(at)h(least)g fp(\024)g fu(nodes)f(with)197 210 y(ancestry)e
(independence)f(in)h(areas)g(1)f(and)h(2)f(will)h(be)f(generated)h(on)f(the)h
(processor)f(after)g fp(h)1816 192 y fk(0)197 288 y fu(non-cross)f(nodes)h
(have)g(been)g(expanded.)18 b(By)12 b(rules)f(R1-R3,)h(for)f(any)h(non-cross)
f(node,)h(all)197 366 y(of)g(its)g(ancestors)h(in)f(area)g(2)g(\(with)g fp
(h)837 348 y fk(0)859 366 y fn(+)f fu(1)h(levels\))g(must)g(be)h(non-cross)f
(nodes)g(as)h(shown)f(in)197 445 y(Figure)h(5.8.)24 b(So,)14 b(all)g(the)g
(nodes)g(generated)g(by)g(the)g(\256rst)f fp(h)1253 427 y fk(0)1279 445 y fu
(non-cross)h(nodes)g(must)g(be)g(in)197 523 y(areas)h(1)g(and)g(2.)25 b(Since)
15 b(each)g(of)g(the)f fp(h)895 505 y fk(0)922 523 y fu(non-cross)h(nodes)g
(will)f(generate)h fp(d)g fu(children)f(and)197 601 y(can)g(remove)g(at)g(mos\
t)g(one)g(ancestor)n(,)h(these)f(non-cross)g(nodes)g(will,)h(in)f(total,)g
(generate)g(at)197 679 y(least)f fn(\()p fp(d)e fq(\000)g fu(1)p fn(\))p fp
(h)478 661 y fk(0)489 679 y fn(\(=)j fp(\024)p fn(\))f fu(nodes)f(with)g(ance\
stry)h(independence.)1332 643 y 29 2 v 49 x 2 49 v 27 w 2 49 v 1332 694 a 29 2
v 197 966 a fs(Lemma)h(5.6)24 b fr(At)14 b(any)f(time)g(in)f(stage)i(1)f(or)g
(2,)h(including)e(time)h fp(T)1346 973 y fo(1)1377 966 y fr(or)h fp(T)1464 973
y fo(2)1482 966 y fr(,)g(the)f(tr)n(ee)g(satis\256es)197 1044 y(pr)n(operties)
g(I1-I4)e(of)i(Lemma)f(5.1.)197 1225 y fs(Proof.)24 b fu(It)14 b(is)h(obvious)
g(from)e(rules)i(R1-R7)g(that)f(I2)g(and)h(I3)f(are)h(satis\256ed.)25 b(In)14
b(addition,)h(it)197 1303 y(is)h(also)g(obvious)g(that)f(I1)h(holds)f(before)
h(condition)f(C3)h(or)f(C5)h(becomes)g(true.)28 b(Consider)197 1382 y(the)12 b
(\256rst)f(time)g(step)i(when)e(at)h(least)g fp(N)j fq(\000)10 b fn(\()p fp
(pd)g fn(+)g fp(h)g fn(+)g fp(d)p fn(\))i fu(nodes)g(have)g(been)g(generated)
f(\(i.e.,)197 1460 y(condition)f(C3)g(or)g(C5)h(holds\).)17 b(Since)10 b(the)
g(tree)g(has)h(no)f(more)g(than)g fp(N)i fq(\000)6 b fn(\()p fp(pd)i fn(+)e fp
(h)h fn(+)f fp(d)p fn(\))11 b fu(nodes)197 1538 y(in)g(the)g(previous)g(time)
g(step)h(and)f(since)h(at)f(most)g fp(pd)h fu(nodes)g(will)f(be)g(generated)g
(in)g(each)g(time)197 1616 y(step,)i(there)f(are)g(at)g(most)g fp(N)k fq(\000)
10 b fp(h)h fq(\000)f fp(d)j fu(nodes)f(in)g(the)h(current)e(time)h(step.)18 b
(In)12 b(the)g(rest)g(of)g(this)197 1695 y(proof,)f(we)g(will)g(show)h(that)f
(I4)f(always)i(holds)f(\(i.e.,)i(there)e(always)g(exists)h(an)g(HFD)f(subtree\
\))197 1773 y(in)h(each)h(stage.)272 1851 y(In)f(stage)h(1,)g(all)g(the)g(nod\
es)g(in)f(area)h(1)g(will)f(generate)g fp(d)h fu(nodes)g(by)g(rule)f(R1.)20 b
(So,)13 b(before)197 1929 y(all)h(the)h(nodes)f(in)h(area)f(1)h(have)f(been)h
(expanded,)g(there)f(must)h(exist)g(one)f(frontier)f(node)h(in)197 2008 y(are\
a)e(1,)i(of)e(which)g(the)g(subtree)h(\(with)f(only)g(one)g(node\))h(is)f(an)
h(HFD-subtree.)18 b(After)12 b(all)g(the)197 2086 y(nodes)17 b(in)g(area)f
(1)h(are)g(expanded,)h(there)f(are)f(at)h(least)g fp(d)1206 2068 y fk(d)p fo
(log)1265 2077 y fi(d)1289 2068 y fm(pdh)p fk(e)1383 2086 y fq(\025)i fp(pdh)
i fq(\025)f fp(C)1636 2068 y fk(0)1665 2086 y fu(subtrees)197 2164 y(rooted)c
(at)g(the)g(top)g(level)g(of)g(area)g(2.)30 b(Obviously)l(,)18 b(these)f(subt\
rees)f(are)g(P)l(A-independent.)197 2242 y(They)f(are)f(also)g(HFDC-subtrees)
g(because)h(each)g(subtree)f(rooted)g(in)g(area)g(1)h(or)e(2)i(in)f(stage)197
2321 y(1)i(is)f(always)i(an)e(HFDC-subtree)g(as)h(described)g(in)g(Section)f
(5.1.4.2.)29 b(Since)15 b(the)h(number)197 2399 y(of)g(expanded)g(cross)h(nod\
es)f(is)h(always)f(less)h(than)f fp(C)1149 2381 y fk(0)1177 2399 y fu(\(due)g
(to)g(condition)f(C2\),)j(there)e(has)197 2477 y(always)c(been)g(an)g(HFD-sub\
tree)f(up)g(to)h(time)f fp(T)1025 2484 y fo(1)1055 2477 y fu(by)h(Lemma)g(5.4\
.)18 b(Thus,)13 b(we)f(can)g(conclude)197 2555 y(that)g(there)g(always)h(exis\
ts)g(an)f(HFD-subtree)g(in)g(stage)h(1.)272 2634 y(In)g(stage)i(2,)g(initiall\
y)l(,)g(there)f(are)g(at)g(least)h fp(C)1058 2616 y fk(0)1084 2634 y fu(P)-5 b
(A-independent)14 b(HFDC-subtrees)g(in)g fn(\000)197 2712 y fu(\(property)i
(B1\).)35 b(These)19 b(subtrees)g(will)e(continue)h(to)g(be)g(HFDC-subtrees)g
(in)g(this)g(stage)988 2836 y(79)p eop
%%Page: 80 94
 bop 117 53 a fu(as)19 b(described)f(in)f(Section)h(5.1.4.2.)35 b(In)18 b(sta\
ge)g(2,)i(due)d(to)h(condition)f(C4)h(the)g(number)f(of)117 132 y(expanded)i
(cross)h(nodes)f(is)h(always)f(less)h(than)f fp(C)1032 114 y fk(0)1043 132 y
fu(;)k(so,)e(there)e(always)h(exists)f(an)g(HFD-)117 210 y(subtree)13 b(by)f
(Lemma)h(5.4.)593 174 y 29 2 v 48 x 2 49 v 27 w 2 49 v 593 224 a 29 2 v -4 471
a fv(5.2)70 b(Parallel)18 b(Range)h(Selection)-4 668 y fr(Selection)12 b fu
([17)o(,)h(28,)g(42)o(])f(is)h(a)g(very)f(common)f(operation,)i(which)f(we)g
(de\256ne)g(as)h(follows.)117 841 y(Given)i(a)g(set)g(of)g fp(N)20 b fu(eleme\
nts)15 b(each)g(containing)f(a)h(key)m(,)h(and)e(given)h(an)g(integer)f(value)
h fp(M)5 b fu(,)117 919 y(1)14 b fq(\024)g fp(M)19 b fq(\024)14 b fp(N)5 b fu
(,)13 b(select)g fp(M)k fu(elements)c(that)f(have)h(the)f(smallest)h(key)f
(values)1431 901 y fo(1)1450 919 y fu(.)-4 1092 y(\(Note)j(that)h(when)g(appl\
ied)g(to)g(our)f(multilist)g(scheduling)h(system,)i(elements)e(are)g(equivale\
nt)g(to)g(tasks)-4 1170 y(and)c(keys)h(are)f(equivalent)g(to)g(priorities.\))
69 1315 y(For)h(the)h(parallel)f(selection)h(problem,)g(some)g(ef)o(\256cient)
g(algorithms)f(have)h(been)g(designed)g(by)g(other)-4 1394 y(researchers)21 b
([16,)h(77],)i(but)e(they)g(usually)f(do)h(not)g(try)f(to)g(minimize)h(the)f
(number)g(of)h(critical-path)-4 1472 y(sends/receives)283 1454 y fo(2)302 1472
y fu(.)55 b(For)24 b(example,)k(we)c(estimate)h(that)f(the)h(parallel)f(selec\
tion)h(algorithm)e([16])h(\(a)-4 1550 y(straightforward)18 b(parallel)i(desig\
n)h(of)f([42)o(]\))g(requires)g(an)g(average)h(of)f fp(O)q fn(\()p fu(log)8 b
fp(p)h fu(log)f fp(N)d fn(\))21 b fu(critical-path)-4 1628 y(sends/receives.)
d(However)n(,)12 b(in)e(a)i(network-based)e(multicomputer)l(,)i(we)f(want)g
(to)g(minimize)f(the)h(number)-4 1707 y(of)h(critical-path)f(sends/receives)j
(while)f(using)f(moderately)g(lar)o(ge)h(packets,)h(because)f(a)g(network-bas\
ed)-4 1785 y(multicomputer)g(has)j(the)g(following)e(characteristics.)28 b
(First,)16 b(each)f(send/receive)h(incurs)f(a)h(signi\256cant)-4 1863 y(amoun\
t)e(of)h(overhead,)h(e.g.,)h(a)e(couple)g(of)g(milliseconds)g(over)f(Ethernet)
h(or)g(about)g(200)g(microseconds)-4 1941 y([27)o(])j(on)h(Nectar)n(,)i(as)f
(opposed)f(to)f(tens)h(of)g(nanoseconds)g(per)g(instruction.)37 b(Second,)21 b
(a)e(packet)g(with)-4 2020 y(moderate)11 b(size)i(does)g(not)g(incur)e(a)i
(signi\256cant)f(amount)g(of)g(overhead.)19 b(For)11 b(example,)i(sending)g
(a)f(packet)-4 2098 y(with)g(a)g(few)g(kilobytes)g(is)h(only)f(a)h(small)f
(number)g(of)g(times)g(longer)g(than)g(that)g(for)g(a)g(single)h(word.)69 2243
y(If)h(we)i(wanted)f(to)g(reduce)h(the)f(number)g(of)g(critical-path)f(send/r\
eceives)i(to)f fp(O)r fn(\()p fu(log)7 b fp(p)p fn(\))16 b fu(while)g(using)
-4 2285 y 750 2 v 54 2316 a fl(1)70 2331 y ft(Sometimes,)d(the)e(de\256nition)
f(of)h(selection)g(is)h(to)e(select)j(only)d(the)h(element)h(with)f(the)g ff
(M)5 b ft(-th)10 b(smallest)i(key)m(.)19 b(However)o(,)12 b(a)-4 2396 y(selec\
tion)f(algorithm)g(which)g(can)i(\256nd)f(the)g ff(M)t ft(-th)g(smallest)g
(key)g ff(\031)h ft(usually)e(can)i(identify)d(the)i ff(M)17 b ft(elements)c
(with)e(priorities)-4 2460 y fd(\024)g ff(\031)q ft(.)54 2500 y fl(2)70 2515 y
ft(Here,)21 b(we)e(view)f(a)h(\252path\272)f(as)h(a)g(sequence)g(of)f(sends/r\
eceives)h(performed)f(on)g(any)g(corresponding)f(sequence)i(of)-4 2580 y(proc\
essors.)24 b(The)14 b(path)e(with)h(the)g(lar)o(gest)g(number)g(of)g(sends/re\
ceives)h(will)e(be)h(called)h(the)f(critical)f(path.)24 b(Sends/receives)-4
2644 y(on)12 b(the)g(critical)g(path)g(are)h(called)g(critical-path)e(sends/r\
eceives.)23 b(The)14 b(time)e(for)g(a)h(computation)e(is)i(at)f(least)h(the)f
(number)h(of)-4 2709 y(critical-path)8 b(sends/receives)k(times)e(the)g(avera\
ge)h(time)g(for)e(each)j(send/receive.)908 2836 y fu(80)p eop
%%Page: 81 95
 bop 75 53 a fu(packets)18 b(of)g fr(unlimited)f fu(size,)j(we)f(could)e(use)
i(a)f(naive)g(algorithm)e(in)i(which)g(each)g(processor)g(sends)h(a)75 132 y
(packet)14 b(of)f fp(M)19 b fu(smallest-key)13 b(values)h(in)g(order)e(to)i
(construct)f(the)g(set)h(of)g fp(M)19 b fu(smallest)14 b(key)f(values)h(of)f
(the)75 210 y(entire)h(system.)26 b(Since)14 b fp(M)20 b fu(is)15 b(independe\
nt)f(of)g(the)h(number)f(of)g(processors)h(and)g(can)f(be)h(an)g(extremely)75
288 y(lar)o(ge)e(number)m(,)h(this)f(algorithm)f(may)h(have)g(poor)f(performa\
nce.)19 b(But)13 b(if)g(we)g(limited)g(the)g(packet)g(size)g(to)75 366 y(a)i
(moderate)f(size)h(\(say)m(,)h(a)f(polynomial)f(function)g(of)g(log)8 b fp
(p)p fu(\),)16 b(it)f(would)f(be)h(very)f(dif)o(\256cult)g(to)h(reduce)f(the)
75 445 y(number)e(of)g(critical-path)f(sends/receives)i(to)f fp(O)r fn(\()p fu
(log)c fp(p)p fn(\))p fu(.)148 590 y(Fortunately)l(,)18 b(as)g(explained)f
(in)g(Section)g(4.1.2.2,)j(in)d(our)f(multilist)h(scheduling)g(system,)i(it)e
(is)g(not)75 668 y(critical)g(for)f(the)h(selection)h(problem)e(to)h(select)h
(exactly)f fp(M)22 b fu(elements.)33 b(It)17 b(is)h(good)f(enough)g(to)g(sele\
ct)75 746 y fn(\002\()p fp(M)5 b fn(\))13 b fu(elements.)18 b(Thus,)c(we)e
(can)h(relax)f(the)g(selection)h(problem)e(to)h(the)h(following:)197 919 y
(Given)20 b(a)h(set)g(of)e fp(N)26 b fu(elements)21 b(each)f(containing)g(a)h
(key)l(,)i(and)e(given)f(an)g(integer)g(value)197 997 y fp(M)5 b fu(,)18 b
(1)g fq(\024)h fp(M)24 b fq(\024)18 b fp(N)6 b fu(,)17 b(select)f fp(N)750
1004 y fm(sel)812 997 y fu(elements)g(that)g(have)g(the)g(smallest)g(key)g
(values,)h(where)197 1075 y fp(N)236 1082 y fm(sel)296 1075 y fn(=)c(\002\()p
fp(M)6 b fn(\))p fu(,)12 b(e.g.,)i fp(M)20 b fq(\024)13 b fp(N)755 1082 y fm
(sel)815 1075 y fq(\024)g fu(2)p fp(M)6 b fu(.)75 1248 y(This)13 b(problem)e
(is)i(called)f(the)g(range)g(selection)h(problem)e(because)i(the)f(value)g fp
(N)1497 1255 y fm(sel)1555 1248 y fu(is)h(in)f(a)g(range)g fn(\002\()p fp(M)6
b fn(\))p fu(,)75 1326 y(not)12 b(just)h(a)f(\256xed)g(value,)h fp(M)5 b fu
(.)148 1471 y(By)j(taking)g(advantage)g(of)f(this)h(relaxation,)h(we)f(can)g
(devise)h(a)f(very)f(ef)o(\256cient)h fr(parallel)g(range)g(selection)75 1549
y fu(\()p fr(PRS)p fu(\))17 b(algorithm)f(which)g(minimizes)h(the)g(number)f
(of)h(critical-path)e(sends/receives)j(\(by)e(using)h(only)75 1627 y(one)d
(combining)g(operation)g(and)g(then)g(one)h(disseminating)f(operation,)h(as)g
(de\256ned)f(in)g(De\256nition)g(4.1\),)75 1706 y(while)g(keeping)g(the)g(pac\
ket)g(size)h(moderate)f(\()p fp(O)q fn(\()p fu(log)1021 1685 y fo(2)1048 1706
y fp(p)p fn(\))p fu(\).)24 b(First,)14 b(we)g(will)g(summarize)g(our)g(theore\
tical)75 1784 y(results)f(concerning)e(the)i(PRS)f(algorithm,)f(and)i(then)f
(we)g(will)g(present)h(more)f(details.)75 2018 y fh(5.2.1)57 b(Summary)16 b
(of)f(Results)75 2197 y fs(5.2.1.1)51 b(Assumptions)75 2375 y fu(Our)16 b(new)
h(PRS)f(algorithm)f(is)i(based)g(on)g(a)f(tree-shaped)h(network)e(of)i(proces\
sors.)31 b(For)16 b(simplicity)g(of)75 2454 y(discussion,)d(we)g(make)f(two)h
(assumptions)f(about)g(the)h(network)e(as)i(follows.)148 2634 y fq(\017)24 b
fu(The)13 b(processor)f(tree)g(is)h(a)f(complete)g(binary)g(tree.)18 b(This)
13 b(implies)f(that)g(the)g(leaf)g(processors)h(are)f(all)197 2712 y(at)j(the)
f(same)h(bottom)f(level)g fp(q)i fu(of)e(the)h(processor)f(tree,)i(where)e fp
(q)i fu(is)f(lg)8 b fp(p)15 b fu(and)f fp(p)h fu(is)g(the)g(number)f(of)988
2836 y(81)p eop
%%Page: 82 96
 bop 117 53 a fu(leaf)13 b(processors.)68 184 y fq(\017)24 b fu(All)13 b(elem\
ents)g(are)f(distributed)g(over)g(leaf)h(processors,)g(not)g(over)f(internal)
g(processor)h(nodes.)19 b(For)117 263 y(example,)14 b(if)e(internal)h(process\
or)g(nodes)g(are)g(embedded)g(in)g(leaf)f(processors,)i(as)g(in)f(the)g(examp\
le)117 341 y(in)g(Figure)e(4.4,)i(we)g(can)f(say)h(the)g(internal)e(processor)
i(nodes)f(have)h(no)f(elements.)69 554 y(W)n(ithout)f(loss)i(of)e(generality)
l(,)i(we)f(also)g(assume)h(all)f(the)g(elements)g(have)g(distinct)g(key)g(val\
ues)g(for)g(the)-4 632 y(range)f(selection)h(problem.)17 b(If)11 b(elements)h
(are)g(allowed)g(to)f(have)h(the)g(same)g(key)g(values,)h(we)f(can)g(rede\256\
ne)-4 710 y(the)17 b(key)h(value)g(in)f(order)g(to)h(make)f(each)h(element)g
(have)g(a)g(distinct)f(key)h(value,)h(as)g(follows.)33 b(For)17 b(an)-4 788 y
(element)11 b(on)h(a)g(leaf)g(processor)g fp(P)582 795 y fm(i)596 788 y fu
(,)h(if)f(the)f(original)g(key)h(value)g(is)h fp(\031)g fu(and)f(the)g(elemen\
t)g(is)g(the)g fp(j)s fu(th)g(element)-4 867 y(with)j(the)g(key)h(value)f(of)
g fp(\031)i fu(on)f fp(P)586 874 y fm(i)600 867 y fu(,)h(we)f(can)g(use)g(a)f
(compound)g(key)h fn(\()p fp(\031)q(;)8 b(i;)g(j)s fn(\))15 b fu(as)h(its)g
(new)g(key:)24 b fp(\031)17 b fu(is)f(the)-4 945 y(primary)11 b(key)l(,)i fp
(i)f fu(is)h(the)f(secondary)h(key)l(,)g(and)g fp(j)i fu(is)e(the)f(tertiary)
f(key)m(.)-4 1175 y fs(5.2.1.2)50 b(Main)12 b(Result)117 1489 y(Theorem)h(5.6)
24 b fr(Given)17 b(a)g(pr)o(ocessor)h(tr)n(ee)g(with)e(the)h(above)g(assumpti\
ons,)i(an)e(algorithm)117 1567 y(can)c(be)f(devised)h(to)f(solve)h(the)f(PRS)
i(pr)n(oblem)e(and)h(to)f(satisfy)h(the)f(following)g(pr)n(operties.)117 1674
y fs(U1)25 b fr(The)15 b(algorithm)f(only)h(r)o(equir)n(es)h(one)f(combining)
g(operation)f(and)h(then)g(one)h(dissemi-)225 1753 y(nating)c(operation)g(\(s\
ee)g(De\256nition)g(4.1\).)117 1856 y fs(U2)25 b fr(Each)19 b(packet)g(size)h
(is)g fp(O)q fn(\()p fu(lg)716 1835 y fo(2)743 1856 y fp(p)p fn(\))p fr(.)39 b
(Mor)o(e)19 b(accurately)m(,)j(if)c fp(p)24 b fq(\025)f fu(2)p fr(,)e(each)e
(packet)g(has)225 1934 y(at)13 b(most)h fq(d)p fp(\024)9 b fu(lg)483 1913 y fo
(2)510 1934 y fp(p)p fq(e)j fn(+)g fu(1)h fr(items)h(each)g(containing)f(one)
h(load)f(value)h(\(r)n(epr)o(esenting)g(an)225 2013 y(element)e(count\))g(and)
g(one)g(key)h(value,)f(wher)o(e)h fp(\024)g fn(=)h fu(1)p fp(=)p fn(\()p fu
(1)d fq(\000)g fp(\016)q(=)p fu(2)p fn(\))p fr(,)i fp(\016)j fn(=)d fu(1)p fp
(=)p fn(\()p fu(lg)c fp(e)f fu(lg)g fp(p)p fn(\))p fr(,)225 2091 y(and)k fp
(e)h fr(is)g(the)g(base)g(of)g(the)g(natural)f(logarithm,)h(appr)o(oximately)
f fu(2)p fp(:)p fu(718)p fr(.)19 b(Note)13 b(that)g(if)225 2169 y fp(p)h fq
(!)g(1)e fr(then)g fp(\016)k fq(!)d fu(0)g fr(and)f fp(\024)i fq(!)f fu(1)p fr
(.)117 2273 y fs(U3)25 b fr(The)18 b(total)h(time)g(is)g fp(O)q fn(\()p fu
(log)685 2252 y fo(3)712 2273 y fp(p)c fn(+)g(\()p fu(log)8 b fp(p)p fn(\)\()
p fu(log)g fp(N)d fn(\)\))p fr(,)21 b(if)e(we)g(make)g(the)g(following)g(two)
225 2351 y(assumptions:)267 2454 y fq(\017)24 b fr(It)12 b(takes)h fp(O)q fn
(\()p fu(1)p fn(\))g fr(time)f(to)g(send)h(each)f(piece)h(of)f(data.)267 2545
y fq(\017)24 b fr(Each)18 b(\(leaf\))f(pr)n(ocessor)i(maintains)e(elements)h
(based)g(on)f(the)h(priority)g(queue)316 2624 y(described)13 b(in)f(Section)g
(4.2.1)i(by)e(letting)g(the)g(grain)h(size)g(of)f(each)h(element)f(\(cor)o
(-)316 2702 y(r)n(esponding)h(to)f(a)g(task\))h(be)f(one.)908 2836 y fu(82)p
eop
%%Page: 83 97
 bop 148 53 a fu(The)12 b(PRS)f(algorithm)f(that)i(satis\256es)g(these)g(prop\
erties)e(is)i(very)f(ef)o(\256cient)g(for)g(the)g(following)f(reasons.)75 132
y(Concerning)21 b(the)g(\256rst)g(property)-5 b(,)24 b(using)d(only)g(one)g
(combining)f(operation)h(and)g(one)g(disseminating)75 210 y(operation)15 b
(is)i(quite)f(ef)n(\256cient)g(because)h(the)f(number)f(of)h(sends/receives)h
(and)f(the)g(number)f(of)h(critical-)75 288 y(path)8 b(sends/receives)h(are)f
(both)f(optimal.)16 b(This)9 b(advantage)f(is)h(especially)f(important)f(on)h
(a)g(network-based)75 366 y(multicomputer)l(,)13 b(where)f(each)h(send/receiv\
e)g(incurs)f(signi\256cant)g(overhead.)148 512 y(The)e(second)g(property)f
(shows)h(that)f(the)h(packet)g(size)g(is)g(moderate.)17 b(Assume)10 b(that)f
(each)h(item)g(requires)75 590 y(8)h(bytes.)19 b(Then,)12 b(for)e(example,)i
(if)f fp(p)h fu(is)f(1)p fp(;)d fu(000,)k(the)f(packet)h(size)f(is)h(about)f
(1)g(kilobyte;)g(if)g fp(p)h fu(is)f(1)p fp(;)d fu(000)p fp(;)g fu(000,)75 668
y(the)j(packet)h(size)g(is)g(only)f(about)h(4)f(kilobytes.)18 b(In)11 b(many)
g(networks,)h(the)g(time)f(for)f(sending)i(a)g(packet)f(with)75 746 y(4)h(kil\
obytes)g(is)g(only)g(a)g(small)g(number)g(of)f(times)h(longer)g(than)g(that)g
(for)f(a)h(single)g(word)g(\(see)g([27]\).)17 b(From)75 825 y(the)9 b(above)g
(two)h(properties,)f(we)h(conclude)f(that)g(our)g(PRS)g(algorithm)f(is)h(very)
g(ef)o(\256cient)g(in)g(network-based)75 903 y(multicomputers.)148 1048 y(The)
14 b(third)f(property)g(shows)h(that)g(the)g(time)f(complexity)g(for)g(a)h
(parallel)f(system)i(with)e(fast)h(commu-)75 1126 y(nication,)e(like)h(the)f
(CM5)h([99)o(],)g(is)f(also)h(quite)f(low)m(.)148 1271 y(In)i(the)f(remaining)
g(sections,)j(we)e(will)f(design)h(a)g(PRS)g(algorithm)e(which)i(satis\256es)
h(the)f(above)f(three)75 1350 y(properties,)f(U1-U3.)37 b(This)13 b(algorithm)
e(uses)i(only)f(one)h(combining)f(operation)f(and)i(one)f(disseminating)75
1428 y(operation)19 b(\(property)f(U1\),)k(in)e(which)g(each)g(packet)g(size)
g(satis\256es)h(property)e(U2.)40 b(The)21 b(combining)75 1506 y(operation,)g
(described)f(in)f(Section)g(5.2.3,)k(combines)c(the)h(key)f(value)h(distribut\
ion)e(lists)i(\(de\256ned)f(in)75 1584 y(Section)e(5.2.2\))g(of)f(all)h(the)g
(processors)h(into)e(the)h(root)f(processor)n(.)32 b(Note)17 b(that)g(the)g
(data)g(of)f(these)i(lists)75 1663 y(roughly)12 b(represent)h(the)f(key)h(val\
ue)g(distributions;)g(these)g(lists)g(can)g(be)g(mer)o(ged)g(without)f(too)h
(much)f(loss)75 1741 y(of)j(accuracy)m(.)55 b(In)15 b(Section)g(5.2.3,)i(we)f
(will)f(also)h(show)f(that)h(on)f(the)g(root)g(processor)h(we)f(can)h(select)
g(a)75 1819 y(key)e(value)f(threshold)g fp(\031)509 1826 y fm(thr)574 1819 y
fu(from)g(the)g(\256nal)g(combined)h(list)f(\(which)g(roughly)g(represents)g
(the)h(key)f(value)75 1897 y(distribution)e(of)h(the)h(entire)f(system\),)g
(such)h(that)f(the)h(total)f(number)g(of)g(elements)g(with)g(priorities)g fq
(\024)h fp(\031)1898 1904 y fm(thr)75 1976 y fu(is)g fn(\002\()p fp(M)5 b fn
(\))p fu(.)19 b(After)12 b(the)h(combining)f(operation,)g(we)h(can)g(simply)f
(disseminate)h fp(\031)1488 1983 y fm(thr)1552 1976 y fu(to)g(all)f(the)h(pro\
cessors)75 2054 y(to)h(select)g(all)f(elements)h(with)f(priorities)g fq(\024)
i fp(\031)887 2061 y fm(thr)939 2054 y fu(.)22 b(Thus,)16 b(this)d(algorithm)
g(solves)h(the)g(PRS)f(problem.)22 b(In)75 2132 y(Section)16 b(5.2.4,)j(we)e
(will)f(also)h(prove)f(that)h(the)f(algorithm)g(satis\256es)h(the)g(third)f
(property)f(U3.)32 b(Finally)l(,)75 2210 y(in)15 b(Section)g(5.2.5,)j(we)e
(will)f(discuss)h(the)g(case)g(in)f(which)h(the)f(degree)h(of)f(processor)g
(tree)g(is)h(a)g(constant)75 2289 y(\(integer\))e(more)h(than)h(two,)g(and)g
(also)g(describe)f(how)h(the)f(algorithm)g(can)g(be)h(applied)f(to)h(our)f
(multilist)75 2367 y(system,)e(as)g(described)g(in)f(Section)g(4.1.2.2.)988
2836 y(83)p eop
%%Page: 84 98
 bop -4 53 a fh(5.2.2)57 b(Key)14 b(V)-5 b(alue)15 b(Distribution)h(Lists)-4
232 y fu(In)10 b(our)g(PRS)g(algorithm,)g(each)h(processor)f fp(P)775 239 y fm
(i)800 232 y fu(needs)h(to)g(generate)f(a)h(list)f fp(\025)1285 239 y fm(i)
1310 232 y fu(which)h(can)f(roughly)g(represent)-4 310 y(the)h(key)h(value)f
(distribution)g(in)g(the)h(whole)f(processor)h(subtree)f(rooted)g(at)h fp(P)
1345 317 y fm(i)1359 310 y fu(.)18 b(W)l(e)12 b(will)f(call)h(such)g(a)g(list)
f(a)-4 389 y fr(key)i(value)g(distribution)g(list)g fu(or)g(a)g fr(KVD)h(list)
p fu(.)21 b(A)13 b(KVD)h(list)f(has)g(several)h(items)f(and)g(each)h(item)e
(contains)-4 467 y(a)17 b(pair)g(of)g(values:)29 b(a)17 b(key)h(value)f(and)h
(a)f(load)h(value.)34 b(For)16 b(analyzing)i(a)f(KVD)h(list,)h(we)f(will)f
(use)h(the)-4 545 y(following)11 b(notation:)68 726 y fq(\017)24 b fp(m)160
733 y fm(i)174 726 y fu(:)18 b(denotes)13 b(the)f(number)g(of)g(items)g(in)g
(the)g(KVD)h(list)f fp(\025)1129 733 y fm(i)1144 726 y fu(.)68 843 y fq(\017)
24 b fu(\()p fp(\031)162 850 y fm(ij)192 843 y fu(,)13 b fp(L)250 850 y fm
(ij)280 843 y fu(\):)18 b(denotes)13 b(the)f fp(j)s fu(th)g(item)g(in)g(the)h
(KVD)f(list)h fp(\025)1089 850 y fm(i)1103 843 y fu(,)g(where)f(1)i fq(\024)g
fp(j)j fq(\024)c fp(m)1486 850 y fm(i)1500 843 y fu(.)18 b(Here,)13 b fp(\031)
1680 850 y fm(ij)1723 843 y fu(and)f fp(L)1840 850 y fm(ij)117 922 y fu(are)h
(the)f(key)g(value)h(and)f(the)g(load)h(value)f(of)g(this)g(item,)h(respectiv\
ely)l(.)68 1039 y fq(\017)24 b fn(\000)147 1046 y fm(i)162 1039 y fu(:)18 b
(denotes)12 b(the)h(processor)f(subtree)g(rooted)g(at)h fp(P)1011 1046 y fm
(i)1025 1039 y fu(.)68 1157 y fq(\017)24 b fp(n)146 1164 y fm(i)161 1157 y fn
(\()p fp(\031)q fn(\))p fu(:)18 b(denotes)12 b(the)h(number)e(of)h(elements)h
(with)f(the)g(key)h(value)f fp(\031)i fu(in)e(the)g(processor)h(subtree)f fn
(\000)1841 1164 y fm(i)1856 1157 y fu(.)68 1275 y fq(\017)24 b fp(N)156 1282 y
fm(i)171 1275 y fn(\()p fp(\031)q fn(\))p fu(:)18 b(denotes)434 1241 y fc(P)
478 1285 y fm(\031)499 1276 y fj(0)511 1285 y fk(\024)p fm(\031)570 1275 y fp
(n)599 1282 y fm(i)613 1275 y fn(\()p fp(\031)662 1257 y fk(0)673 1275 y fn
(\))p fu(.)69 1455 y(For)13 b(simplicity)l(,)i(if)f(the)f(root)h(processor)g
(is)g fp(P)872 1462 y fm(r)q(t)904 1455 y fu(,)h(we)f(will)g(use)h fp(n)p fn
(\()p fp(\031)q fn(\))f fu(and)g fp(N)5 b fn(\()p fp(\031)r fn(\))14 b fu(to)
g(stand)g(for)f fp(n)1771 1462 y fm(r)q(t)1803 1455 y fn(\()p fp(\031)r fn
(\))-4 1533 y fu(and)f fp(N)119 1540 y fm(r)q(t)151 1533 y fn(\()p fp(\031)q
fn(\))p fu(,)h(respectively)l(.)69 1679 y(From)e(the)h(above)h(de\256nition)e
(of)h fp(N)690 1686 y fm(i)704 1679 y fn(\()p fp(\031)r fn(\))p fu(,)h(we)f
(will)g(have)h(the)f(following)f(basic)i(properties:)68 1859 y fq(\017)24 b fp
(N)156 1866 y fm(i)171 1859 y fn(\()p fq(1)p fn(\))10 b fu(is)h(the)f(total)g
(number)g(of)g(elements)h(in)f(the)g(processor)h(subtree)f fn(\000)1392 1866 y
fm(i)1417 1859 y fu(while)g fp(N)1577 1866 y fm(i)1592 1859 y fn(\()p fq(\000\
1)p fn(\))g fu(is)g(zero,)117 1937 y(where)j fq(1)f fu(\()p fq(\0001)p fu(\))
f(is)i(a)f(value)h(higher)e(\(lower\))g(than)i(any)f(key)g(value)h(which)f
(can)h(be)f(used.)68 2055 y fq(\017)24 b fp(N)156 2062 y fm(i)171 2055 y fn
(\()p fp(\031)218 2062 y fo(1)236 2055 y fn(\))14 b fq(\024)f fp(N)360 2062 y
fm(i)374 2055 y fn(\()p fp(\031)421 2062 y fo(2)440 2055 y fn(\))f fu(if)g fp
(\031)542 2062 y fo(1)574 2055 y fq(\024)i fp(\031)655 2062 y fo(2)673 2055 y
fu(.)19 b(That)12 b(is,)h(the)g(function)e fp(N)6 b fn(\()p fp(\031)q fn(\))
12 b fu(is)h(monotonically)e(increasing.)68 2173 y fq(\017)24 b fu(If)13 b
(processor)g fp(P)399 2180 y fm(i)426 2173 y fu(is)h(an)f(internal)f(processo\
r)h(and)g(processors)h fp(P)1242 2180 y fm(l)1268 2173 y fu(and)f fp(P)1384
2180 y fm(r)1417 2173 y fu(are)g(the)g(two)g(children)f(of)117 2251 y fp(P)
148 2258 y fm(i)163 2251 y fu(,)18 b(then)e fp(N)334 2258 y fm(i)348 2251 y fn
(\()p fp(\031)q fn(\))j(=)g fp(N)530 2258 y fm(l)544 2251 y fn(\()p fp(\031)q
fn(\))13 b(+)g fp(N)714 2258 y fm(r)733 2251 y fn(\()p fp(\031)r fn(\))j fu
(for)f(each)i fp(\031)q fu(.)30 b(This)17 b(is)g(due)f(to)g(the)g(assumption)
g(that)g(each)117 2329 y(internal)c(processor)g(contains)h(no)f(elements.)117
2634 y fs(De\256nition)f(5.4)25 b fr(Fr)o(om)12 b(above,)h(a)g(KVD)g(list)g fp
(\025)944 2641 y fm(i)971 2634 y fr(\(generated)f(on)h(pr)n(ocessor)h fp(P)
1500 2641 y fm(i)1514 2634 y fr(\))e(is)h(called)g(a)117 2712 y fp(k)r fr(-de\
viant)f(KVD)h(list,)g(if)f(the)h(following)e(two)i(pr)n(operties)g(hold)f(for)
h(the)f(list:)908 2836 y fu(84)p eop
%%Page: 85 99
 bop 197 53 a fs(V1)24 b fr(The)15 b(key)g(values)h(ar)n(e)f(strictly)h(incr)
n(easing)f(and)g(the)g(load)f(values)h(ar)o(e)g(monotonically)304 132 y(incr)
o(easing)d(with)g(the)h(following)e(r)o(estrictions.)334 240 y(1.)24 b(For)c
(the)e(\256nal)g(item)h(\()p fp(\031)825 247 y fm(i;m)878 252 y fi(i)892 240 y
fr(,)i fp(L)958 247 y fm(i;m)1011 252 y fi(i)1026 240 y fr(\),)f(if)e fp(\031)
1149 247 y fm(i;m)1202 252 y fi(i)1240 240 y fn(=)k fq(1)p fr(,)e(then)f fp
(L)1520 247 y fm(i;m)1573 252 y fi(i)1610 240 y fn(=)k fp(N)1710 247 y fm(i)
1724 240 y fn(\()p fq(1)p fn(\))p fr(;)395 319 y(otherwise,)14 b fp(M)19 b fq
(\024)14 b fp(L)766 326 y fm(i;m)819 331 y fi(i)848 319 y fq(\024)g fp(N)940
326 y fm(i)954 319 y fn(\()p fp(\031)1001 326 y fm(i;m)1054 331 y fi(i)1069
319 y fn(\))p fr(.)334 410 y(2.)24 b(All)13 b(the)g(non-\256nal)e(load)h(valu\
es)h(\(i.e.,)h(all)e(the)g(load)h(values)f(except)h(for)g(the)f(\256nal)395
488 y(one\))g(ar)o(e)g(less)i(than)e fp(M)5 b fr(.)197 597 y fs(V2)24 b fr
(Let)13 b(the)f(list)h(have)g(a)f(pseudo)h(item)g(\()p fp(\031)948 604 y fm
(i)p fo(0)977 597 y fr(,)h fp(L)1036 604 y fm(i)p fo(0)1067 597 y fr(\),)e
(wher)o(e)h fp(\031)1269 604 y fm(i)p fo(0)1314 597 y fn(=)h fq(\0001)p fr
(,)f(and)f fp(L)1600 604 y fm(i)p fo(0)1645 597 y fn(=)i fu(0)p fr(.)19 b(For)
304 675 y(each)12 b(key)h fp(\031)q fr(,)g(wher)o(e)f fp(\031)703 682 y fm
(ij)747 675 y fq(\024)h fp(\031)j(<)d(\031)922 683 y fm(i)p fg(\()p fm(j)r fg
(+)p fo(1)p fg(\))1036 675 y fr(and)f fu(0)i fq(\024)f fp(j)k fq(\024)d fp
(m)1347 682 y fm(i)1371 675 y fq(\000)c fu(1)p fr(,)i(the)g(value)g fp(N)1701
682 y fm(i)1715 675 y fn(\()p fp(\031)r fn(\))g fr(is)304 753 y(in)g(the)h
(range,)g fp(L)603 760 y fm(ij)647 753 y fq(\024)h fp(N)739 760 y fm(i)753 753
y fn(\()p fp(\031)q fn(\))g fq(\024)g fp(k)r(L)947 760 y fm(ij)977 753 y fr
(.)148 969 y fu(From)g(the)h(above)g(de\256nition,)h(if)e fp(k)20 b(<)d(k)874
951 y fk(0)885 969 y fu(,)f(a)g fp(k)r fu(-deviant)e(KVD)h(list)g(is)h(obviou\
sly)e(also)i(a)f fp(k)1775 951 y fk(0)1787 969 y fu(-deviant)75 1047 y(list.)
75 2467 y @beginspecial @setspecial
%%BeginDocument: fig/k-accuracy.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 6 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
1 14 /Symbol FMDEFINEFONT
2 12 /Times-Italic FMDEFINEFONT
3 10 /Times-Italic FMDEFINEFONT
4 14 /Times-Roman FMDEFINEFONT
5 10 /Times-Roman FMDEFINEFONT
612 792 0 FMBEGINPAGE
295.2 273.6 295.2 234 352.8 234 352.8 273.6 4 L
6 X
0 K
V
0.5 H
2 Z
3 X
N
352.8 234 352.8 273.6 2 L
7 X
N
97.2 133.2 118.8 144 R
6 X
V
3 X
N
118.8 122.4 118.8 165.6 2 L
N
158.4 122.4 158.4 198 2 L
N
205.2 122.4 205.2 241.2 2 L
N
295.2 122.4 295.2 244.8 2 L
N
118.8 144 158.4 165.6 R
6 X
V
3 X
N
158.4 165.6 205.2 212.4 R
6 X
V
3 X
N
205.2 190.8 295.2 255.6 R
6 X
V
3 X
N
65.09 287.26 68.4 298.8 71.71 287.26 68.4 287.26 4 Y
0 X
V
68.4 122.4 68.4 288.26 2 L
N
373.67 125.71 385.2 122.4 373.67 119.09 373.67 122.4 4 Y
V
68.4 122.4 374.67 122.4 2 L
N
0 F
(key value ) 364.25 132.85 T
1 F
(p) 413.54 132.85 T
2 F
(N) 32.4 291.22 T
3 F
(i) 40.4 288.22 T
2 F
( \050) 43.18 291.22 T
1 F
(p) 50.17 291.22 T
2 F
(\051) 57.85 291.22 T
1 F
(-\245) 61.85 104.05 T
295.2 223.2 68.4 223.2 2 L
10 X
N
0 X
(\245) 365.04 104.05 T
4 F
(\050a\051) 204.69 89.43 T
373.67 50.11 385.2 46.8 373.67 43.49 373.67 46.8 4 Y
V
68.4 46.8 374.67 46.8 2 L
N
1 F
(\245) 370.46 29.88 T
(-\245) 61.2 30.28 T
(p) 402.35 33.91 T
4 F
(\050b\051) 210.46 13.9 T
2 F
(N) 32.4 59.08 T
3 F
(i) 40.4 56.08 T
2 F
( \050) 43.18 59.08 T
1 F
(p) 50.17 59.08 T
2 F
(\051:) 57.85 59.08 T
68.4 122.4 97.2 122.4 97.2 133.2 108 133.2 118.8 133.2 118.8 144 147.6 144
 147.6 154.8 158.4 154.8 158.4 165.6 180 165.6 180 176.4 190.8 176.4 190.8 190.8 205.2 190.8
 205.2 201.6 230.4 201.6 230.4 212.4 248.4 212.4 248.4 223.2 266.4 223.2 266.4 234 295.2 234
 295.2 244.8 309.73 244.27 309.73 255.6 324 255.6 324 266.4 345.6 266.4 29 L
3 H
N
1 F
(p) 89.59 111.22 T
3 F
(i1) 97.27 108.22 T
1 F
(p) 114.79 111.2 T
3 F
(i2) 122.47 108.2 T
1 F
(p) 154.39 111.22 T
3 F
(i3) 162.07 108.22 T
1 F
(p) 201.19 111.22 T
3 F
(i4) 208.87 108.22 T
1 F
(p) 288.65 111.22 T
3 F
(i5) 296.33 108.22 T
5 F
(2) 104.4 147.98 T
(4) 131.8 169.58 T
(8) 178.6 214.57 T
(12) 244.8 261.37 T
2 F
(M) 40.25 219.91 T
5 F
( = 9) 50.24 219.91 T
([1,2]) 95.71 59.77 T
([2,4]) 128.11 59.77 T
([4,8]) 167.71 59.77 T
([6,12]) 234.71 59.77 T
1 F
(p) 89.66 30.28 T
3 F
(i1) 97.34 27.28 T
1 F
(p) 114.86 30.26 T
3 F
(i2) 122.54 27.26 T
1 F
(p) 154.46 30.28 T
3 F
(i3) 162.14 27.28 T
1 F
(p) 201.26 30.28 T
3 F
(i4) 208.94 27.28 T
1 F
(p) 288.72 30.28 T
3 F
(i5) 296.4 27.28 T
5 F
([10, ) 306.71 59.77 T
1 F
(\245) 325.03 59.77 T
5 F
(]) 335.01 59.77 T
2 F
(L) 309.6 221.06 T
3 F
(i5) 316.27 218.06 T
5 F
(=10) 324.05 221.06 T
2 F
(L) 127.22 132.2 T
3 F
(i2 ) 133.89 129.2 T
5 F
(=2) 144.17 132.2 T
2 F
(L) 69.5 127.46 T
3 F
(i1) 76.17 124.46 T
5 F
(=1) 83.95 127.46 T
2 F
(L) 234 177.86 T
3 F
(i4) 240.67 174.86 T
5 F
(=6) 248.44 177.86 T
2 F
(L) 169.32 152.66 T
3 F
(i3) 175.99 149.66 T
5 F
(=4) 183.77 152.66 T
97.2 43.2 115.2 50.4 R
3 X
V
0.5 H
0 Z
0 X
N
97.2 50.4 97.2 43.2 2 L
3 X
V
3 H
2 Z
0 X
N
118.8 43.2 154.8 50.4 R
3 X
V
0.5 H
0 Z
0 X
N
118.8 50.4 118.8 43.2 2 L
3 X
V
3 H
2 Z
0 X
N
158.4 43.2 201.6 50.4 R
3 X
V
0.5 H
0 Z
0 X
N
158.4 50.4 158.4 43.2 2 L
3 X
V
3 H
2 Z
0 X
N
205.2 43.2 291.6 50.4 R
3 X
V
0.5 H
0 Z
0 X
N
205.2 50.4 205.2 43.2 2 L
3 X
V
3 H
2 Z
0 X
N
349.2 50.4 295.2 50.4 295.2 43.2 349.2 43.2 4 L
3 X
V
0.5 H
0 X
N
295.2 49.5 295.2 43.2 2 L
3 X
V
3 H
0 X
N
FMENDPAGE
%%EndDocument
 @endspecial 76 x(Figure)h(5.9:)26 b(\(a\))15 b(A)i(key)f(value)h(distributio\
n)e(in)h(the)h(processor)f(subtree)g fn(\000)1437 2550 y fm(i)1452 2543 y fu
(,)i(showing)e(a)h(KVD)f(list)g fp(\025)1935 2550 y fm(i)75 2621 y fu(\(conta\
ining)d(\256ve)g(items\))h(which)f(is)i(2-deviant,)e(given)h fp(M)21 b fn(=)
16 b fu(9.)23 b(\(b\))13 b(Simpli\256ed)f(diagram)h(to)h(show)g(the)75 2699 y
(possible)f(range)f(of)g fp(N)467 2706 y fm(i)481 2699 y fn(\()p fp(\031)q fn
(\))p fu(,)h(given)f(the)h(2-deviant)e(KVD)i(list)f(in)g(\(a\).)988 2836 y
(85)p eop
%%Page: 86 100
 bop 69 53 a fu(Figure)9 b(5.9\(a\))g(illustrates)h(a)g(key)f(value)h(distrib\
ution)f(in)g(the)h(processor)g(subtree)g fn(\000)1515 60 y fm(i)1529 53 y fu
(,)h(showing)f(a)g(KVD)-4 132 y(list)i fp(\025)97 139 y fm(i)124 132 y fu(\(c\
ontaining)f(\256ve)h(items\))g(which)h(is)f(2-deviant,)g(given)g fp(M)20 b fn
(=)13 b fu(9.)69 277 y(An)d(important)g(feature)g(of)h(a)g fp(k)r fu(-deviant)
f(KVD)h(list)g fp(\025)1000 284 y fm(i)1025 277 y fu(is)g(that)g(for)f(each)h
(key)g fp(\031)k(<)f(\031)1532 284 y fm(i;m)1585 289 y fi(i)1611 277 y fu(\(t\
he)c(\256nal)h(key)-4 355 y(value\))j(we)h(can)g(\256nd)f(a)h(load)g(value)f
fp(L)h fu(from)f(the)h(KVD)f(list,)i(such)f(that)g fp(L)i fq(\024)g fp(N)1432
362 y fm(i)1446 355 y fn(\()p fp(\031)q fn(\))h fq(\024)e fp(k)r(L)p fu(.)26 b
(In)14 b(Figure)-4 433 y(5.9\(a\),)f(the)g(shadowed)g(area)g(indicates)g(the)
g(possible)g(range)g(of)g fp(N)1179 440 y fm(i)1193 433 y fn(\()p fp(\031)q fn
(\))g fu(for)f(each)i fp(\031)q fu(.)20 b(\(Note)13 b(that)g(given)f(a)-4 512
y(2-deviant)f(list)h(the)h(possible)f(range)g(of)g(each)h fp(N)838 519 y fm
(i)852 512 y fn(\()p fp(\031)q fn(\))g fu(can)f(also)h(be)f(depicted)g(in)h
(a)f(simpler)g(way)g(in)g(Figure)-4 590 y(5.9\(b\).\))17 b(Thus,)c(the)g(list)
f(provides)g(us)h(with)f(the)g(rough)g(KVD)g(information.)69 735 y(In)g(the)h
(next)g(section,)h(we)f(will)g(create)g(KVD)g(lists)g(containing)g(an)g(expon\
entially)f(increasing)h(series)-4 813 y(of)i(load)h(values.)30 b(Thus,)18 b
(the)e(number)f(of)h(elements)g(in)g(a)g(KVD)g(list)g(can)g(be)g(reduced)g
(to)g(a)g(very)g(small)-4 892 y(number)l(.)-4 1124 y fh(5.2.3)57 b(Combining)
-4 1303 y fu(In)14 b(this)g(section,)i(we)e(will)g(\256rst)g(design)h(a)f(com\
bining)g(operation)g(which)g(can)h(\256nd)f(a)g(key)h(value)f(thresh-)-4 1381
y(old)k fp(\031)106 1388 y fm(thr)177 1381 y fu(satisfying)h(the)g(condition)
f fp(N)5 b fn(\()p fp(\031)768 1388 y fm(thr)820 1381 y fn(\))23 b(=)g(\002\()
p fp(M)5 b fn(\))p fu(,)21 b(and)e(in)g(which)g(each)g(packet)g(has)h(at)f
(most)-4 1459 y fq(d)p fp(\024)p fn(\()p fu(lg)8 b fp(p)p fn(\)\()p fu(lg)g fp
(M)e fn(\))p fq(e)14 b fn(+)g fu(1)j(items)h(\(where)e fp(\024)i fu(is)g(de\
\256ned)f(in)h(Theorem)f(5.6\).)34 b(Then,)19 b(we)f(will)f(further)f(im-)-4
1537 y(prove)g(the)i(operation)e(such)i(that)f(each)h(packet)f(only)g(needs)h
(at)f(most)h fq(d)p fp(\024)8 b fu(lg)1369 1516 y fo(2)1396 1537 y fp(p)p fq
(e)15 b fn(+)e fu(1)18 b(items)f(\(note)g(that)-4 1616 y fp(M)k fu(may)16 b
(be)g(much)g(lar)n(ger)g(than)g fp(p)p fu(\),)h(while)f(we)g(can)g(still)g
(\256nd)g(a)g(key)g(value)g(threshold)f fp(\031)1609 1623 y fm(thr)1677 1616 y
fu(satisfying)-4 1694 y fp(N)5 b fn(\()p fp(\031)87 1701 y fm(thr)138 1694 y
fn(\))14 b(=)g(\002\()p fp(M)5 b fn(\))p fu(.)69 1839 y(W)l(e)i(summarize)h
(the)f(combining)g(operation)g(in)g(which)h(each)g(packet)f(has)h(at)g(most)g
fq(d)p fp(\024)p fn(\()p fu(lg)g fp(p)p fn(\)\()p fu(lg)g fp(M)e fn(\))p fq
(e)p fn(+)q fu(1)-4 1917 y(items,)k(as)g(follows.)17 b(Each)11 b(leaf)e(proce\
ssor)h(\256rst)f(creates)h(a)g(2-deviant)e(KVD)i(list)g(with)f(at)g(most)h fq
(d)p fu(lg)e fp(M)e fq(e)f fn(+)g fu(1)-4 1996 y(items,)k(as)g(described)g
(in)f(Section)g(5.2.3.1,)j(and)d(then)g(sends)i(the)e(list)g(to)h(its)f(paren\
t.)17 b(Then,)10 b(for)e(each)g(internal)-4 2074 y(processor)13 b(node)h fp
(P)342 2081 y fm(i)357 2074 y fu(,)h(if)e(its)h(two)g(children)f(have)h(gener\
ated)g fp(k)r fu(-deviant)f(KVD)h(lists)g(and)g(have)g(sent)g(their)-4 2152 y
(lists)k(to)f fp(P)181 2159 y fm(i)196 2152 y fu(,)i(then)f fp(P)362 2159 y fm
(i)394 2152 y fu(can,)i(as)e(shown)g(in)f(Section)g(5.2.3.2,)k(mer)o(ge)c(the\
ir)g(lists)h(into)g(a)g(KVD)f(list)h(with)-4 2230 y fp(k)r fn(\()p fu(1)10 b
fn(+)g fp(\016)r fn(\))p fu(-deviation)h(and)h(with)g(at)g(most)g fq(d)p fp
(\024)p fn(\()p fu(lg)c fp(p)p fn(\)\()p fu(lg)h fp(M)c fn(\))p fq(e)11 b fn
(+)f fu(1)i(items.)18 b(If)12 b(processor)g fp(P)1557 2237 y fm(i)1584 2230 y
fu(is)g(not)g(the)g(root,)-4 2309 y(the)i(list)h(will)f(be)g(sent)h(to)g(its)
f(parent)g(which)h(in)f(turn)g(repeats)h(the)f(above)h(operation.)24 b(If)14 b
(processor)g fp(P)1808 2316 y fm(i)1837 2309 y fu(is)-4 2387 y(the)e(root)g fp
(P)193 2394 y fm(r)q(t)225 2387 y fu(,)i(Lemma)f(5.7)g(below)f(proves)h(that)
f(the)h(KVD)g(list)f fp(\025)1154 2394 y fm(r)q(t)1199 2387 y fu(of)h(the)f
(root)g(processor)h(is)g(4-deviant.)-4 2465 y(Now)l(,)j(we)g(can)f(choose)h
(the)f(\256nal)g(key)g(value)g fp(\031)847 2472 y fm(r)q(t;m)918 2476 y fi
(rt)964 2465 y fu(in)g fp(\025)1046 2472 y fm(r)q(t)1093 2465 y fu(as)h(the)f
(key)g(value)g(threshold)g(because)h(the)-4 2543 y(condition)11 b fp(N)5 b fn
(\()p fp(\031)287 2550 y fm(r)q(t;m)358 2554 y fi(r)q(t)389 2543 y fn(\))14 b
(=)g(\002\()p fp(M)5 b fn(\))12 b fu(holds)h(according)f(to)g(Lemma)g(5.8.)
908 2836 y(86)p eop eos end TeXDict begin bos 300 @start /fa 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 11 14 17 17 28 26 11 11 11 17
22 8 11 8 9 17 17 17 17 17 17 17 17 17 17 11 11 22 22 22 17 31 20 20 22 24 20
20 24 24 11 15 22 18 28 22 24 20 24 20 17 18 24 20 28 20 18 18 13 9 13 14 17
11 17 17 15 17 15 9 17 17 9 9 15 9 24 17 17 17 17 13 13 9 17 15 22 15 15 13 13
9 13 18 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 13
17 17 6 17 17 17 17 7 18 17 11 11 17 17 0 17 17 17 8 0 17 12 11 18 18 17 30 33
0 17 0 11 11 11 11 11 11 11 11 0 11 11 0 11 11 11 30 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 30 0 9 0 0 0 0 18 24 31 10 0 0 0 0 0 22 0 0 0 9 0 0 9 17 22 17 0 0 0 0
/Times-Italic 1000 524288 rf /fb df[<01020408103020606040C0C0C0C0C0C0C0C0C0C0
40606020301008040201>8 30 2 8 13]40 dc[<80402010080C04060602030303030303030303
03020606040C0810204080>8 30 2 8 13]41 dc[<006000006000006000006000006000006000
006000006000006000006000FFFFF0FFFFF0006000006000006000006000006000006000006000
006000006000006000>20 22 2 4 25]43 dc dfe /fc 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 7 8 10 10 17 16 7 7 7 10 12 5 7 5 6 10 10 10
10 10 10 10 10 10 10 6 6 12 12 12 9 19 15 14 14 15 13 12 15 15 7 8 15 13 18 15
15 12 15 14 12 13 15 15 20 15 15 13 7 6 7 10 10 7 9 10 9 10 9 7 10 10 6 6 10 6
16 10 10 10 10 7 8 6 10 10 15 10 10 9 10 4 10 11 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 10 10 3 10 10 10 10 4 9 10 7 7 12 12 0
10 10 10 5 0 9 7 7 9 9 10 21 21 0 9 0 7 7 7 7 7 7 7 7 0 7 7 0 7 7 7 21 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 18 0 6 0 0 0 0 13 15 18 6 0 0 0 0 0 14 0 0 0 6 0 0 6
10 15 10 0 0 0 0 /Times-Roman 1000 327680 rf /fd df[<03C006200C000C000C000C00
070007800DC010C030C06040604060C0C080C0804180410022001C00>11 20 2 0 15]14 dc[<
07800C401020304060407F8060004000C0004020604021801E00>11 13 2 0 16]101 dc[<0720
08E010E030C060C060C060C0C180C180C180438067003B00030003000600060006003F80>11 19
2 6 15]113 dc dfe /fe df[<FFFFFF80FFFFFF80>25 2 3 -9 32]0 dc[<C0000000F0000000
3C0000000F00000003C0000000F00000003C0000000F00000003C0000000F00000003C0000000F
000000038000000F0000003C000000F0000003C000000F0000003C000000F0000003C000000F00
00003C00000070000000C000000000000000000000000000000000000000000000000000000000
0000007FFFFF00FFFFFF80>25 34 3 8 32]21 dc dfe /ff df[<004000800100020006000C00
0C0018001800300030007000600060006000E000E000E000E000E000E000E000E000E000E000E0
00E000600060006000700030003000180018000C000C0006000200010000800040>10 42 3 11
16]40 dc[<800040002000100018000C000C000600060003000300038001800180018001C001C0
01C001C001C001C001C001C001C001C001C001C0018001800180038003000300060006000C000C
0018001000200040008000>10 42 2 11 16]41 dc[<0006000000060000000600000006000000
0600000006000000060000000600000006000000060000000600000006000000060000FFFFFFE0
FFFFFFE00006000000060000000600000006000000060000000600000006000000060000000600
0000060000000600000006000000060000>27 28 2 4 32]43 dc[<7FFFFFC0FFFFFFE0000000
0000000000000000000000000000000000000000000000000000000000FFFFFFE07FFFFFC0>27
12 2 -4 32]61 dc dfe /fg df[<007C00C2010203000600060006000700078003C001E001F0
03780E381C1C381C300C700C700CE008E008E018E010E010E0306020604030801F00>15 29 2 0
18]14 dc[<0601C00E07E00E09E00E10C01C20001C40001D80001E00003FF000383800381C0038
1C00701C20701C20701C20701C40E00C40600780>19 18 2 0 24]20 dc[<60F0F060>4 4 4 0
12]58 dc[<0000038000000F0000003C000000F0000003C000000F0000003C000000F0000003C0
00000F0000003C000000F0000000F00000003C0000000F00000003C0000000F00000003C000000
0F00000003C0000000F00000003C0000000F0000000380>25 24 3 2 32]60 dc[<0001000300
0600060006000C000C000C0018001800180030003000300060006000C000C000C0018001800180
030003000300060006000C000C000C00180018001800300030003000600060006000C000C000>
16 41 2 10 21]61 dc[<E0000000780000001E0000000780000001E0000000780000001E0000
000780000001E0000000780000001E00000007800000078000001E00000078000001E000000780
00001E00000078000001E00000078000001E00000078000000E0000000>25 24 3 2 32]62 dc[
<01FE0000FF003E0000F0002E0001E0002E0002E0002E0002E0002E0004E0004E0009C0004E00
09C000470011C000470011C0008700238000870043800087004380008700838001070107000107
010700010382070001038207000203840E000203880E000203880E000203900E000403A01C0004
03A01C000401C01C000C01C01C001C01803C00FF8103FF80>40 28 2 0 40]77 dc[<01F00708
0C0818043808300870307FC0E000E000E000E000E000E0046008601030600F80>14 18 2 0 19]
101 dc[<07078009C86008D03008E03011C03011C03801C03801C0380380700380700380700380
600700E00700C00701800783000E86000E78000E00000E00001C00001C00001C00001C00003C00
00FF8000>21 26 -1 8 21]112 dc dfe /fh df[<0102040C1818303070606060E0E0E0E0E0E0
E0E0E0E060606070303018180C040201>8 34 3 9 14]40 dc[<8040203018180C0C0E06060607
0707070707070707070606060E0C0C181830204080>8 34 2 9 14]41 dc[<0030000030000030
00003000003000003000003000003000003000003000003000FFFFFCFFFFFC0030000030000030
00003000003000003000003000003000003000003000003000>22 24 2 4 27]43 dc dfe /fi
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 15 19 32 29 29
58 48 19 19 19 29 33 15 19 15 16 29 29 29 29 29 29 29 29 29 29 19 19 33 33 33
29 54 42 39 42 42 39 36 45 45 23 29 45 39 55 42 45 36 45 42 32 39 42 42 58 42
42 39 19 16 19 34 29 19 29 32 26 32 26 19 29 32 16 19 32 16 48 32 29 32 32 26
23 19 32 29 42 29 29 26 23 13 23 30 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 19 29 29 10 29 29 29 29 16 29 29 19 19 32 32 0 29 29
29 15 0 31 20 19 29 29 29 58 58 0 29 0 19 19 19 19 19 19 19 19 0 19 19 0 19 19
19 58 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 58 0 17 0 0 0 0 39 45 58 19 0 0 0 0 0 42
0 0 0 16 0 0 16 29 42 32 0 0 0 0 /Times-Bold 1000 917504 rf /fj df[<040C000000
00007058989830306064646830>6 18 2 0 11]105 dc[<7818183030303060606060C0C0C8C8
D070>5 17 2 0 10]108 dc[<73C09C20986098001800300030003000300060006000>11 11 2
0 14]114 dc[<08181818FF30303030606062646438>8 15 2 0 12]116 dc dfe /fk df[<FF
FFF0FFFFF0>20 2 3 -7 27]0 dc[<060F0F0E1E1E1C3C383830707060E0C040>8 17 1 -1 10]
48 dc[<0000004001FFFF8007FFFF0008030000100700002006000060060000C00E0000800E00
00000C0000000C0000001C0000001C000000180000001800000038000000300000003000000060
00000060000000C000000080000007FC00000FF80000>26 24 1 0 19]84 dc dfe /fl 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 10 12 15 15 24 23
10 10 10 15 16 7 10 7 8 15 15 15 15 15 15 15 15 15 15 8 8 16 16 16 13 27 21 19
19 21 18 16 21 21 10 11 21 18 26 21 21 16 21 19 16 18 21 21 27 21 21 18 10 8
10 14 15 10 13 15 13 15 13 10 15 15 8 8 15 8 23 15 15 15 15 10 11 8 15 15 21
15 15 13 14 6 14 16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 10 15 15 5 15 15 15 15 5 13 15 10 10 16 16 0 15 15 15 7 0 13 10 10
13 13 15 29 29 0 13 0 10 10 10 10 10 10 10 10 0 10 10 0 10 10 10 29 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 26 0 8 0 0 0 0 18 21 26 9 0 0 0 0 0 19 0 0 0 8 0 0 8 15
21 15 0 0 0 0 /Times-Roman 1000 458752 rf /fm df[<60F0F070101020204040>4 10 3
6 10]59 dc[<071018F0307060706060C060C060C06080C080C480C4C1C446C83870>14 14 2 0
19]97 dc[<07C01C20301060106020FFC0C000C000C000C000C010402060C01F00>12 14 2 0
16]101 dc[<1F0006000600060006000C000C000C000C0018F01B181C08180838183018301830
306030603160616062C022C03C>16 23 2 0 20]104 dc[<030003800300000000000000000000
0000001C002400460046008C000C0018001800180031003100320032001C00>9 23 1 0 12]
105 dc[<00180038001000000000000000000000000001C0022004300430086000600060006000
C000C000C000C001800180018001806300E300C6007800>13 29 0 6 14]106 dc[<3E0C0C0C0C
181818183030303060606060C0C8C8C8D070>7 23 2 0 11]108 dc[<383C1E0044C663004702
8100460301008E0703000C0603000C0603000C060600180C0600180C0620180C0C20180C0C4030
18044030180780>27 14 1 0 31]109 dc[<383C0044C6004702004602008E06000C06000C0600
0C0C00180C00180C40181840181880300880300F00>18 14 1 0 21]110 dc[<07C00C20101020
186018C018C018C01880308030C060C0C061803E00>13 14 2 0 17]111 dc[<071018D0307060
706060C060C060C06080C080C080C0C1C047803980018001800300030003001FC0>12 20 2 6
16]113 dc[<38F04518463846308C000C000C000C00180018001800180030003000>13 14 1 0
16]114 dc[<07C00C201870187038001E000FC003E000606060E060C0C0C1803F00>12 14 2 0
16]115 dc[<030003000600060006000600FFC00C000C000C0018001800180018003000308030
80310031001E00>10 20 1 0 13]116 dc[<0F1F0011A18020C38020C300418000018000018000
018000030000030200C30200E70400C5080078F000>17 14 1 0 20]120 dc dfe /fn df[<FF
FFFF000F801F000780070007800300078001000780010007800180078000800780008007800080
078000800780000007800000078000000780000007800000078000000780000007800000078000
000780000007800000078000000780000007800000078000000780000007800000078000000780
000007800000078000000FC00000FFFE0000>25 34 2 0 30]0 dc[<000FE00000783C0000E00E
0003C00780078003C00F0001E00E0000E01E0000F03E0000F83C0000787C00007C7C00007C7800
003C7800003CF840043EF840043EF87FFC3EF87FFC3EF87FFC3EF840043EF840043EF800003EF8
00003E7800003C7C00007C7C00007C3C0000783C0000781E0000F00E0000E00F0001E0078003C0
03C0078000E00E0000783C00000FE000>31 36 3 1 38]2 dc[<001FE00000F03C0001C00E0007
8007800F0003C01F0003E01E0001E03E0001F03C0000F07C0000F87C0000F87C0000F87C0000F8
7C0000F87C0000F87C0000F83C0000F03E0001F03E0001F01E0001E01E0001E00E0001C00F0003
C00700038003000300038007000180060081800604808004044080040840C00C08404008087FC0
0FF83FC00FF03FC00FF0>30 35 2 0 35]10 dc[<00200040008001000300060004000C000C00
180018003000300030007000600060006000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E0006000600060007000300030003000180018000C000C0004000600030001000080
00400020>11 50 4 13 19]40 dc[<800040002000100018000C00040006000600030003000180
0180018001C000C000C000C000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000C000C000C001C0018001800180030003000600060004000C0018001000200040008000>11
50 3 13 19]41 dc[<000180000001800000018000000180000001800000018000000180000001
80000001800000018000000180000001800000018000000180000001800000018000FFFFFFFEFF
FFFFFE000180000001800000018000000180000001800000018000000180000001800000018000
00018000000180000001800000018000000180000001800000018000>31 34 3 5 38]43 dc[<
FFFFFFFEFFFFFFFE00000000000000000000000000000000000000000000000000000000000000
00FFFFFFFEFFFFFFFE>31 12 3 -6 38]61 dc dfe /fo 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 11 14 17 17 28 26 11 11 11 17 19 8 11 8 9 17
17 17 17 17 17 17 17 17 17 9 9 19 19 19 15 31 24 22 22 24 20 18 24 24 11 13 24
20 30 24 24 18 24 22 18 20 24 24 31 24 24 20 11 9 11 16 17 11 15 17 15 17 15
11 17 17 9 9 17 9 26 17 17 17 17 11 13 9 17 17 24 17 17 15 16 7 16 18 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 17 17 6 17 17
17 17 6 15 17 11 11 18 18 0 17 17 17 8 0 15 12 11 15 15 17 33 33 0 15 0 11 11
11 11 11 11 11 11 0 11 11 0 11 11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 30 0 9
0 0 0 0 20 24 30 10 0 0 0 0 0 22 0 0 0 9 0 0 9 17 24 17 0 0 0 0 /Times-Roman
1000 524288 rf /fp df[<000F8000186000602000401000C000018000018000018000018000
01C00001E00001F00000F800003C00003E0000EF000387000703800E03801C01803C01803C0180
780180780180780180F00100F00100F00300F00200700600700400300C003808001C300007C000
>20 35 2 0 22]14 dc[<0300700701F80702780E04700E08000E30000E40001C80001F00001F
F0001C3C00380E00380E00380700380704700E08700E08700E08700610E003206001C0>22 21 3
0 28]20 dc[<03800000E00000F000007000007000007800003800003800003C00001C00001C00
001C00001E00000E00000E00000F00000700000700000780000780000F80001B800031C00021C0
0041C000C1E00180E00300E00600F00C00701C0070380078700038E00038C0001C>22 35 3 0
28]21 dc[<07FFFF1FFFFF3FFFFF30410040410080410080C30000820000820001820001820001
06000306000307000707000607000E07000E07001C03801C0380180300>24 21 2 0 28]25 dc[
<70F8FCFC7404040404080810102040>6 15 4 10 14]59 dc[<0000001800000078000001E000
00078000001E00000078000003E000000F8000003C000000F0000003C000000F0000003C000000
F0000000F00000003C0000000F00000003C0000000F00000003C0000000F80000003E000000078
0000001E0000000780000001E00000007800000018>29 28 4 2 38]60 dc[<00008000018000
0180000300000300000300000600000600000600000C00000C00000C0000180000180000180000
300000300000300000600000600000600000C00000C00000C00001800001800001800001800003
00000300000300000600000600000600000C00000C00000C000018000018000018000030000030
0000300000600000600000600000C00000C00000C00000>17 49 3 12 24]61 dc[<C0000000F0
0000003C0000000F00000003C0000000F00000003E0000000F80000001E0000000780000001E00
00000780000001E00000007800000078000001E00000078000001E00000078000001E000000F80
00003E000000F0000003C000000F0000003C000000F0000000C0000000>29 28 4 2 38]62 dc[
<00007F00400003C0C080000E002180001C0013800070000F8000E000070001C0000700038000
070007000007000F000002000E000002001E000002003C000002003C0000040078000000007800
0000007800000000F000000000F000000000F000000000F000000000F0003FFF00E00000F000E0
0000F000E00000F000E00001E000F00001E000F00001E000700001E000700003C000380003C000
180007C0000C0009C00006001180000380E08000007F000000>34 36 3 1 38]71 dc[<007FFE
000007C0000007800000078000000F0000000F0000000F0000000F0000001E0000001E0000001E
0000001E0000003C0000003C0000003C0000003C00000078000000780000007800000078000000
F0000000F0000000F0001000F0001001E0002001E0002001E0004001E0004003C000C003C00080
03C0018003C0078007C01F00FFFFFF00>28 34 2 0 33]76 dc[<007FC00001FF0007C00003E0
0007C00005E00007C00005E00009E0000BC00009E0000BC00009E00013C00009E00023C00011E0
0027800011E00047800011E00047800011E00087800021E0010F000020F0010F000020F0020F00
0020F0040F000040F0041E000040F0081E000040F0081E000040F0101E000080F0203C00008078
203C00008078403C00008078803C0001007880780001007900780001007900780001007A007800
02007C00F00002007C00F00002003800F00006003800F0000F003001F000FFE0203FFF00>48 34
2 0 47]77 dc[<007FC003FF0007C000780007C000600005E000200009E000400009E000400008
F000400008F000400010F800800010780080001078008000103C008000203C010000203E010000
201E010000201E010000400F020000400F020000400F020000400782000080078400008007C400
008003C400008003C400010001E800010001E800010001F800010000F800020000F00002000070
00020000700006000070000F00002000FFE0002000>40 34 2 0 39]78 dc[<00007F00000381
C0000E0060003800380070003800E0001C01C0001E0380000E0700000E0F00000F0E00000F1C00
000F3C00000F3C00000F7800000F7800000F7800000FF000001EF000001EF000001EF000003CF0
00003CF000003CE0000078E0000078E00000F0F00000E0F00001E0F00003C07000078078000700
38000E001C0038000E0070000783C00000FE0000>32 36 3 1 37]79 dc[<007FFFF000000780
1C000007800F000007800700000F000380000F000380000F000380000F000380001E000780001E
000780001E000780001E000F00003C000F00003C001E00003C003C00003C007000007801E00000
7FFF00000078000000007800000000F000000000F000000000F000000000F000000001E0000000
01E000000001E000000001E000000003C000000003C000000003C000000003C000000007C00000
00FFFC000000>33 34 2 0 31]80 dc[<007C000382000701000E01001C010038010078020070
0400FFF800F00000F00000E00000E00000E00000E00000E00080E000807003003004001838000F
C000>17 21 3 0 23]101 dc[<00E000E001E000C0000000000000000000000000000000000000
1E0023004380438083808380870007000E000E000E001C001C0038003820384070407040308031
001E00>11 34 2 0 17]105 dc[<0000E00001E00001E00000C000000000000000000000000000
0000000000000000000000000000001E0000230000438000838001038001038001038000070000
0700000700000700000E00000E00000E00000E00001C00001C00001C00001C0000380000380000
380000380000700000700000700070E000F0C000F180006300003E0000>19 44 -1 10 20]106
dc[<00F0000FE00000E00000E00000E00001C00001C00001C00001C00003800003800003800003
80000700000700F00703080704380E08780E10780E20300E40001C80001F00001FC0001C700038
3800383800381C00381C10703820703820703820701840E00C80600700>21 35 3 0 25]107 dc
[<3C07E01F00461830618047201880C087401D00E087801E00E087801C00E087001C00E00E0038
01C00E003801C00E003801C00E003801C01C007003801C007003801C007007001C007007043800
E007083800E00E083800E00E083800E006107001C006203000C003C0>38 21 2 0 43]109 dc[<
3C07C04618604720308740388780388700388700380E00700E00700E00700E00701C00E01C00E0
1C01C01C01C13801C23803823803823801847001883000F0>24 21 2 0 29]110 dc[<03C0F004
631C04740E08780E08700708700708700F00E00F00E00F00E00F00E00F01C01E01C01E01C01E01
C03C03803803803803C07003C0E0072180071E000700000700000E00000E00000E00000E00001C
00001C00001C0000FFC000>24 31 -1 10 24]112 dc[<00782001C4600302E00601C00E01C01C
01C03C01C0380380780380780380780380F00700F00700F00700F00700F00E00700E00701E0030
2E0018DC000F1C00001C00001C0000380000380000380000380000700000700000700007FF00>
19 31 2 10 22]113 dc dfe /fq df[<FFFFFFFCFFFFFFFC>30 2 4 -11 39]0 dc[<0000000C
0000003C000000F0000003C000000F0000003C000000F0000007C000001F00000078000001E000
00078000001E00000078000000E0000000780000001E0000000780000001E0000000780000001F
00000007C0000000F00000003C0000000F00000003C0000000F00000003C0000000C0000000000
0000000000000000000000000000000000000000000000000000007FFFFFF8FFFFFFFC>30 39 4
7 39]20 dc[<C0000000F00000003C0000000F00000003C0000000F00000003C0000000F800000
03E0000000780000001E0000000780000001E0000000780000001C00000078000001E000000780
00001E00000078000003E000000F8000003C000000F0000003C000000F0000003C000000700000
00C000000000000000000000000000000000000000000000000000000000000000000000007FFF
FFF8FFFFFFFC>30 39 4 7 39]21 dc[<03F80001F80007FE000FFE001E3F801C0300380FC030
01802003E06000804001F0C000404000F9800040C0007F00002080003F00002080003E00002080
001F00002080000F80002080001F80002080001FC00060400033E00040400061F000402000C0F8
00803001807E03801807003F8F000FFE000FFC0003F00003F800>43 21 3 0 50]49 dc[<0000
0300000300000600000600000C00000C0000180000180000300000300000600000600000C00000
C00000C0000180000180000300000300000600000600000C00000C000018000018000030000030
0000600000600000C00000C0000180000180000300000300000300000600000600000C00000C00
00180000180000300000300000600000600000C00000400000>24 48 7 12 0]54 dc[<000000
0018001FFFFFE000FFFFFFC001FFFFFF0006001E00000E001E00001C003C00003C003C00003800
3C000078007800007000780000C0007800000000F800000000F000000000F000000000F0000000
01F000000001E000000001E000000001E000000003E000000003C000000003C000000003C00000
000780000000078000000007000000000F000000000E000000001C000000001800000000300000
0001FFE0000003FFC000000FFF000000>37 35 1 0 27]84 dc[<7FF0FFF0C000C000C000C000
C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C0
00C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000
C000C000C000C0004000>12 50 9 13 22]100 dc[<FFF0FFF000300030003000300030003000
300030003000300030003000300030003000300030003000300030003000300030003000300030
003000300030003000300030003000300030003000300030003000300030003000300030003000
3000300010>12 50 0 13 22]101 dc dfe /fr 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 12 17 21 25 25 41 39 17 17 17 25 34 12 17 12 14 25
25 25 25 25 25 25 25 25 25 17 17 34 34 34 25 46 30 30 33 36 30 30 36 36 17 22
33 28 41 33 36 30 36 30 25 28 36 30 41 30 28 28 19 14 19 21 25 17 25 25 22 25
22 14 25 25 14 14 22 14 36 25 25 25 25 19 19 14 25 22 33 22 22 19 20 14 20 27
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 19 25 25 8
25 25 25 25 11 28 25 17 17 25 25 0 25 25 25 12 0 26 17 17 28 28 25 44 50 0 25
0 17 17 17 17 17 17 17 17 0 17 17 0 17 17 17 44 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 44 0 14 0 0 0 0 28 36 47 15 0 0 0 0 0 33 0 0 0 14 0 0 14 25 33 25 0 0 0 0
/Times-Italic 1000 786432 rf /fs 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 12 17 28 25 25 50 41 17 17 17 25 28 12 17 12 14 25 25 25 25
25 25 25 25 25 25 17 17 28 28 28 25 46 36 33 36 36 33 30 39 39 19 25 39 33 47
36 39 30 39 36 28 33 36 36 50 36 36 33 17 14 17 29 25 17 25 28 22 28 22 17 25
28 14 17 28 14 41 28 25 28 28 22 19 17 28 25 36 25 25 22 20 11 20 26 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 25 25 8 25 25 25
25 14 25 25 17 17 28 28 0 25 25 25 12 0 27 17 17 25 25 25 50 50 0 25 0 17 17
17 17 17 17 17 17 0 17 17 0 17 17 17 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 50 0
15 0 0 0 0 33 39 50 16 0 0 0 0 0 36 0 0 0 14 0 0 14 25 36 28 0 0 0 0
/Times-Bold 1000 786432 rf /ft 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 10 14 17 21 21 35 32 14 14 14 21 23 10 14 10 12 21 21 21 21 21
21 21 21 21 21 12 12 23 23 23 18 38 30 28 28 30 25 23 30 30 14 16 30 25 37 30
30 23 30 28 23 25 30 30 39 30 30 25 14 12 14 19 21 14 18 21 18 21 18 14 21 21
12 12 21 12 32 21 21 21 21 14 16 12 21 21 30 21 21 18 20 8 20 22 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 14 21 21 7 21 21 21 21 7
18 21 14 14 23 23 0 21 21 21 10 0 19 15 14 18 18 21 42 42 0 18 0 14 14 14 14
14 14 14 14 0 14 14 0 14 14 14 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 11 0 0
0 0 25 30 37 13 0 0 0 0 0 28 0 0 0 12 0 0 12 21 30 21 0 0 0 0 /Times-Roman
1000 655360 rf /fu 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 10 13 16 20 20 33 31 13 13 13 20 22 10 13 10 11 20 20 20 20 20 20 20 20 20
20 11 11 22 22 22 18 37 29 27 27 29 24 22 29 29 13 16 29 24 35 29 29 22 29 27
22 24 29 29 38 29 29 24 13 11 13 19 20 13 18 20 18 20 18 13 20 20 11 11 20 11
31 20 20 20 20 13 16 11 20 20 29 20 20 18 19 8 19 22 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 13 20 20 7 20 20 20 20 7 18 20 13 13
22 22 0 20 20 20 10 0 18 14 13 18 18 20 40 40 0 18 0 13 13 13 13 13 13 13 13 0
13 13 0 13 13 13 40 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 35 0 11 0 0 0 0 24 29 35
12 0 0 0 0 0 27 0 0 0 11 0 0 11 20 29 20 0 0 0 0 /Times-Roman 1000 629145 rf
/fv 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 17 20
25 25 41 39 17 17 17 25 28 12 17 12 14 25 25 25 25 25 25 25 25 25 25 14 14 28
28 28 22 46 36 33 33 36 30 28 36 36 17 19 36 30 44 36 36 28 36 33 28 30 36 36
47 36 36 30 17 14 17 23 25 17 22 25 22 25 22 17 25 25 14 14 25 14 39 25 25 25
25 17 19 14 25 25 36 25 25 22 24 10 24 27 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 25 25 8 25 25 25 25 9 22 25 17 17 28 28 0
25 25 25 12 0 23 17 17 22 22 25 50 50 0 22 0 17 17 17 17 17 17 17 17 0 17 17 0
17 17 17 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 44 0 14 0 0 0 0 30 36 44 15 0 0 0
0 0 33 0 0 0 14 0 0 14 25 36 25 0 0 0 0 /Times-Roman 1000 786432 rf end
 TeXDict begin @letter
%%Page: 87 101
 bop 197 53 a fs(Lemma)14 b(5.7)24 b fr(For)18 b(the)f(combining)f(operation)
h(described)h(above,)h(the)e(KVD)g(list)g(on)g(the)197 132 y(r)n(oot)c(pr)n
(ocessor)h(is)e fv(4)p fr(-deviant.)197 336 y fs(Proof.)22 b fv(By)14 b(Lemma)
g(5.9)g(in)g(Section)f(5.2.3.1,)j(all)e(the)g(KVD)g(lists)g(on)g(leaf)f(proce\
ssors)i(\(at)197 414 y(level)h fp(q)q fv(\))f(are)h(2-deviant.)28 b(Then,)17 b
(the)f(KVD)g(lists)g(on)f(those)h(internal)f(processor)h(nodes)g(at)197 493 y
(level)11 b fp(q)g fq(\000)e fv(1)j(are)f(2)p fn(\()p fv(1)e fn(+)h fp(\016)q
fn(\))p fv(-deviant,)i(by)f(Lemma)h(5.11)g(in)f(Section)g(5.2.3.2.)20 b(Whene\
ver)11 b(we)197 571 y(go)i(up)g(one)h(level,)g(the)f(deviation)g(degree)g(bec\
omes)h fn(\()p fv(1)d fn(+)h fp(\016)q fn(\))i fv(times)f(lar)o(ger)m(.)21 b
(Thus,)15 b(the)e(list)197 649 y(on)e(the)g(root)f(processor)h(will)g(become)
g(2)p fn(\()p fv(1)d fn(+)g fp(\016)q fn(\))1043 631 y fm(q)1062 649 y fv(-de\
viant.)17 b(Since)1366 631 y fo(3)1396 649 y fv(2)p fn(\()p fv(1)8 b fn(+)g fp
(\016)q fn(\))1561 631 y fm(q)1594 649 y fq(\024)13 b fv(4,)f(the)f(list)197
727 y(is)i(also)f(a)h(4-deviant)e(list.)662 691 y 29 2 v 49 x 2 49 v 26 w 2 49
v 662 742 a 29 2 v 197 1056 a fs(Lemma)j(5.8)24 b fr(For)15 b(the)e(combining)
g(operation)h(described)g(above,)g fp(N)6 b fn(\()p fp(\031)1498 1063 y fm
(r)q(t;m)1569 1067 y fj(rt)1599 1056 y fn(\))16 b(=)f(\002\()p fp(M)6 b fn
(\))p fr(,)197 1134 y(wher)o(e)12 b fp(\031)357 1141 y fm(r)q(t;m)428 1145 y
fj(r)q(t)471 1134 y fr(is)h(the)f(\256nal)g(key)h(value)g(in)f(the)g(KVD)h
(list)g fp(\025)1229 1141 y fm(r)q(t)1273 1134 y fr(of)f(the)h(r)n(oot)f(pr)o
(ocessor)h fp(P)1729 1141 y fm(r)q(t)1762 1134 y fr(.)197 1339 y fs(Proof.)k
fv(W)l(e)c(will)f(prove)g(that)g(\(1\))g fp(N)5 b fn(\()p fp(\031)888 1346 y
fm(r)q(t;m)959 1350 y fj(rt)989 1339 y fn(\))14 b fq(\025)g fp(M)k fv(and)12 b
(\(2\))g fp(N)5 b fn(\()p fp(\031)1386 1346 y fm(r)q(t;m)1457 1350 y fj(rt)
1487 1339 y fn(\))14 b fq(\024)g fv(4)p fp(M)5 b fv(.)221 1454 y(\(1\))11 b
(W)l(e)h(will)f(prove)g fp(N)5 b fn(\()p fp(\031)673 1461 y fm(r)q(t;m)744
1465 y fj(r)q(t)775 1454 y fn(\))14 b fq(\025)f fp(M)k fv(from)11 b(the)g(\
\256rst)g(restriction)g(of)g(Property)f(V1)i(in)f(the)304 1532 y(KVD)g(list)f
fp(\025)522 1539 y fm(r)q(t)565 1532 y fv(\(note)g(that)g(the)g(list)h(is)g
(4-deviant)e(from)h(Lemma)g(5.7\).)18 b(If)10 b fp(\031)1599 1539 y fm(r)q
(t;m)1670 1543 y fj(rt)1714 1532 y fn(=)k fq(1)p fv(,)304 1611 y(then)9 b fp
(N)438 1618 y fm(r)q(t)470 1611 y fn(\()p fq(1)p fn(\))14 b fq(\025)f fp(M)i
fv(because)10 b(the)f(total)g(number)g(of)f(elements,)j fp(N)5 b fn(\()p fq
(1)p fn(\))p fv(,)10 b(is)g(at)f(least)h fp(M)304 1689 y fv(from)e(the)h(de\
\256nition)e(of)i(the)f(PRS)h(problem.)16 b(If)8 b fp(\031)1162 1696 y fm(r)q
(t;m)1233 1700 y fj(rt)1272 1689 y fv(is)h(not)g fq(1)p fv(,)g fp(M)20 b fq
(\024)13 b fp(N)1616 1696 y fm(r)q(t)1648 1689 y fn(\()p fp(\031)1695 1696 y
fm(r)q(t;m)1766 1700 y fj(r)q(t)1797 1689 y fn(\))p fv(.)304 1767 y(Thus,)h fp
(N)5 b fn(\()p fp(\031)520 1774 y fm(r)q(t;m)591 1778 y fj(r)q(t)622 1767 y fn
(\))13 b fq(\025)h fp(M)5 b fv(,)13 b(for)f(both)g(cases.)221 1868 y(\(2\))i
(Since)g fp(N)5 b fn(\()p fp(\031)510 1875 y fm(r)q(t;m)581 1879 y fj(r)q(t)
612 1868 y fn(\))17 b(=)f fp(N)6 b fn(\()p fp(\031)794 1875 y fm(r)q(t;m)865
1879 y fj(rt)907 1868 y fq(\000)12 b fv(1)p fn(\))g(+)h fp(n)p fn(\()p fp(\
\031)1141 1875 y fm(r)q(t;m)1212 1879 y fj(rt)1242 1868 y fn(\))p fv(,)j(it)e
(suf)o(\256ces)h(to)f(prove)g(that)g(the)304 1946 y(following)f(two)g(conditi\
ons)g(hold:)20 b(\(a\))13 b fp(n)p fn(\()p fp(\031)1089 1953 y fm(r)q(t;m)
1160 1957 y fj(r)q(t)1191 1946 y fn(\))i fq(\024)h fv(1)d(and)h(\(b\))f fp
(N)5 b fn(\()p fp(\031)1567 1953 y fm(r)q(t;m)1638 1957 y fj(rt)1680 1946 y fq
(\000)12 b fv(1)p fn(\))j fp(<)304 2024 y fv(4)p fp(M)6 b fv(.)32 b(Since)16 b
(all)h(elements)g(have)h(distinct)e(key)h(values,)i(each)e fp(n)p fn(\()p fp
(\031)r fn(\))j fq(\024)g fv(1,)f(i.e.,)g(the)304 2102 y(condition)c(\(a\))g
(holds.)27 b(Since)16 b(the)f(KVD)g(list)h fp(\025)1157 2109 y fm(r)q(t)1205
2102 y fv(is)f(4-deviant,)h fp(N)5 b fn(\()p fp(\031)1561 2109 y fm(r)q(t;m)
1632 2113 y fj(r)q(t)1676 2102 y fq(\000)12 b fv(1)p fn(\))18 b fq(\024)304
2181 y fv(4)p fp(L)362 2188 y fm(r)q(t;m)433 2192 y fj(r)q(t)462 2188 y fk
(\000)p fo(1)508 2181 y fv(.)42 b(From)19 b(the)h(second)g(restriction)f(of)h
(property)f(V1,)j fp(L)1530 2188 y fm(r)q(t;m)1601 2192 y fj(r)q(t)1630 2188 y
fk(\000)p fo(1)1701 2181 y fp(<)i(M)6 b fv(.)304 2259 y(Thus,)14 b fp(N)5 b fn
(\()p fp(\031)520 2266 y fm(r)q(t;m)591 2270 y fj(r)q(t)633 2259 y fq(\000)10
b fv(1)p fn(\))k fp(<)g fv(4)p fp(M)5 b fv(,)13 b(i.e.,)h(condition)e(\(b\))f
(holds.)1390 2223 y 29 2 v 48 x 2 49 v 26 w 2 49 v 1390 2273 a 29 2 v 148 2463
a(The)20 b(above)e(combining)h(operation)f(can)h(\256nd)f(a)h(key)g(value)g
(threshold)f(satisfying)h(the)g(condition)75 2541 y fp(N)5 b fn(\()p fp(\031)
166 2548 y fm(thr)218 2541 y fn(\))16 b(=)g(\002\()p fp(M)5 b fn(\))p fv(,)15
b(with)e(each)i(packet)f(requiring)e(at)i(most)g fq(d)p fp(\024)p fn(\()p fv
(lg)8 b fp(p)p fn(\)\()p fv(lg)h fp(M)c fn(\))p fq(e)12 b fn(+)g fv(1)i(items\
.)23 b(This)15 b(upper)75 2590 y 750 2 v 133 2629 a fl(3)150 2644 y ft(The)10
b(Maclaurin)g(series)g(\(T)n(aylor)f(expansion)g(around)h(zero\))g(for)f(log)
o ff(\()p ft(1)g ff(+)f fg(\016)r ff(\))i ft(is)g fg(\016)g fe(\000)1395 2628
y fd(\016)1411 2615 y fc(2)1395 2635 y 29 2 v 1402 2659 a fl(2)1437 2644 y ff
(+)1483 2628 y fd(\016)1499 2615 y fc(3)1483 2635 y 29 2 v 1490 2659 a fl(3)
1525 2644 y fe(\000)1570 2628 y fd(\016)1586 2615 y fc(4)1570 2635 y 29 2 v
1577 2659 a fl(4)1604 2644 y fg(:::)p ft(.)k(In)9 b(addition,)g(since)75 2709
y fg(p)i fe(\025)h ft(2,)d(1)i fg(>)h(\016)i(>)e ft(0.)i(Hence,)c(we)f(can)g
(derive)f(that)g fg(\016)13 b(>)f ft(log)o ff(\()p ft(1)5 b ff(+)g fg(\016)r
ff(\))12 b fg(>)g(\016)6 b fe(\000)1184 2693 y fd(\016)1201 2680 y fc(2)1184
2700 y 29 2 v 1191 2723 a fl(2)1218 2709 y ft(.)15 b(Thus,)9 b ff(\()p ft(1)c
ff(+)g fg(\016)r ff(\))1460 2694 y fd(q)1490 2709 y ff(=)12 b ft(2)1555 2694 y
fd(q)6 b fl(lg)p fb(\()p fl(1)p fb(+)p fd(\016)q fb(\))1695 2709 y fg(<)11 b
ft(2)1759 2694 y fd(q)q(\016)q fb(\()p fl(lg)6 b fd(e)p fb(\))1875 2709 y ff
(=)12 b ft(2.)988 2836 y fv(87)p eop
%%Page: 88 102
 bop -4 56 a fv(bound)16 b(is)h(greater)f(than)h fq(d)p fp(\024)8 b fv(lg)542
35 y fo(2)569 56 y fp(p)p fq(e)14 b fn(+)f fv(1)k(\(in)f(Property)g(U2\))g
(when)h fp(M)25 b(>)20 b(p)p fv(.)32 b(So,)18 b(we)f(will,)g(in)g(Section)-4
134 y(5.2.3.3,)c(reduce)e(the)h(number)f(of)g(items)h(in)f(each)h(list,)g(suc\
h)g(that)g(each)g(packet)g(has)g(at)f(most)h fq(d)p fp(\024)c fv(lg)1715 113 y
fo(2)1742 134 y fp(p)p fq(e)i fn(+)g fv(1)-4 212 y(items)k(\(satisfying)g(Pro\
perty)f(U2\))h(while)g(retaining)g(the)g(property)f(that)i(the)f(key)h(value)
f fp(\031)1598 219 y fm(r)q(t;m)1669 223 y fj(r)q(t)1714 212 y fv(is)h(a)g
(key)-4 291 y(value)d(threshold)g(satisfying)g(the)g(PRS)g(problem.)-4 508 y
fs(5.2.3.1)50 b(Leaf)13 b(Pr)o(ocessors)-4 687 y fv(In)c(this)h(section,)h
(we)f(will)f(design)h(the)g(algorithm,)f(called)h(the)g(Create)g(Algorithm)e
(\(below\),)i(that)g(each)g(leaf)-4 765 y(processor)k(will)g(use)h(to)f(creat\
e)h(its)f(KVD)h(list.)25 b(Then,)15 b(we)g(will)f(prove)g(in)g(Lemma)h(5.9)g
(that)f(the)h(created)-4 843 y(KVD)d(list)g(is)h(2-deviant,)f(and)g(in)h(Lemm\
a)f(5.10)h(that)f(the)g(list)h(has)g(at)f(most)g fq(d)p fv(lg)c fp(M)e fq(e)
11 b fn(+)g fv(1)h(items.)-4 1012 y fs(Cr)o(eate)g(Algorithm)-4 1199 y(Step)f
(1)24 b fv(Initially)l(,)13 b(let)f(the)g(variable)g fp(L)i fn(=)g fv(1)e(and)
h(the)f(list)h fp(\025)1035 1206 y fm(i)1061 1199 y fv(be)g(empty)l(.)-4 2408
y @beginspecial @setspecial
%%BeginDocument: fig/2-dev.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 5 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
1 14 /Symbol FMDEFINEFONT
2 12 /Times-Italic FMDEFINEFONT
3 10 /Times-Italic FMDEFINEFONT
4 10 /Times-Roman FMDEFINEFONT
612 792 0 FMBEGINPAGE
316.8 226.41 316.8 206.61 345.6 206.61 345.6 226.41 4 L
6 X
0 K
V
0.5 H
2 Z
3 X
N
345.6 208.41 345.6 228.21 2 L
7 X
N
82.8 44.61 104.4 55.41 R
6 X
V
3 X
N
104.4 33.81 104.4 77.01 2 L
N
144 33.81 144 109.41 2 L
N
216 33.81 216 152.61 2 L
N
316.8 33.81 316.8 156.21 2 L
N
104.4 55.41 144 77.01 R
6 X
V
3 X
N
144 77.01 216 123.81 R
6 X
V
3 X
N
216 123.81 316.8 206.61 R
6 X
V
3 X
N
50.69 234.67 54 246.21 57.31 234.67 54 234.67 4 Y
0 X
V
54 33.81 54 235.67 2 L
N
359.27 37.11 370.8 33.81 359.27 30.5 359.27 33.81 4 Y
V
54 33.81 360.27 33.81 2 L
N
0 F
(key value ) 349.85 44.26 T
1 F
(p) 399.14 44.26 T
2 F
(N) 18 240.49 T
3 F
(i) 26 237.49 T
2 F
( \050) 28.78 240.49 T
1 F
(p) 35.77 240.49 T
2 F
(\051) 43.45 240.49 T
1 F
(-\245) 47.45 15.46 T
349.2 136.8 54 136.8 2 L
10 X
N
0 X
(\245) 350.64 15.46 T
54 33.81 82.8 33.81 82.8 44.61 93.6 44.61 104.4 44.61 104.4 55.41 133.2 55.41
 133.2 66.21 144 66.21 144 77.01 165.6 77.01 165.6 87.81 176.4 87.81 176.4 102.21 190.8 102.21
 190.8 113.01 216 113.01 216 123.81 234 123.81 234 134.61 244.8 134.61 244.8 145.41 259.2 145.41
 259.2 156.21 270 156.21 270 167.01 280.8 167.01 280.8 177.81 295.2 177.81 295.2 188.61 306 188.61
 306 195.81 316.8 195.81 316.8 206.61 331.2 206.61 35 L
3 H
N
(p) 75.19 22.63 T
3 F
(i1) 82.87 19.63 T
1 F
(p) 100.39 22.6 T
3 F
(i2) 108.07 19.6 T
1 F
(p) 139.99 22.63 T
3 F
(i3) 147.67 19.63 T
1 F
(p) 208.8 23.06 T
3 F
(i4) 216.48 20.06 T
1 F
(p) 309.6 23.06 T
3 F
(i5) 317.28 20.06 T
4 F
(2) 90 59.39 T
(4) 117.4 80.99 T
(8) 180 125.97 T
(16) 260.01 210.59 T
2 F
(M) 25.85 131.31 T
4 F
( = 9) 35.84 131.31 T
2 F
(L) 327.6 193.4 T
3 F
(i5) 334.27 190.4 T
4 F
(=16) 342.05 193.4 T
2 F
(L) 111.72 45.79 T
3 F
(i2 ) 118.39 42.79 T
4 F
(=2) 128.66 45.79 T
2 F
(L) 54 41.06 T
3 F
(i1) 60.67 38.06 T
4 F
(=1) 68.44 41.06 T
2 F
(L) 252 113.06 T
3 F
(i4) 258.67 110.06 T
4 F
(=8) 266.44 113.06 T
2 F
(L) 165.6 66.26 T
3 F
(i3) 172.27 63.26 T
4 F
(=4) 180.04 66.26 T
FMENDPAGE
%%EndDocument
 @endspecial 76 x(Figure)e(5.10:)18 b(A)13 b(key)f(value)h(distribution)e(in)
h(the)h(processor)f(subtree)h fn(\000)1268 2491 y fm(i)1282 2484 y fv(,)g(sho\
wing)f(the)h(2-deviant)f(KVD)-4 2562 y(list)g fp(\025)97 2569 y fm(i)124 2562
y fv(\(containing)f(\256ve)h(items\))g(which)h(is)f(generated)g(by)h(the)f
(Create)g(Algorithm,)g(given)g fp(M)19 b fn(=)14 b fv(9.)908 2836 y(88)p eop
%%Page: 89 103
 bop 75 53 a fs(Step)12 b(2)24 b fv(If)11 b fp(N)315 60 y fm(i)330 53 y fn
(\()p fq(1)p fn(\))i fp(<)h(L)p fv(,)f(append)f(a)h(new)f(item)g(\()p fq(1)p
fv(,)h fp(N)1059 60 y fm(i)1073 53 y fn(\()p fq(1)p fn(\))p fv(\))f(to)g(the)
g(end)h(of)f(the)g(list)g fp(\025)1627 60 y fm(i)1654 53 y fv(and)h(then)f
(stop.)75 170 y fs(Step)g(3)24 b fv(Find)13 b(the)g fp(L)p fv(th)h(smallest)f
(key)h(value)f fp(\031)r fv(,)h(and)f(append)h(a)f(new)h(item)f(\()p fp(\031)
q fv(,)h fp(L)p fv(\))g(to)f(the)g(end)h(of)f(the)g(list)197 249 y fp(\025)
225 256 y fm(i)239 249 y fv(.)19 b(Note)12 b(that)g(since)h(all)f(elements)h
(have)g(distinct)f(key)l(,)h fp(N)1231 256 y fm(i)1245 249 y fn(\()p fp(\031)
r fn(\))h(=)f fp(L)p fv(.)75 366 y fs(Step)f(4)24 b fv(If)11 b fp(L)j fq(\025)
g fp(M)5 b fv(,)13 b(stop;)g(otherwise,)f(let)h fp(L)h fn(=)f fv(2)p fp(L)g fv
(and)f(repeat)g(Step)g(2.)148 544 y(From)h(the)g(above)g(algorithm,)g(all)g
(the)g(non-\256nal)g(items)g(in)g(this)h(list)f(should)g(be)h(generated)f(at)
g(Step)g(3)75 622 y(and)e(hence)g(their)f(load)h(values)g(are)f(1,)i(2,)g(4,)
f(....,)j(and)c(2)1020 604 y fm(m)1051 609 y fj(i)1065 604 y fk(\000)p fo(2)
1111 622 y fn(\()p fp(<)k(M)5 b fn(\))p fv(.)18 b(Figure)10 b(5.10)h(illustra\
tes)f(a)h(key)g(value)75 700 y(distribution)g(in)g(the)h(processor)g(subtree)
g fn(\000)829 707 y fm(i)855 700 y fv(rooted)g(at)g(processor)f fp(P)1276 707
y fm(i)1291 700 y fv(,)i(showing)e(the)h(2-deviant)f(KVD)h(list)75 778 y fp
(\025)103 785 y fm(i)130 778 y fv(\(containing)f(\256ve)i(items\))f(which)g
(is)g(generated)g(by)h(the)f(Create)h(Algorithm,)e(given)h fp(M)19 b fn(=)14 b
fv(9.)197 1078 y fs(Lemma)g(5.9)24 b fr(On)8 b(each)g(leaf)f(pr)o(ocessor)l
(,)i(its)f(KVD)g(list)g(generated)g(by)g(the)f(Cr)o(eate)h(Algorithm)197 1156
y(is)13 b(2-deviant.)197 1344 y fs(Proof.)19 b fv(W)l(e)14 b(will)e(prove)h
(that)g(on)f(each)i(leaf)f(processor)g fp(P)1221 1351 y fm(i)1235 1344 y fv
(,)h(its)f(KVD)g(list)g fp(\025)1544 1351 y fm(i)1572 1344 y fv(generated)f
(by)197 1422 y(the)g(Create)h(Algorithm)e(satis\256es)i(Properties)e(V1)i(and)
f(V2.)197 1529 y fs(V1)24 b fv(W)l(e)17 b(will)f(consider)h(the)f(non-\256nal)
g(items)h(\256rst)f(and)g(then)h(the)f(\256nal)h(item.)31 b(From)15 b(the)304
1607 y(Create)k(Algorithm,)f(all)g(the)g(non-\256nal)g(load)g(values)g(are)g
(1,)i(2,)g(...,)i(2)1575 1589 y fm(m)1606 1594 y fj(i)1619 1589 y fk(\000)p fo
(2)1665 1607 y fn(\()p fp(<)g(M)6 b fn(\))p fv(,)304 1686 y(so)19 b(they)e
(are)h(strictly)g(increasing)f(and)h(the)g(second)h(restriction)e(holds.)35 b
(As)18 b(for)f(all)304 1764 y(non-\256nal)f(key)i(values)f fp(\031)763 1771 y
fm(ij)793 1764 y fv(,)i(since)f fp(L)p fn(\()p fp(\031)1024 1771 y fm(ij)1054
1764 y fn(\))j(=)f fp(L)1185 1771 y fm(ij)1233 1764 y fv(and)d(non-\256nal)g
(load)g(values)g(are)304 1842 y(strictly)i(increasing,)j(we)e(can)g(derive)f
(that)h(these)g(non-\256nal)e(key)i(values)g(are)g(also)304 1920 y(strictly)
12 b(increasing.)304 2008 y(Now)m(,)18 b(let)f(us)g(consider)g(the)f(\256nal)
h(item)f(\()p fp(\031)1075 2015 y fm(i;m)1128 2020 y fj(i)1143 2008 y fv(,)i
fp(L)1206 2015 y fm(i;m)1259 2020 y fj(i)1274 2008 y fv(\).)32 b(If)16 b(the)
g(algorithm)g(stops)h(at)304 2086 y(Step)c(2,)h(then)f fp(\031)584 2093 y fm
(i;m)637 2098 y fj(i)668 2086 y fn(=)i fq(1)e fv(and)g fp(L)902 2093 y fm(i;m)
955 2098 y fj(i)986 2086 y fn(=)i fp(N)1078 2093 y fm(i)1092 2086 y fn(\()p fq
(1)p fn(\))p fv(.)21 b(Otherwise,)14 b(the)f(algorithm)g(stops)304 2164 y(at)
j(Step)f(3.)28 b(In)15 b(this)h(case,)h fp(\031)812 2171 y fm(i;m)865 2176 y
fj(i)899 2164 y fq(6)p fn(=)h fq(1)d fv(and)h fp(L)1141 2171 y fm(i;m)1194
2176 y fj(i)1228 2164 y fn(=)i fp(N)1323 2171 y fm(i)1337 2164 y fn(\()p fp
(\031)1384 2171 y fm(i;m)1437 2176 y fj(i)1452 2164 y fn(\))g fq(\025)g fp
(M)6 b fv(.)28 b(Thus,)17 b(the)304 2242 y(\256rst)e(restriction)f(holds.)26 b
(In)15 b(addition,)h(since)f(the)g(last)g(load)g(value)g(is)h(either)e fp(N)
1726 2249 y fm(i)1740 2242 y fn(\()p fq(1)p fn(\))304 2321 y fv(\(greater)f
(than)g(or)h(equal)f(to)h(each)g fp(N)946 2328 y fm(i)960 2321 y fn(\()p fp
(\031)q fn(\))g fv(and)g(each)g(non-\256nal)e(load)i(value,)g(which)g(is)304
2399 y(some)e fp(N)460 2406 y fm(i)474 2399 y fn(\()p fp(\031)r fn(\))p fv
(\))f(or)h(at)f(least)h fp(M)6 b fv(,)12 b(the)g(value)g(is)g(no)f(less)i(tha\
n)f(any)f(non-\256nal)g(load)h(value.)304 2477 y(Thus,)17 b(all)e(the)f(load)
h(values)g(in)g(the)g(list)g(are)f(monotonically)g(increasing.)26 b(Since)14 b
(the)304 2555 y(last)j(key)f(value)h(is)g(either)f fq(1)g fv(or)g(a)h(key)f
(value)h fp(\031)h fv(such)e(that)h fp(N)1443 2562 y fm(i)1457 2555 y fn(\()p
fp(\031)q fn(\))j fq(\025)f fp(M)5 b fv(,)18 b(we)f(can)304 2634 y(derive)11 b
(that)f(the)h(key)g(value)g(is)g(greater)f(than)h(any)g(non-\256nal)e(key)i
(value.)18 b(Thus,)12 b(all)f(the)304 2712 y(key)i(values)f(in)h(the)f(list)g
(are)h(strictly)e(increasing.)988 2836 y(89)p eop
%%Page: 90 104
 bop 117 53 a fs(V2)25 b fv(Consider)19 b(any)g(two)g(consecutive)h(items,)i
(the)d fp(j)s fv(th)g(item)g(and)g(the)h fn(\()p fp(j)e fn(+)c fv(1)p fn(\))p
fv(-st)20 b(item,)225 132 y(where)c(0)j fq(\024)g fp(j)j fq(\024)d fp(m)608
139 y fm(i)635 132 y fq(\000)13 b fv(1.)29 b(Since)16 b fp(L)k fn(=)f fp(N)
1029 139 y fm(i)1043 132 y fn(\()p fp(\031)q fn(\))d fv(for)g(each)g(item)g
(\()p fp(\031)q fv(,)i fp(L)p fv(\))e(generated)225 210 y(by)c(the)g(Create)g
(Algorithm,)g(we)g(can)g(derive)g(the)g(following)f(property:)17 b(for)11 b
(each)i(key)225 288 y(value)h fp(\031)q fv(,)i(where)e fp(\031)568 295 y fm
(ij)614 288 y fq(\024)i fp(\031)i(<)f(\031)798 296 y fm(i)p fh(\()p fm(j)q fh
(+)p fo(1)p fh(\))899 288 y fv(,)e fp(L)959 295 y fm(ij)1006 288 y fn(=)i fp
(N)1100 295 y fm(i)1114 288 y fn(\()p fp(\031)1161 295 y fm(ij)1191 288 y fn
(\))f fq(\024)g fp(N)1320 295 y fm(i)1335 288 y fn(\()p fp(\031)q fn(\))g fq
(\024)h fp(N)1513 295 y fm(i)1527 288 y fn(\()p fp(\031)1574 296 y fm(i)p fh
(\()p fm(j)q fh(+)p fo(1)p fh(\))1675 288 y fn(\))g(=)225 366 y fp(L)258 374 y
fm(i)p fh(\()p fm(j)r fh(+)p fo(1)p fh(\))360 366 y fv(.)32 b(In)17 b(order)f
(to)h(prove)f(that)h(Property)e(V2)i(holds,)i(we)e(will)g(only)f(prove)h(that)
225 445 y fp(L)258 452 y fm(i)p fh(\()p fm(j)r fh(+)p fo(1)p fh(\))382 445 y
fq(\024)23 b fv(2)p fp(L)502 452 y fm(ij)532 445 y fv(,)e(as)e(follows.)37 b
(If)18 b(the)h fn(\()p fp(j)e fn(+)e fv(1)p fn(\))p fv(-st)j(item)h(is)g(gene\
rated)f(at)h(Step)f(2,)225 523 y(then)12 b fp(L)356 531 y fm(i)p fh(\()p fm
(j)r fh(+)p fo(1)p fh(\))472 523 y fn(=)i fp(N)563 530 y fm(i)577 523 y fn
(\()p fq(1)p fn(\))f fp(<)h fv(2)p fp(L)788 530 y fm(ij)819 523 y fv(;)e(othe\
rwise,)h(the)f(item)g(is)h(generated)f(at)g(Step)g(3)h(and)225 601 y fp(L)258
609 y fm(i)p fh(\()p fm(j)r fh(+)p fo(1)p fh(\))374 601 y fn(=)g fv(2)p fp
(L)483 608 y fm(ij)514 601 y fv(.)544 565 y 29 2 v 49 x 2 49 v 27 w 2 49 v 544
616 a 29 2 v 117 866 a fs(Lemma)h(5.10)25 b fr(On)7 b(each)h(leaf)g(pr)n(oces\
sor)l(,)h(its)f(KVD)g(list)g(obtained)f(by)h(the)g(Cr)o(eate)g(Algorithm)117
944 y(has)13 b(at)f(most)h fq(d)p fv(lg)8 b fp(M)d fq(e)12 b fn(+)f fv(1)h fr
(items.)117 1112 y fs(Proof.)29 b fv(Since)15 b(the)h(non-\256nal)f(values)h
(are)g(1,)h(2,)g(...,)i(2)1096 1094 y fm(m)1127 1099 y fj(i)1140 1094 y fk
(\000)p fo(2)1203 1112 y fv(\()p fp(<)f(M)5 b fv(\),)17 b(we)f(can)g(obtain)g
(that)117 1190 y fp(m)160 1197 y fm(i)185 1190 y fq(\000)11 b fv(2)j fp(<)g fv
(lg)8 b fp(M)d fv(,)13 b(i.e.,)h fp(m)579 1197 y fm(i)606 1190 y fq(\024)g
(d)p fv(lg)8 b fp(M)d fq(e)12 b fn(+)f fv(1.)18 b(Thus,)c(the)e(lemma)g(holds\
.)1402 1154 y 29 2 v 49 x 2 49 v 27 w 2 49 v 1402 1205 a 29 2 v -4 1404 a fs
(5.2.3.2)50 b(Internal)12 b(Processor)h(Nodes)-4 1583 y fv(In)f(this)g(sectio\
n,)h(we)g(will)f(design)h(an)g(algorithm)e(that)h(each)h(internal)f(processor)
h(node)f fp(P)1570 1590 y fm(i)1597 1583 y fv(uses)i(to)e(mer)n(ge)-4 1661 y
(the)g(KVD)h(lists)g(from)f(both)g(of)g(its)h(children)f fp(P)815 1668 y fm
(l)842 1661 y fv(and)g fp(P)957 1668 y fm(r)989 1661 y fv(into)h(its)g(KVD)f
(list)h fp(\025)1362 1668 y fm(i)1377 1661 y fv(.)19 b(W)l(e)13 b(will)f(also)
i(prove)e(that)-4 1739 y(the)h(new)g(list)g(is)h fp(k)r fn(\()p fv(1)d fn(+)h
fp(\016)q fn(\))p fv(-deviant)h(if)g(both)g(KVD)g(lists)h(from)e(its)h(childr\
en)g(are)g fp(k)r fv(-deviant,)g(and)h(that)f(the)-4 1817 y(new)j(list)g(has)
g(at)g(most)h fq(d)p fp(\024)p fn(\()p fv(lg)8 b fp(p)p fn(\)\()p fv(lg)g fp
(M)e fn(\))p fq(e)13 b fn(+)g fv(1)j(items.)30 b(But,)17 b(before)f(investiga\
ting)f(the)h(algorithm,)g(we)-4 1896 y(will)11 b(\256rst)h(present)h(a)f(simp\
ler)g(mer)o(ge)g(algorithm)f(as)i(follows.)-4 2100 y fs(Simple)i(Merge)g(Algo\
rithm:)23 b fv(Let)16 b(the)g(symbols)f(\()p fp(\031)958 2107 y fm(l)970 2100
y fv(,)i fp(L)1032 2107 y fm(l)1045 2100 y fv(\))e(and)h(\()p fp(\031)1210
2107 y fm(r)1228 2100 y fv(,)h fp(L)1290 2107 y fm(r)1309 2100 y fv(\))e(repr\
esent)g(the)g(\256rst)g(items)h(in)-4 2202 y fp(\025)24 2209 y fm(l)50 2202 y
fv(and)c fp(\025)162 2209 y fm(r)194 2202 y fv(respectively;)h(and)f(let)h
(the)f(symbols)h(\()p fp(\031)907 2184 y fk(0)906 2214 y fm(l)919 2202 y fv
(,)g fp(L)977 2184 y fk(0)977 2214 y fm(l)990 2202 y fv(\))f(and)h(\()p fp
(\031)1150 2184 y fk(0)1149 2214 y fm(r)1167 2202 y fv(,)g fp(L)1225 2184 y fk
(0)1225 2214 y fm(r)1244 2202 y fv(\))g(represent)f(the)g(previous)h(deleted)
-4 2280 y(items)f(in)g fp(\025)195 2287 y fm(l)221 2280 y fv(and)g fp(\025)
333 2287 y fm(r)365 2280 y fv(respectively)m(.)-4 2443 y fs(Step)f(1)24 b fv
(Let)13 b(both)f(\()p fp(\031)377 2425 y fk(0)376 2456 y fm(l)389 2443 y fv
(,)h fp(L)447 2425 y fk(0)447 2456 y fm(l)460 2443 y fv(\))f(and)g(\()p fp
(\031)619 2425 y fk(0)618 2456 y fm(r)637 2443 y fv(,)h fp(L)695 2425 y fk
(0)695 2456 y fm(r)714 2443 y fv(\))f(be)g(\()p fq(\0001)p fv(,)g fp(N)971
2450 y fm(i)985 2443 y fn(\()p fq(\0001)p fn(\))i(=)g fv(0\).)-4 2555 y fs
(Step)d(2)24 b fv(If)10 b fp(\031)223 2562 y fm(l)250 2555 y fn(=)j fp(\031)
329 2562 y fm(r)348 2555 y fv(,)f(append)e(a)h(new)f(item)h(\()p fp(\031)797
2562 y fm(l)809 2555 y fv(,)g fp(L)865 2562 y fm(l)879 2555 y fv(+)p fp(L)940
2562 y fm(r)959 2555 y fv(\))f(to)g(the)h(end)g(of)f fp(\025)1270 2562 y fm
(i)1284 2555 y fv(,)i(remove)e(both)g(\256rst)g(items)h(from)117 2634 y fp
(\025)145 2641 y fm(l)170 2634 y fv(and)h fp(\025)282 2641 y fm(r)301 2634 y
fv(,)g(and)g(go)f(to)g(Step)g(4.)18 b(Note)11 b(that)g(if)g(a)h(new)f(item)g
(is)h(appended)f(then)g(the)h(values)f(of)g fp(\031)1775 2641 y fm(l)1788 2634
y fv(,)h fp(L)1845 2641 y fm(l)1858 2634 y fv(,)117 2712 y fp(\031)145 2719 y
fm(r)164 2712 y fv(,)h fp(L)222 2719 y fm(r)241 2712 y fv(,)g fp(\031)296 2694
y fk(0)294 2724 y fm(l)307 2712 y fv(,)g fp(L)365 2694 y fk(0)365 2724 y fm
(l)378 2712 y fv(,)g fp(\031)433 2694 y fk(0)431 2724 y fm(r)450 2712 y fv
(,)g(and)f fp(L)592 2694 y fk(0)592 2724 y fm(r)611 2712 y fv(,)h(are)f(chang\
ed)h(implicitly)-5 b(.)908 2836 y(90)p eop
%%Page: 91 105
 bop 75 912 a @beginspecial @setspecial
%%BeginDocument: fig/merge.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 4 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Italic FMDEFINEFONT
1 10 /Times-Italic FMDEFINEFONT
2 14 /Times-Roman FMDEFINEFONT
3 14 /Symbol FMDEFINEFONT
612 792 0 FMBEGINPAGE
88.6 194.93 88.6 11.33 2 L
0.5 H
2 Z
4 X
0 K
N
110.2 194.93 110.2 11.33 2 L
N
196.6 194.93 196.6 11.33 2 L
N
175 194.93 175 11.33 2 L
N
149.8 194.93 149.8 11.33 2 L
N
232.6 194.93 232.6 11.33 2 L
N
61.94 93.89 50.4 97.2 61.94 100.51 61.94 97.2 4 Y
0 X
V
402.47 100.51 414 97.2 402.47 93.89 402.47 97.2 4 Y
V
60.94 97.2 403.47 97.2 2 L
0 Z
N
61.94 155.19 50.4 158.5 61.94 161.81 61.94 158.5 4 Y
V
402.47 161.81 414 158.5 402.47 155.19 402.47 158.5 4 Y
V
60.94 158.5 403.47 158.5 2 L
N
61.94 28.59 50.4 31.9 61.94 35.2 61.94 31.9 4 Y
V
402.47 35.2 414 31.9 402.47 28.59 402.47 31.9 4 Y
V
60.94 31.9 403.47 31.9 2 L
N
0 F
(P) 32.4 157.42 T
1 F
(l) 39.73 154.42 T
2 F
(:) 42.51 157.42 T
3 F
(\245) 400.42 141.88 T
(p) 88.6 142.41 T
1 F
(l1) 96.28 139.41 T
3 F
(-\245) 50.4 141.46 T
(p) 424.32 141.88 T
(-\245) 50.74 80.26 T
(-\245) 50.74 15.46 T
(\245) 400.42 80.26 T
(p) 424.32 83.86 T
(p) 427.92 19.06 T
(p) 232.6 81.21 T
1 F
(r3) 240.28 78.21 T
0 F
(P) 32.74 95.06 T
1 F
(r) 40.07 92.06 T
2 F
(:) 43.96 95.06 T
0 F
(P) 32.74 30.26 T
1 F
(i) 40.07 27.26 T
2 F
(:) 42.85 30.26 T
88.6 155.33 106.6 162.53 R
3 X
V
0 X
N
88.6 162.53 88.6 155.33 2 L
3 X
V
3 H
2 Z
0 X
N
110.2 155.33 146.2 162.53 R
3 X
V
0.5 H
0 Z
0 X
N
110.2 162.53 110.2 155.33 2 L
3 X
V
3 H
2 Z
0 X
N
149.8 155.33 193 162.53 R
3 X
V
0.5 H
0 Z
0 X
N
149.8 162.53 149.8 155.33 2 L
3 X
V
3 H
2 Z
0 X
N
196.6 155.33 283 162.53 R
3 X
V
0.5 H
0 Z
0 X
N
196.6 162.53 196.6 155.33 2 L
3 X
V
3 H
2 Z
0 X
N
175 94.13 193 101.33 R
3 X
V
0.5 H
0 Z
0 X
N
175 101.33 175 94.13 2 L
3 X
V
3 H
2 Z
0 X
N
196.6 94.13 229 101.33 R
3 X
V
0.5 H
0 Z
0 X
N
196.6 101.33 196.6 94.13 2 L
3 X
V
3 H
2 Z
0 X
N
232.6 94.13 272.2 101.33 R
3 X
V
0.5 H
0 Z
0 X
N
232.6 101.33 232.6 94.13 2 L
3 X
V
3 H
2 Z
0 X
N
275.8 94.13 351.4 101.33 R
3 X
V
0.5 H
0 Z
0 X
N
275.8 101.33 275.8 94.13 2 L
3 X
V
3 H
2 Z
0 X
N
387.4 101.33 355 101.33 355 94.13 387.4 94.13 4 L
3 X
V
0.5 H
0 X
N
355 100.43 355 94.13 2 L
3 X
V
3 H
0 X
N
(1) 182.2 107.97 T
(2) 124.6 169.17 T
(4) 167.8 169.17 T
(6) 239.8 169.17 T
(12) 293.8 169.17 T
(2) 211.2 107.97 T
(4) 250.8 107.97 T
(7) 311.8 107.97 T
(10) 362.2 107.97 T
315.4 162.53 286.6 162.53 286.6 155.33 315.4 155.33 4 L
3 X
V
0.5 H
0 X
N
286.6 161.63 286.6 155.33 2 L
3 X
V
3 H
0 X
N
(1) 95.8 169.17 T
88.6 29.33 106.6 36.53 R
3 X
V
0.5 H
0 Z
0 X
N
88.6 36.53 88.6 29.33 2 L
3 X
V
3 H
2 Z
0 X
N
110.2 29.33 146.2 36.53 R
3 X
V
0.5 H
0 Z
0 X
N
110.2 36.53 110.2 29.33 2 L
3 X
V
3 H
2 Z
0 X
N
149.8 29.33 171.4 36.53 R
3 X
V
0.5 H
0 Z
0 X
N
149.8 36.53 149.8 29.33 2 L
3 X
V
3 H
2 Z
0 X
N
(2) 124.6 43.17 T
(4) 157 43.17 T
(8) 207.4 43.17 T
272.2 36.53 232.6 36.53 232.6 29.33 272.2 29.33 4 L
3 X
V
0.5 H
0 X
N
232.6 35.63 232.6 29.33 2 L
3 X
V
3 H
0 X
N
(1) 95.8 43.17 T
175 29.33 193 36.53 R
3 X
V
0.5 H
0 Z
0 X
N
175 36.53 175 29.33 2 L
3 X
V
3 H
2 Z
0 X
N
(5) 178.6 43.17 T
3 F
(p) 88.6 16.41 T
1 F
(i1) 96.28 13.41 T
3 F
(p) 110.2 16.41 T
1 F
(i2) 117.88 13.41 T
3 F
(p) 110.2 142.41 T
1 F
(l2) 117.88 139.41 T
3 F
(p) 149.8 142.39 T
1 F
(l3) 157.48 139.39 T
3 F
(p) 196.6 142.39 T
1 F
(l4) 204.28 139.39 T
3 F
(p) 286.6 142.39 T
1 F
(l5) 294.28 139.39 T
3 F
(p) 175 81.21 T
1 F
(r1) 182.68 78.21 T
3 F
(p) 196.6 81.21 T
1 F
(r2) 204.28 78.21 T
3 F
(p) 275.8 81.19 T
1 F
(r4) 283.48 78.19 T
3 F
(p) 355 81.19 T
1 F
(r5) 362.68 78.19 T
196.6 29.33 229 36.53 R
3 X
V
0.5 H
0 Z
0 X
N
196.6 36.53 196.6 29.33 2 L
3 X
V
3 H
2 Z
0 X
N
2 F
(10) 250.6 43.17 T
3 F
(p) 149.8 16.39 T
1 F
(i3) 157.48 13.39 T
3 F
(p) 175 16.39 T
1 F
(i4) 182.68 13.39 T
3 F
(p) 196.6 16.39 T
1 F
(i5) 204.28 13.39 T
3 F
(p) 232.6 16.39 T
1 F
(i6) 240.28 13.39 T
FMENDPAGE
%%EndDocument
 @endspecial 151 988 a fv(Figure)11 b(5.11:)18 b(An)13 b(example)f(of)g(the)g
(mer)o(ge)g(operation)g(from)f fp(\025)1268 995 y fm(l)1294 988 y fv(and)h fp
(\025)1406 995 y fm(r)1438 988 y fv(into)g fp(\025)1556 995 y fm(i)1571 988 y
fv(,)h(given)f fp(M)19 b fn(=)14 b fv(9.)75 1145 y fs(Step)e(3)24 b fv(If)12 b
fp(\031)305 1152 y fm(l)331 1145 y fp(<)i(\031)411 1152 y fm(r)430 1145 y fv
(,)e(append)h(a)f(new)h(item)f(\()p fp(\031)887 1152 y fm(l)899 1145 y fv(,)h
fp(L)957 1152 y fm(l)970 1145 y fv(+)p fp(L)1031 1127 y fk(0)1031 1157 y fm
(r)1051 1145 y fv(\))f(to)g(the)g(end)h(of)f fp(\025)1371 1152 y fm(i)1398
1145 y fv(and)g(remove)g(the)g(\256rst)g(item)h(of)197 1223 y fp(\025)225 1230
y fm(l)238 1223 y fv(;)h(otherwise,)g(append)g(a)f(new)h(item)f(\()p fp(\031)
923 1230 y fm(r)941 1223 y fv(,)i fp(L)1001 1230 y fm(r)1020 1223 y fv(+)p fp
(L)1081 1205 y fk(0)1081 1236 y fm(l)1094 1223 y fv(\))e(to)g(the)h(end)f(of)
g fp(\025)1419 1230 y fm(i)1448 1223 y fv(and)g(remove)g(the)g(\256rst)g(item)
197 1302 y(of)e fp(\025)278 1309 y fm(r)297 1302 y fv(.)18 b(Note)12 b(that)f
(after)g(this)g(step)h(the)f(values)h(of)f fp(\031)1092 1309 y fm(l)1104 1302
y fv(,)i fp(L)1162 1309 y fm(l)1175 1302 y fv(,)f fp(\031)1227 1309 y fm(r)
1245 1302 y fv(,)h fp(L)1303 1309 y fm(r)1322 1302 y fv(,)f fp(\031)1375 1284
y fk(0)1374 1314 y fm(l)1387 1302 y fv(,)g fp(L)1444 1284 y fk(0)1444 1314 y
fm(l)1457 1302 y fv(,)g fp(\031)1511 1284 y fk(0)1509 1314 y fm(r)1528 1302 y
fv(,)g(and)f fp(L)1668 1284 y fk(0)1668 1314 y fm(r)1688 1302 y fv(,)h(are)f
(changed)197 1380 y(implicitly)-5 b(.)75 1554 y fs(Step)12 b(4)24 b fv(In)10 b
(the)h(newly)f(appended)h(item)f(\()p fp(\031)q fv(,)i fp(L)p fv(\),)f(if)f fp
(L)k fq(\025)g fp(M)i fv(or)10 b fp(\031)15 b fn(=)f fq(1)p fv(,)e(stop;)f
(otherwise,)g(repeat)f(Step)h(2.)148 1784 y(Figure)j(5.11)h(illustrates)f(an)
h(example)f(of)g(the)h(mer)n(ge)g(operation.)24 b(W)l(e)15 b(also)g(need)g
(to)f(point)g(out)g(that)75 1862 y(this)g(mer)o(ge)g(algorithm)f(will)g(not)h
(repeat)g(Step)g(2)g(\(from)e(Step)i(4\))g(in)g(the)g(condition)f(that)h(eith\
er)f(of)h(KVD)75 1941 y(list)h fp(\025)179 1948 y fm(i)210 1941 y fv(or)g fp
(\025)295 1948 y fm(r)330 1941 y fv(is)g(empty)m(.)27 b(Assume)16 b(that)g
(the)f(\256nal)g(key)g(value)h(of)f(one)g(list,)i(say)f fp(\025)1541 1948 y fm
(r)1560 1941 y fv(,)h(is)f(mer)o(ged)f(into)g fp(\025)1923 1948 y fm(i)1938
1941 y fv(.)75 2019 y(From)d(the)h(\256rst)g(restriction)f(of)h(property)f
(V1,)i(either)e(the)i(\256nal)e(key)i(value)f(of)f fp(\025)1491 2026 y fm(r)
1524 2019 y fv(is)i fq(1)f fv(or)f(the)h(\256nal)g(load)75 2097 y(value)j(of)
g fp(\025)285 2104 y fm(r)320 2097 y fv(is)h(at)f(least)h fp(M)5 b fv(.)30 b
(For)15 b(the)h(former)f(case,)j(the)e(appended)g(key)h(value)f(of)f fp(\025)
1635 2104 y fm(i)1666 2097 y fv(is)i(also)f fq(1)g fv(and)75 2175 y(therefore)
11 b(the)h(appended)h(item)f(is)g(the)h(\256nal)f(item)g(\(see)g(Step)g(4\))g
(in)g(the)g(new)h(list;)f(for)f(the)i(latter)f(case,)h(the)75 2254 y(appended)
i(load)g(value)f(is)h(also)h(at)f(least)g fp(M)20 b fv(and)15 b(therefore)f
(the)g(appended)h(item)g(is)g(also)g(the)g(\256nal)f(item)75 2332 y(\(also)e
(see)g(Step)g(4\).)18 b(From)10 b(the)i(above,)h(the)e(last)h(key)g(value)g
(of)g fp(\025)1207 2339 y fm(i)1233 2332 y fv(must)g(be)g(no)f(greater)h(than)
f(either)h(of)f(the)75 2410 y(last)i(key)f(values)h(of)f fp(\025)463 2417 y fm
(l)489 2410 y fv(and)g fp(\025)601 2417 y fm(r)620 2410 y fv(.)148 2555 y(Lem\
ma)j(5.11)g(\(below\))f(proves)g(that)g(if)h(the)f(deviation)g(degrees)h(of)f
(the)h(lists)g(from)e(its)i(children)f(are)75 2634 y(the)g(same,)h(the)f(pare\
nt')l(s)g(list)g(has)g(the)g(same)h(deviation)e(degree.)22 b(Since)14 b(the)g
(lists)g(of)f(all)h(leaf)g(processors)75 2712 y(are)e(all)h(2-deviant,)f(the)
g(list)g(on)h(the)f(root)g(will)g(still)g(be)g(2-deviant.)988 2836 y(91)p eop
%%Page: 92 106
 bop 117 200 a fs(Lemma)14 b(5.11)25 b fr(For)20 b(the)g(above)g(simple)g(mer)
n(ge)g(algorithm,)i(if)d(both)h fp(\025)1426 207 y fm(l)1459 200 y fr(and)f fp
(\025)1581 207 y fm(r)1621 200 y fr(ar)n(e)h fp(k)r fr(-)117 278 y(deviant,)
13 b(the)f(new)h(list)f fp(\025)556 285 y fm(i)583 278 y fr(is)h(also)g fp
(k)r fr(-deviant.)117 508 y fs(Proof.)18 b fv(W)l(e)13 b(will)f(examine)g(Pro\
perties)f(V1)h(and)h(V2)f(in)g(the)h(new)f(list)h fp(\025)1382 515 y fm(i)
1396 508 y fv(.)117 644 y fs(V1)25 b fv(The)10 b(above)g(simple)f(mer)o(ge)h
(algorithm)e(mer)o(ges)i(items)g(of)f(both)h(lists)g fp(\025)1437 651 y fm
(l)1460 644 y fv(and)g fp(\025)1570 651 y fm(r)1599 644 y fv(accord-)225 722 y
(ing)g(to)h(their)f(key)h(values.)18 b(Step)11 b(2)g(mer)n(ges)g(two)g(items)
g(with)f(the)h(same)g(key)g(value)g(into)225 800 y(one)j(item,)i(while)e(Step)
g(3)h(keeps)g(the)g(key)f(values)h(of)f(the)h(new)g(list)f fp(\025)1461 807 y
fm(i)1490 800 y fv(in)h(increasing)225 878 y(order)l(.)k(Thus,)14 b(in)f(the)
f(new)h(list,)g(the)g(key)f(values)h(are)g(strictly)f(increasing.)19 b(As)13 b
(for)f(the)225 957 y(load)f(values)i(in)e(the)h(list)g fp(\025)686 964 y fm
(i)701 957 y fv(,)g(they)g(are)g(monotonically)e(increasing)i(for)f(the)h(fol\
lowing)225 1035 y(reason.)29 b(For)15 b(each)i(item)e(in)h fp(\025)776 1042 y
fm(i)791 1035 y fv(,)h(its)f(load)g(value)g(must)g(be)g(any)g(of)g fp(L)1464
1042 y fm(l)1477 1035 y fv(+)p fp(L)1538 1042 y fm(r)1573 1035 y fv(\(Step)g
(2\),)225 1113 y fp(L)258 1095 y fk(0)258 1126 y fm(l)271 1113 y fv(+)p fp
(L)332 1120 y fm(r)351 1113 y fv(,)11 b(and)e fp(L)488 1120 y fm(l)501 1113 y
fv(+)p fp(L)562 1095 y fk(0)562 1126 y fm(r)591 1113 y fv(\(Step)g(3\),)h(whi\
le)f(the)h(load)f(value)h(of)f(its)g(previous)h(item)f(\(if)f(any\))h(is)225
1191 y fp(L)258 1173 y fk(0)258 1204 y fm(l)276 1191 y fn(+)d fp(L)353 1173 y
fk(0)353 1204 y fm(r)372 1191 y fv(.)17 b(Since)10 b(the)g(load)f(values)h
(in)g(both)g fp(\025)1001 1198 y fm(l)1024 1191 y fv(and)g fp(\025)1134 1198 y
fm(r)1163 1191 y fv(are)g(monotonically)e(increasing,)225 1270 y fp(L)258 1277
y fm(l)285 1270 y fq(\025)14 b fp(L)371 1252 y fk(0)371 1282 y fm(l)397 1270 y
fv(and)e fp(L)514 1277 y fm(r)548 1270 y fq(\025)i fp(L)634 1252 y fk(0)634
1282 y fm(r)653 1270 y fv(.)19 b(Hence,)13 b(the)g(load)f(value)h(of)f(an)g
(item)h(must)f(be)h(no)f(less)i(than)225 1348 y(that)f(of)h(its)g(previous)f
(item.)22 b(Therefore,)14 b(the)g(load)g(values)g(in)g fp(\025)1358 1355 y fm
(i)1386 1348 y fv(are)g(monotonically)225 1426 y(increasing)c(too.)18 b(In)10
b(addition,)h(we)g(will)g(prove)f(that)h(the)f(two)h(restrictions)f(in)h(prop\
erty)225 1504 y(V1)h(hold,)h(as)f(follows.)254 1616 y(1.)25 b(For)10 b(the)g
(\256nal)g(item,)h(\()p fp(\031)723 1623 y fm(i;m)776 1628 y fj(i)791 1616 y
fv(,)g fp(L)847 1623 y fm(i;m)900 1628 y fj(i)916 1616 y fv(\),)g(suppose)g
(that)f fp(\031)1240 1623 y fm(i;m)1293 1628 y fj(i)1322 1616 y fn(=)k fq(1)p
fv(.)j(The)11 b(\256nal)g(items)316 1695 y(of)g fp(\025)397 1702 y fm(l)422
1695 y fv(and)h fp(\025)534 1702 y fm(r)565 1695 y fv(also)g(have)g(key)f(val\
ues)h fq(1)p fv(.)18 b(Hence,)13 b(both)e(\256nal)g(load)h(values)g(of)f fp
(\025)1735 1702 y fm(l)316 1773 y fv(and)k fp(\025)431 1780 y fm(r)465 1773 y
fv(are)g fp(N)580 1780 y fm(l)593 1773 y fn(\()p fq(1)p fn(\))f fv(and)h fp
(N)821 1780 y fm(r)840 1773 y fn(\()p fq(1)p fn(\))p fv(.)25 b(Thus,)17 b(fro\
m)d(Step)g(2,)i(the)f(\256nal)f(load)h(value)316 1851 y(of)c fp(\025)397 1858
y fm(i)424 1851 y fv(is)h fp(N)508 1858 y fm(l)521 1851 y fn(\()p fq(1)p fn
(\))e(+)g fp(N)706 1858 y fm(r)725 1851 y fn(\()p fq(1)p fn(\))k(=)g fp(N)918
1858 y fm(i)932 1851 y fn(\()p fq(1)p fn(\))p fv(,)e(i.e.,)h(the)f(\256rst)g
(restriction)f(holds)h(in)g(this)316 1929 y(case.)316 2008 y(Suppose)j(that)f
fp(\031)617 2015 y fm(i;m)670 2020 y fj(i)703 2008 y fq(6)p fn(=)j fq(1)p fv
(.)26 b(Then,)16 b(from)e(Step)g(4,)i(the)f(\256nal)g(load)f(value)h fp(L)
1680 2015 y fm(i;m)1733 2020 y fj(i)316 2086 y fv(must)9 b(be)h(at)f(least)h
fp(M)5 b fv(.)18 b(So,)10 b(for)e(the)i(\256rst)f(restriction,)g(we)h(will)e
(only)h(need)h(to)f(prove)316 2164 y(that)k(the)h(following)e(condition)h(C)h
(holds:)21 b fp(L)1111 2171 y fm(i;m)1164 2176 y fj(i)1195 2164 y fq(\024)15 b
fp(N)1288 2171 y fm(i)1302 2164 y fn(\()p fp(\031)1349 2171 y fm(i;m)1402 2176
y fj(i)1417 2164 y fn(\))p fv(.)22 b(If)13 b fp(\031)1545 2171 y fm(i;m)1598
2176 y fj(i)1627 2164 y fv(is)h(less)316 2242 y(than)g(both)g fp(\031)547 2249
y fm(l;m)599 2255 y fj(l)628 2242 y fv(and)g fp(\031)742 2249 y fm(r)o(;m)798
2253 y fj(r)817 2242 y fv(,)i(we)e(can)h(derive)f(the)g(condition)g(C)h(from)
e(Property)316 2321 y(V2)k(\(which)f(will)h(be)g(shown)g(below\).)31 b(If)16 b
fp(\031)1115 2328 y fm(l;m)1167 2334 y fj(l)1198 2321 y fv(or)g fp(\031)1284
2328 y fm(r)o(;m)1340 2332 y fj(r)1359 2321 y fv(,)j(say)e(the)g(former)m(,)h
(is)316 2399 y fp(\031)344 2406 y fm(i;m)397 2411 y fj(i)422 2399 y fv(\(note)
10 b(that)g fp(\031)648 2406 y fm(i;m)701 2411 y fj(i)727 2399 y fv(cannot)g
(be)h(greater)f(than)g(either)g fp(\031)1325 2406 y fm(l;m)1377 2412 y fj(l)
1401 2399 y fv(or)g fp(\031)1481 2406 y fm(r)o(;m)1537 2410 y fj(r)1567 2399 y
fv(as)h(shown)316 2477 y(earlier\),)e(then)g fp(L)610 2484 y fm(l;m)662 2490 y
fj(l)690 2477 y fq(\024)k fp(N)781 2484 y fm(l)795 2477 y fn(\()p fp(\031)842
2484 y fm(l;m)894 2490 y fj(l)907 2477 y fn(\))c fv(from)f(the)h(\256rst)g
(restriction)f(of)g(Property)g(V1)h(in)316 2555 y(the)j(list)g fp(\025)490
2562 y fm(l)504 2555 y fv(.)18 b(Hence,)13 b(we)f(can)g(derive)g(that)g(the)g
(condition)f(C)i(holds,)f(by)g(applying)316 2634 y(the)g(technique)g(used)h
(in)f(the)g(proof)f(for)g(Property)g(V2)h(\(below\).)17 b(Therefore,)c(this)
316 2712 y(restriction)e(holds.)908 2836 y(92)p eop
%%Page: 93 107
 bop 334 53 a fv(2.)24 b(All)12 b(the)g(non-\256nal)f(load)g(values)h(in)g
(the)g(list)g fp(\025)1197 60 y fm(i)1223 53 y fv(are)g(less)g(than)g fp(M)17
b fv(because)c(if)e(one)395 132 y(of)16 b(them)f(were)g(at)h(least)f fp(M)21 b
fv(the)16 b(item)f(containing)g(it)g(would)g(be)h(the)f(\256nal)g(item)395 210
y(\(see)e(Step)f(4\).)75 1218 y @beginspecial @setspecial
%%BeginDocument: fig/mergek.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 5 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Italic FMDEFINEFONT
1 10 /Times-Italic FMDEFINEFONT
2 14 /Times-Roman FMDEFINEFONT
3 14 /Symbol FMDEFINEFONT
4 12 /Times-Roman FMDEFINEFONT
612 792 0 FMBEGINPAGE
309.6 198 309.6 14.4 2 L
0.5 H
2 Z
11 X
0 K
N
190.8 198 190.8 14.4 2 L
N
83.54 97.49 72 100.8 83.54 104.11 83.54 100.8 4 Y
0 X
V
424.07 104.11 435.6 100.8 424.07 97.49 424.07 100.8 4 Y
V
82.54 100.8 425.07 100.8 2 L
0 Z
N
83.54 158.84 72 162.14 83.54 165.45 83.54 162.14 4 Y
V
424.07 165.45 435.6 162.14 424.07 158.84 424.07 162.14 4 Y
V
82.54 162.14 425.07 162.14 2 L
N
133.2 158.4 306 165.6 R
3 X
V
0 X
N
83.54 32.19 72 35.5 83.54 38.8 83.54 35.5 4 Y
V
424.07 38.8 435.6 35.5 424.07 32.19 424.07 35.5 4 Y
V
82.54 35.5 425.07 35.5 2 L
3 X
V
0 X
N
0 F
(P) 54 161.06 T
1 F
(l) 61.33 158.06 T
2 F
(:) 64.11 161.06 T
190.8 97.2 378 104.4 R
3 X
V
0 X
N
190.8 32.4 306 39.6 R
3 X
V
0 X
N
3 F
(\245) 421.99 145.51 T
(-\245) 72 145.08 T
(p) 445.9 145.51 T
(-\245) 72.29 83.88 T
(-\245) 72.29 19.08 T
(\245) 421.99 83.88 T
(\245) 424.8 19.51 T
(p) 445.9 87.48 T
(p) 449.5 22.68 T
(p) 198 84.31 T
0 F
(\325) 205.68 84.31 T
1 F
(r) 209.68 81.31 T
0 F
(P) 54.29 98.71 T
1 F
(r) 61.62 95.71 T
2 F
(:) 65.5 98.71 T
0 F
(P) 54.29 33.91 T
1 F
(i) 61.62 30.91 T
2 F
(:) 64.39 33.91 T
4 F
([) 190.8 174.31 T
0 F
(L) 194.79 174.31 T
(\325) 201.02 174.31 T
1 F
(l) 205.01 171.31 T
4 F
(, ) 207.79 174.31 T
0 F
(kL) 213.79 174.31 T
(\325) 225.34 174.31 T
1 F
(l) 229.33 171.31 T
4 F
(]) 232.11 174.31 T
133.2 165.6 133.2 158.4 2 L
3 X
V
3 H
2 Z
0 X
N
309.6 165.6 309.6 158.4 2 L
3 X
V
0 X
N
309.6 39.6 309.6 32.4 2 L
3 X
V
0 X
N
3 F
(p) 136.73 145.51 T
0 F
(\325) 144.41 145.51 T
1 F
(l) 148.4 142.51 T
3 F
(p) 313.13 145.51 T
1 F
(l) 320.81 142.51 T
4 F
([) 269.86 114.26 T
0 F
(L) 273.85 114.26 T
(\325) 280.07 114.26 T
1 F
(r) 284.07 111.26 T
4 F
( , ) 287.96 114.26 T
0 F
(kL) 296.95 114.26 T
(\325) 308.5 114.26 T
1 F
(r) 312.49 111.26 T
4 F
(]) 316.38 114.26 T
3 F
(p) 383.98 84.31 T
1 F
(r) 391.66 81.31 T
381.6 104.4 381.6 97.2 2 L
3 X
V
0 X
N
0 F
(N) 75.6 174.31 T
1 F
(l) 83.6 171.31 T
0 F
( \050) 86.38 174.31 T
3 F
(p) 93.37 174.31 T
0 F
(\051:) 101.05 174.31 T
(N) 78.12 113.11 T
1 F
(r) 86.12 110.11 T
0 F
( \050) 90.01 113.11 T
3 F
(p) 97 113.11 T
0 F
(\051:) 104.68 113.11 T
(N) 78.12 48.31 T
1 F
(i) 86.12 45.31 T
0 F
( \050) 88.9 48.31 T
3 F
(p) 95.89 48.31 T
0 F
(\051:) 103.57 48.31 T
4 F
([) 198 48.31 T
0 F
(L) 201.99 48.31 T
(\325) 208.22 48.31 T
1 F
(l) 212.21 45.31 T
4 F
( + ) 214.99 48.31 T
0 F
(L) 227.75 48.31 T
(\325) 233.98 48.31 T
1 F
(r ) 237.97 45.31 T
4 F
(, ) 244.36 48.31 T
0 F
(kL) 250.35 48.31 T
(\325) 261.9 48.31 T
1 F
(l) 265.9 45.31 T
0 F
( + kL) 268.67 48.31 T
(\325) 294.32 48.31 T
1 F
(r) 298.31 45.31 T
4 F
(]) 302.2 48.31 T
190.8 104.4 190.8 97.2 2 L
3 X
V
0 X
N
190.8 39.6 190.8 32.4 2 L
3 X
V
0 X
N
3 F
(p) 198 19.51 T
1 F
(i\050j-1\051) 205.68 16.51 T
3 F
(p) 314.35 19.51 T
1 F
(ij) 322.03 16.51 T
FMENDPAGE
%%EndDocument
 @endspecial 489 1294 a(Figure)f(5.12:)18 b(An)13 b(example)f(of)g(examining)
g(property)f(V2.)197 1436 y fs(V2)24 b fv(In)16 b(the)h(above)f(mer)o(ge)h
(algorithm,)g(consider)f(the)g(moment)g(immediately)g(before)g(we)304 1514 y
(append)d(the)g fp(j)s fv(th)g(item)f(to)h fp(\025)791 1521 y fm(i)806 1514 y
fv(,)g(where)g(1)i fq(\024)f fp(j)k fq(\024)c fp(m)1193 1521 y fm(i)1207 1514
y fv(.)20 b(The)14 b(key)f(value)g(of)f(the)h fn(\()p fp(j)h fq(\000)e fv(1)p
fn(\))p fv(-)304 1592 y(st)19 b(item)e(is)h fp(\031)541 1600 y fm(i)p fh(\()p
fm(j)r fk(\000)p fo(1)p fh(\))665 1592 y fn(=)j fv(max)p fn(\()p fp(\031)858
1574 y fk(0)857 1605 y fm(l)870 1592 y fp(;)8 b(\031)921 1574 y fk(0)920 1605
y fm(r)938 1592 y fn(\))19 b fv(and)f(the)f(key)i(value)e(of)h(the)g fp(j)s fv
(th)g(item)f(will)h(be)304 1671 y fp(\031)332 1678 y fm(ij)380 1671 y fn(=)h
fv(min)o fn(\()p fp(\031)561 1678 y fm(l)574 1671 y fp(;)8 b(\031)624 1678 y
fm(r)642 1671 y fn(\))p fv(.)28 b(Figure)15 b(5.12)h(illustrates)f(an)h(examp\
le.)28 b(Thus,)17 b(for)e(all)h(key)f fp(\031)r fv(,)304 1749 y(where)f fp
(\031)468 1757 y fm(i)p fh(\()p fm(j)q fk(\000)p fo(1)p fh(\))585 1749 y fq
(\024)i fp(\031)h(<)f(\031)767 1756 y fm(ij)796 1749 y fv(,)f(the)f(condition)
f fp(L)1133 1731 y fk(0)1133 1761 y fm(l)1162 1749 y fq(\024)i fp(N)1255 1756
y fm(l)1268 1749 y fn(\()p fp(\031)r fn(\))h fq(\024)f fp(k)r(L)1466 1731 y fk
(0)1466 1761 y fm(l)1493 1749 y fv(holds)f(because)h fp(\025)1815 1756 y fm
(l)304 1827 y fv(is)c fp(k)r fv(-deviant;)g(the)g(condition)f fp(L)868 1809 y
fk(0)868 1839 y fm(r)901 1827 y fq(\024)j fp(N)992 1834 y fm(r)1011 1827 y fn
(\()p fp(\031)r fn(\))h fq(\024)f fp(k)r(L)1205 1809 y fk(0)1205 1839 y fm
(r)1235 1827 y fv(holds)e(because)h fp(\025)1551 1834 y fm(r)1581 1827 y fv
(is)f fp(k)r fv(-deviant.)304 1905 y(Since)h fp(N)466 1912 y fm(i)480 1905 y
fn(\()p fp(\031)q fn(\))i(=)g fp(N)652 1912 y fm(l)665 1905 y fn(\()p fp(\031)
q fn(\))9 b(+)h fp(N)828 1912 y fm(r)847 1905 y fn(\()p fp(\031)q fn(\))p fv
(,)i(the)g(condition)f fp(L)1244 1887 y fk(0)1244 1918 y fm(l)1266 1905 y fn
(+)f fp(L)1347 1887 y fk(0)1347 1918 y fm(r)1380 1905 y fq(\024)j fp(N)1471
1912 y fm(i)1485 1905 y fn(\()p fp(\031)r fn(\))h fq(\024)f fp(k)r(L)1679 1887
y fk(0)1679 1918 y fm(l)1702 1905 y fn(+)c fp(k)r(L)1809 1887 y fk(0)1809 1918
y fm(r)304 1984 y fv(holds.)19 b(Since)12 b(the)g fn(\()p fp(j)i fq(\000)d fv
(1)p fn(\))p fv(-st)h(load)g(value)h(is)f fp(L)1145 1965 y fk(0)1145 1996 y fm
(l)1170 1984 y fn(+)f fp(L)1252 1965 y fk(0)1252 1996 y fm(r)1271 1984 y fv
(,)i(property)e(V2)h(holds.)1689 1947 y 29 2 v 49 x 2 49 v 26 w 2 49 v 1689
1998 a 29 2 v 148 2175 a(Although)k(this)h(algorithm)f(can)h(mer)o(ge)g(KVD)g
(lists)g(while)g(keeping)g(the)g(same)g(deviation)g(degree,)75 2254 y(the)c
(number)g(of)g(items)h(in)f(the)g(new)h(list)f(may)h(double)f(after)f(each)i
(mer)o(ge)f(operation.)21 b(Hence,)15 b(the)e(list)h(of)75 2332 y(the)e(root)
g(processor)g(and)g(those)g(internal)f(processor)i(nodes)f(near)g(the)g(root)
f(may)h(have)h fp(O)q fn(\()p fp(p)c fv(lg)f fp(M)d fn(\))13 b fv(items.)75
2410 y(Thus,)h(the)e(performance)f(will)h(degrade)g(seriously)m(,)h(given)f
(a)g(lar)o(ge)g fp(p)p fv(.)148 2555 y(In)21 b(order)g(to)g(solve)g(this)h
(problem,)h(we)e(will)g(modify)f(the)i(above)f(simple)g(mer)o(ge)g(algorithm)
f(by)75 2634 y(removing)15 b(those)h(items)g(\(excluding)f(the)h(\256rst)f
(and)h(\256nal)f(items\))h(whose)g(load)g(values)g(are)g(too)f(\252close\272)
75 2712 y(to)f(the)h(previous)f(load)g(values.)25 b(More)14 b(precisely)m(,)h
(at)f(Step)h(4,)g(we)f(will)g(add)h(an)f(operation)g(immediately)988 2836 y
(93)p eop
%%Page: 94 108
 bop -4 53 a fv(before)14 b(\252repeat)i(Step)f(2\272)h(as)g(follows:)24 b
(delete)15 b(the)h(newly)f(appended)h(item)f(\()p fp(\031)q fv(,)i fp(L)p fv
(\))e(if)h fp(L)i(<)g fn(\()p fv(1)13 b fn(+)g fp(\016)q fn(\))p fp(L)1846 35
y fk(0)1858 53 y fv(,)-4 132 y(where)c fp(L)160 114 y fk(0)181 132 y fv(is)h
(the)g(load)g(value)f(of)g(the)h(previous)f(item.)17 b(Lemma)10 b(5.13)g(\(be\
low\))f(will)g(prove)g(that)h(the)f(number)-4 210 y(of)j(items)g(can)h(be)g
(greatly)f(reduced)h(to)f(at)h(most)g fq(d)p fp(\024)p fn(\()p fv(lg)8 b fp
(p)p fn(\)\()p fv(lg)g fp(M)e fn(\))p fq(e)11 b fn(+)g fv(1.)19 b(The)14 b
(price)e(that)g(we)h(have)g(to)g(pay)-4 288 y(for)g(reducing)h(the)h(number)f
(of)g(items)h(is)g(that)g(the)f(list)h(will)f(have)h(a)g(higher)f(deviation)g
(degree.)25 b(Lemma)-4 366 y(5.12)16 b(proves)h(that)f(the)h(deviation)f(degr\
ee)g(becomes)h(only)g fn(\()p fv(1)c fn(+)g fp(\016)r fn(\))j fv(times)h(high\
er)m(.)31 b(Since)16 b fp(\016)i fv(is)f(a)g(very)-4 445 y(small)d(number)f
(\()p fp(\016)k fn(=)f fv(1)p fp(=)p fn(\()p fv(2)9 b(lg)f fp(e)g fv(lg)g fp
(p)p fn(\))p fv(\),)15 b(we)f(can)h(still)f(keep)g(the)g(deviation)f(degree)h
(of)g(the)g(KVD)g(list)g fp(\025)1838 452 y fm(r)q(t)-4 523 y fv(on)e(the)g
(root)g(processor)g(constant)h(\(as)f(shown)h(in)f(Lemma)h(5.7\).)117 833 y fs
(Lemma)h(5.12)25 b fr(In)18 b(the)h(above)g(modi\256ed)g(mer)o(ge)g(algorithm\
,)i(if)e(both)f fp(\025)1428 840 y fm(l)1461 833 y fr(and)h fp(\025)1583 840 y
fm(r)1621 833 y fr(ar)o(e)g fp(k)r fr(-)117 912 y(deviant,)13 b(the)f(new)h
(list)f fp(\025)556 919 y fm(i)583 912 y fr(is)h fp(k)r fn(\()p fv(1)e fn(+)g
fp(\016)r fn(\))p fr(-deviant.)117 1106 y fs(Proof.)18 b fv(W)l(e)13 b(will)f
(prove)f(that)i(for)e(the)h(new)h(list)f fp(\025)987 1113 y fm(i)1014 1106 y
fv(Properties)g(V1)g(and)g(V2)h(hold.)117 1216 y fs(V1)25 b fv(For)13 b(the)i
(modi\256ed)f(mer)n(ge)h(algorithm,)f(we)h(still)f(keep)h(the)f(\256rst)g(and)
h(\256nal)f(items,)i(and)225 1294 y(may)f(delete)h(some)f(items)h(between)f
(them.)28 b(Since)15 b(the)h(ordering)e(of)h(the)h(remaining)225 1372 y(items)
c(is)h(still)f(not)h(changed)f(and)h(the)f(\256nal)g(item)g(is)h(not)f(delete\
d,)h(we)g(can)g(derive)f(that)225 1450 y(the)g(new)h(KVD)f(list)g(still)g(sat\
is\256es)i(Property)d(V1.)-4 1907 y @beginspecial @setspecial
%%BeginDocument: fig/remove-close.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 5 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Italic FMDEFINEFONT
1 10 /Times-Italic FMDEFINEFONT
2 14 /Times-Roman FMDEFINEFONT
3 14 /Symbol FMDEFINEFONT
4 12 /Times-Roman FMDEFINEFONT
612 792 0 FMBEGINPAGE
59.53 32.79 48 36.1 59.53 39.41 59.53 36.1 4 Y
0 X
0 K
V
400.07 39.41 411.6 36.1 400.07 32.79 400.07 36.1 4 Y
V
58.53 36.1 401.07 36.1 2 L
0.5 H
0 Z
N
73.2 32.4 130.8 39.6 R
3 X
V
2 Z
0 X
N
73.2 39.6 73.2 32.4 2 L
3 H
N
0 F
(P) 30 35.02 T
1 F
(l) 37.33 32.02 T
2 F
(:) 40.11 35.02 T
134.4 32.4 361.2 39.6 R
3 X
V
0.5 H
0 X
N
364.8 39.6 364.8 32.4 2 L
3 H
N
3 F
(\245) 398.02 19.48 T
(p) 75.74 19.48 T
1 F
(ij) 83.42 16.48 T
3 F
(p) 367.34 19.48 T
1 F
(i,j+1) 375.02 16.48 T
3 F
(-\245) 48 19.06 T
(p) 421.92 19.48 T
4 F
([) 76.8 48.26 T
0 F
(L) 80.79 48.26 T
1 F
(ij) 87.46 45.26 T
4 F
(, ) 93.02 48.26 T
0 F
(kL) 99.02 48.26 T
1 F
(ij) 111.01 45.26 T
4 F
(]) 116.57 48.26 T
0 F
(L) 368.36 48.26 T
1 F
(i,j+1) 375.02 45.26 T
134.4 39.6 134.4 32.4 2 L
N
124.6 45.2 142.6 27.2 2 L
N
142.6 45.2 124.6 27.2 2 L
N
3 F
(p) 145.92 19.48 T
4 F
([) 229.8 49.26 T
0 F
(L) 233.79 49.26 T
4 F
(, ) 240.46 49.26 T
0 F
(kL) 246.46 49.26 T
4 F
(]) 258.45 49.26 T
FMENDPAGE
%%EndDocument
 @endspecial 486 1983 a(Figure)h(5.13:)18 b(An)12 b(example)g(of)g(removing)g
(items.)117 2126 y fs(V2)25 b fv(In)13 b(the)h(KVD)g(list)h fp(\025)559 2133 y
fm(i)573 2126 y fv(,)g(consider)f(any)g(two)g(consecutive)g(items,)h(say)g
(the)f fp(j)s fv(th)g(item)g(and)225 2205 y(the)i fn(\()p fp(j)h fn(+)c fv
(1)p fn(\))p fv(-st)j(item.)31 b(Let)17 b(the)g(item)f(\()p fp(\031)q fv(,)i
fp(L)p fv(\))e(be)h(the)g(last)f(removed)g(item)h(between)225 2283 y(the)g fp
(j)s fv(th)g(and)h(the)f fn(\()p fp(j)g fn(+)d fv(1)p fn(\))p fv(st)j(items,)
i(as)f(shown)g(in)f(Figure)f(5.13.)34 b(In)17 b(the)g(modi\256ed)225 2361 y
(mer)n(ge)12 b(algorithm,)g(we)g(remove)f(the)h(item)f(only)h(if)f fp(L)j(<)g
fn(\()p fv(1)c fn(+)g fp(\016)q fn(\))p fp(L)1402 2368 y fm(ij)1433 2361 y fv
(.)18 b(Thus,)13 b(for)e(each)225 2439 y(key)k(value)h fp(\031)q fv(,)h fp
(\031)522 2446 y fm(ij)570 2439 y fq(\024)h fp(\031)h(<)f(\031)758 2447 y fm
(i)p fh(\()p fm(j)r fh(+)p fo(1)p fh(\))860 2439 y fv(,)e fp(L)921 2446 y fm
(ij)970 2439 y fq(\024)i fp(N)1066 2446 y fm(i)1080 2439 y fn(\()p fp(\031)q
fn(\))g fq(\024)g fp(k)r(L)h(<)f(k)r fn(\()p fv(1)12 b fn(+)h fp(\016)q fn
(\))p fp(L)1566 2446 y fm(ij)1597 2439 y fv(.)27 b(Thus,)225 2518 y(Property)
11 b(V2)h(holds.)620 2481 y 29 2 v 49 x 2 49 v 27 w 2 49 v 620 2532 a 29 2 v
908 2836 a(94)p eop
%%Page: 95 109
 bop 197 53 a fs(Lemma)14 b(5.13)24 b fr(For)17 b(an)e(internal)h(pr)n(ocesso\
r)h(node)f fp(P)1168 60 y fm(i)1183 53 y fr(,)h(if)e(its)h(KVD)h(list)e fp
(\025)1538 60 y fm(i)1569 53 y fr(is)h(mer)n(ged)g(by)197 132 y(using)h(the)f
(above)h(modi\256ed)f(mer)o(ge)h(algorithm,)h(the)e(number)h(of)g(items)g(in)
f fp(\025)1597 139 y fm(i)1628 132 y fr(is)h(at)g(most)197 210 y fq(d)p fp
(\024)p fn(\()p fv(lg)8 b fp(p)p fn(\)\()p fv(lg)h fp(M)c fn(\))p fq(e)11 b fn
(+)g fv(1)p fr(.)197 429 y fs(Proof.)32 b fv(For)16 b(this)h(proof,)h(it)f
(suf)o(\256ces)h(to)f(prove)f(that)h(the)g(number)g(of)g(non-\256nal)f(items)
h(is)197 507 y fp(n)23 b fq(\024)f(d)p fp(\024)p fn(\()p fv(lg)8 b fp(p)p fn
(\)\()p fv(lg)h fp(M)c fn(\))p fq(e)p fv(.)38 b(For)18 b(every)g(two)g(consec\
utive)h(non-\256nal)f(load)h(values)g fp(L)1726 489 y fk(0)1756 507 y fv(and)
197 585 y fp(L)d fv(\(the)g(next)f(load)h(value)g(of)g fp(L)758 567 y fk(0)
769 585 y fv(\))g(in)g fp(\025)885 592 y fm(i)899 585 y fv(,)i(the)e(conditio\
n)f fn(\()p fv(1)e fn(+)g fp(\016)q fn(\))p fp(L)1393 567 y fk(0)1424 585 y fq
(\024)18 b fp(L)e fv(holds)g(from)f(the)197 664 y(modi\256ed)10 b(mer)o(ge)h
(algorithm.)17 b(Hence,)c(the)e(last)g(one)h(among)f(all)g(the)g(non-\256nal)
g(load)g(values)197 742 y(must)f(be)g(at)f(least)i fn(\()p fv(1)5 b fn(+)g fp
(\016)r fn(\))643 724 y fm(n)p fk(\000)p fo(1)720 742 y fv(\(note)k(that)h
(the)g(\256rst)f(load)h(value)g(must)f(be)h(at)g(least)g(one\).)17 b(Since)
197 820 y(each)f(non-\256nal)f(load)h(value)g(is)g(less)h(than)f fp(M)22 b fv
(from)14 b(the)i(second)h(restriction)e(of)h(Property)197 898 y(V1,)d(we)h
(can)f(derive)f(that)h fn(\()p fv(1)e fn(+)h fp(\016)q fn(\))809 880 y fm(n)p
fk(\000)p fo(1)891 898 y fp(<)j(M)j fv(or)13 b fp(n)f fq(\000)f fv(1)j fp(<)h
fn(\()p fv(lg)8 b fp(M)d fn(\))p fp(=)k fv(lg)p fn(\()p fv(1)i fn(+)g fp(\016)
r fn(\))p fv(.)20 b(From)12 b(this)197 977 y(result,)h(it)f(can)g(be)h(veri\
\256ed)667 959 y fo(4)697 977 y fv(that)f fp(n)i fq(\024)g(d)p fp(\024)p fn
(\()p fv(lg)8 b fp(p)p fn(\)\()p fv(lg)g fp(M)e fn(\))p fq(e)p fv(.)1229 941 y
29 2 v 48 x 2 49 v 27 w 2 49 v 1229 991 a 29 2 v 75 1210 a fs(5.2.3.3)51 b
(Improved)12 b(Combining)f(Operation)75 1391 y fv(For)i(the)g(above)h(combini\
ng)f(operation)f(described)i(in)f(the)h(previous)f(two)h(sections,)g(each)g
(packet)g(has)g(at)75 1469 y(most)f fq(d)p fp(\024)p fn(\()p fv(lg)8 b fp(p)p
fn(\)\()p fv(lg)h fp(M)c fn(\))p fq(e)11 b fn(+)h fv(1)h(items.)19 b(When)13 b
fp(M)20 b(>)15 b(p)p fv(,)f(the)f(upper)f(bound)h(of)f(the)h(item)f(number)h
(is)g(higher)75 1548 y(than)i fq(d)p fp(\024)8 b fv(lg)273 1527 y fo(2)300
1548 y fp(p)p fq(e)13 b fn(+)g fv(1)i(in)g(Property)e(U2.)26 b(So,)16 b(in)f
(this)g(section,)h(we)g(want)e(to)h(reduce)g(the)g(upper)g(bound)f(to)75 1626
y fq(d)p fp(\024)9 b fv(lg)172 1605 y fo(2)199 1626 y fp(p)p fq(e)k fn(+)g fv
(1,)j(while)e(letting)g(the)h(\256nal)g(key)f(value)h(in)g(the)g(list)f(of)h
(the)f(root)h(processor)f(be)h(a)g(key)g(value)75 1704 y(threshold.)148 1849 y
(In)9 b(the)g(improved)f(combining)g(operation,)h(we)g(only)g(need)g(to)g(mod\
ify)e(the)i(original)f(Create)h(Algorithm)75 1928 y(by)h(removing)g(those)h
(non-\256nal)e(items)i(whose)f(load)h(values)g(are)f(less)h(than)g fp(M)r(=p)
p fv(,)i(as)e(illustrated)f(in)g(Figure)75 2006 y(5.14\(a\))18 b(with)h fp
(M)28 b fn(=)22 b fv(9)d(and)g fp(p)k fn(=)g fv(4.)37 b(Hence,)21 b(the)e(\
\256rst)f(non-\256nal)g(item)g(\(if)g(any\))g(has)i(a)f(load)f(value)75 2084 y
fp(L)p fv(,)i fp(M)r(=p)i fq(\024)f fp(L)g(<)g fv(2)p fp(M)r(=p)p fv(.)35 b
(Thus,)20 b(the)d(number)g(of)g(non-\256nal)g(items)g(generated)h(by)f(the)g
(new)h(Create)75 2162 y(Algorithm)13 b(will)h(become)h(at)f(most)h fq(d)p fv
(lg)8 b fp(p)p fq(e)15 b fv(\(i.e.,)h(the)f(total)f(number)g(of)g(items)g(are)
h(at)f(most)h fq(d)p fv(lg)8 b fp(p)p fq(e)13 b fn(+)f fv(1\),)75 2241 y(beca\
use)h(we)g(can)f(double)g(at)h(most)f fq(d)p fv(lg)c fp(p)p fq(e)k(\000)f fv
(1)h(times)h(between)f fp(M)s(=p)h fv(\(inclusive\))e(and)i fp(M)18 b fv(\(ex\
clusive\).)148 2386 y(On)e(the)g(internal)f(processor)h(nodes,)h(we)f(still)g
(use)g(the)g(modi\256ed)f(mer)n(ge)h(algorithm)f(\(described)g(in)75 2464 y
(the)c(previous)g(section\))g(to)g(mer)o(ge)g(the)g(KVD)h(lists.)18 b(It)11 b
(can)g(be)h(easily)f(veri\256ed)g(from)f(the)h(modi\256ed)f(mer)o(ge)75 2542 y
(algorithm)j(and)i(the)f(new)h(Create)g(Algorithm)e(that)h(the)h(\256rst)f
(non-\256nal)f(load)i(value)f(\(if)g(any\))g(of)g(a)h(KVD)75 2598 y 750 2 v
133 2629 a fl(4)150 2644 y ft(As)22 b(shown)g(earlier)o(,)j(log)o ff(\()p ft
(1)16 b ff(+)h fg(\016)r ff(\))28 b fg(>)h(\016)18 b fe(\000)e fg(\016)873
2629 y fl(2)889 2644 y fg(=)p ft(2)28 b ff(=)h fg(\016)r ff(\()p ft(1)16 b fe
(\000)g fg(\016)r(=)p ft(2)p ff(\))28 b(=)h fg(\016)r(=\024)p ft(.)51 b(Hence\
,)27 b ff(\()p ft(lg)6 b fg(M)f ff(\))p fg(=)i ft(lg)o ff(\()p ft(1)16 b ff
(+)g fg(\016)r ff(\))29 b fg(<)75 2709 y ff(\()p ft(lg)6 b fg(M)f ff(\))p fg
(=)p ff(\(\()p ft(lg)i fg(e)p ff(\)\()p fg(\016)r(=\024)p ff(\)\))12 b fg(<)f
(\024)p ff(\()p ft(lg)c fg(p)p ff(\)\()p ft(lg)f fg(M)f ff(\))p ft(.)988 2836
y fv(95)p eop
%%Page: 96 110
 bop -4 2478 a @beginspecial @setspecial
%%BeginDocument: fig/Mp.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 5 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
1 14 /Symbol FMDEFINEFONT
2 12 /Times-Italic FMDEFINEFONT
3 10 /Times-Italic FMDEFINEFONT
4 10 /Times-Roman FMDEFINEFONT
612 792 0 FMBEGINPAGE
85 48.66 85 60.33 106.67 60.33 106.67 71.16 135.83 71.16 135.83 81.16 147.5 81.16 7 L
3 H
2 Z
4 X
0 K
N
322.61 519.63 322.61 499.83 351.41 499.83 351.41 519.63 4 L
6 X
V
0.5 H
3 X
N
351.41 501.63 351.41 521.43 2 L
7 X
N
110.21 327.03 110.21 348.56 2 L
3 X
N
149.81 327.03 149.81 402.63 2 L
N
221.81 327.03 221.81 445.83 2 L
N
322.61 327.03 322.61 449.43 2 L
N
149.81 370.23 221.81 417.03 R
6 X
V
3 X
N
221.81 417.03 322.61 499.83 R
6 X
V
3 X
N
56.51 527.9 59.81 539.43 63.12 527.9 59.81 527.9 4 Y
0 X
V
59.81 327.03 59.81 528.9 2 L
N
365.08 330.34 376.61 327.03 365.08 323.73 365.08 327.03 4 Y
V
59.81 327.03 366.08 327.03 2 L
N
0 F
(key value ) 355.66 337.48 T
1 F
(p) 404.95 337.48 T
2 F
(N) 23.81 533.71 T
3 F
(i) 31.81 530.71 T
2 F
( \050) 34.59 533.71 T
1 F
(p) 41.58 533.71 T
2 F
(\051) 49.27 533.71 T
1 F
(-\245) 53.26 308.68 T
355.01 430.03 59.81 430.03 2 L
10 X
N
0 X
(\245) 356.45 308.68 T
59.81 327.03 88.61 327.03 88.61 337.83 99.41 337.83 110.21 337.83 110.21 348.63 139.01 348.63
 139.01 359.43 149.81 359.43 149.81 370.23 171.41 370.23 171.41 381.03 182.21 381.03 182.21 395.43 196.61 395.43
 196.61 406.23 221.81 406.23 221.81 417.03 239.81 417.03 239.81 427.83 250.61 427.83 250.61 438.63 265.01 438.63
 265.01 449.43 275.81 449.43 275.81 460.23 286.61 460.23 286.61 471.03 301.01 471.03 301.01 481.83 311.81 481.83
 311.81 489.03 322.61 489.03 322.61 499.83 337.01 499.83 35 L
3 H
N
(p) 145.8 315.85 T
3 F
(i1) 153.48 312.85 T
1 F
(p) 214.61 316.28 T
3 F
(i2) 222.3 313.28 T
1 F
(p) 315.41 316.28 T
3 F
(i3) 323.1 313.28 T
4 F
(8) 185.81 419.2 T
(16) 265.82 503.82 T
2 F
(M) 16.66 349.54 T
4 F
(/p = 9/4) 26.65 349.54 T
2 F
(L) 333.41 486.62 T
3 F
(i3) 340.08 483.62 T
4 F
(=16) 347.86 486.62 T
2 F
(L) 257.81 406.28 T
3 F
(i2) 264.48 403.28 T
4 F
(=8) 272.26 406.28 T
2 F
(L) 171.41 359.48 T
3 F
(i1) 178.08 356.48 T
4 F
(=4) 185.86 359.48 T
162.83 352.8 59.5 352.8 2 L
0.5 H
10 X
N
2 F
0 X
(M) 28.33 425.37 T
4 F
( = 9) 38.32 425.37 T
103.01 322.02 114.48 311.76 2 L
1 H
N
114.48 322.02 103.01 311.76 2 L
N
81.41 322.02 92.88 311.76 2 L
N
92.88 322.02 81.41 311.76 2 L
N
2 F
(\050No items with ) 76.47 299.3 T
320.38 240.81 320.38 221.01 349.18 221.01 349.18 240.81 4 L
6 X
V
0.5 H
3 X
N
349.18 222.81 349.18 242.61 2 L
7 X
N
147.58 48.21 147.58 123.81 2 L
3 X
N
219.58 48.21 219.58 167.01 2 L
N
320.38 48.21 320.38 170.61 2 L
N
147.58 91.41 219.58 138.21 R
6 X
V
3 X
N
219.58 138.21 320.38 221.01 R
6 X
V
3 X
N
54.27 249.07 57.58 260.61 60.89 249.07 57.58 249.07 4 Y
0 X
V
57.58 48.21 57.58 250.07 2 L
N
362.85 51.51 374.38 48.21 362.85 44.9 362.85 48.21 4 Y
V
57.58 48.21 363.85 48.21 2 L
N
0 F
(key value ) 353.43 58.66 T
1 F
(p) 402.72 58.66 T
2 F
(N) 21.58 254.89 T
3 F
(i) 29.58 251.89 T
2 F
( \050) 32.36 254.89 T
1 F
(p) 39.35 254.89 T
2 F
(\051) 47.03 254.89 T
1 F
(-\245) 51.03 29.86 T
352.78 151.2 57.58 151.2 2 L
10 X
N
0 X
(\245) 354.22 29.86 T
57.58 48.21 146.67 48.66 147.58 91.41 169.18 91.41 169.18 102.21 179.98 102.21 179.98 116.61
 194.38 116.61 194.38 127.41 219.58 127.41 219.58 138.21 237.58 138.21 237.58 149.01 248.38 149.01 248.38 159.81
 262.78 159.81 262.78 170.61 273.58 170.61 273.58 181.41 284.38 181.41 284.38 192.21 298.78 192.21 298.78 203.01
 309.58 203.01 309.58 210.21 320.38 210.21 320.38 221.01 334.78 221.01 28 L
3 H
N
(p) 143.57 37.03 T
3 F
(i1) 151.25 34.03 T
1 F
(p) 212.38 37.46 T
3 F
(i2) 220.06 34.46 T
1 F
(p) 313.18 37.46 T
3 F
(i3) 320.86 34.46 T
4 F
(8) 183.58 140.38 T
(16) 263.59 224.99 T
2 F
(L) 331.18 207.8 T
3 F
(i3) 337.85 204.8 T
4 F
(=16) 345.62 207.8 T
2 F
(L) 255.58 127.46 T
3 F
(i2) 262.25 124.46 T
4 F
(=8) 270.02 127.46 T
2 F
(L) 169.18 80.66 T
3 F
(i1) 175.85 77.66 T
4 F
(=4) 183.62 80.66 T
161.91 75.3 58.58 75.3 2 L
0.5 H
10 X
N
2 F
0 X
(M) 26.09 146.55 T
4 F
( = 9) 36.08 146.55 T
0 F
(\050a\051) 183.13 275.63 T
(\050b\051) 189.8 16.96 T
2 F
(priorities her) 76.47 287.3 T
(e\051) 139.66 287.3 T
(M) 13.33 72.04 T
4 F
(/p = 9/4) 23.32 72.04 T
FMENDPAGE
%%EndDocument
 @endspecial 79 x fv(Figure)11 b(5.14:)18 b(\(a\))12 b(Removing)g(those)g(ite\
ms)g(with)g(priorities)g(lower)g(than)g fp(M)r(=p)p fn(\(=)j fv(9)p fp(=)p fv
(4)p fn(\))p fv(.)k(\(b\))11 b(Increasing)-4 2635 y(the)h(key)g(values)h(less)
g(than)f fp(\031)506 2642 y fm(i)p fo(1)549 2635 y fv(to)g fp(\031)628 2642 y
fm(i)p fo(1)659 2635 y fv(.)908 2836 y(96)p eop
%%Page: 97 111
 bop 75 53 a fv(list)11 b(on)h(an)f(internal)g(processor)g(node)g(is)h(still)
f(at)g(least)h fp(M)s(=p)p fv(.)19 b(Then,)12 b(we)g(can)f(derive)g(in)g(Lemm\
a)h(5.14)f(that)75 132 y(the)h(number)g(of)g(items)g(in)h fp(\025)567 139 y fm
(i)594 132 y fv(is)f(at)h(most)f fq(d)p fp(\024)c fv(lg)894 111 y fo(2)921 132
y fp(p)p fq(e)k fn(+)f fv(1.)197 409 y fs(Lemma)j(5.14)24 b fr(For)12 b(the)f
(above)f(impr)o(oved)h(combining)f(operation,)h(if)g(a)g(KVD)g(list)g fp(\025)
1692 416 y fm(i)1718 409 y fr(on)f(an)197 487 y(internal)h(pr)o(ocessor)h fp
(P)603 494 y fm(i)629 487 y fr(is)g(generated)g(by)f(the)h(modi\256ed)f(mer)n
(ge)h(algorithm,)f(the)h(number)f(of)197 565 y(items)i(in)f fp(\025)394 572 y
fm(i)421 565 y fr(is)g(at)h(most)f fq(d)p fp(\024)d fv(lg)721 544 y fo(2)748
565 y fp(p)p fq(e)j fn(+)f fv(1)p fr(.)197 741 y fs(Proof.)28 b fv(Since)16 b
(the)g(\256rst)f(non-\256nal)g(node)h(\(if)f(any\))h(is)g(at)g(least)g fp(M)s
(=p)h fv(and)f(each)g(non-\256nal)197 819 y(node)k(is)g(less)g(than)g fp(M)5 b
fv(,)22 b(we)e(can)g(derive)g(that)f(the)h(number)f(of)g(items)h(in)g fp(\025)
1588 826 y fm(i)1622 819 y fv(is)g(at)g(most)197 897 y fq(d)p fp(\024)p fn
(\()p fv(lg)8 b fp(p)p fn(\)\()p fv(lg)h fp(M)c fn(\))p fq(e)11 b fn(+)h fv
(1,)h(by)f(applying)g(the)h(same)g(technique)g(used)g(in)f(the)h(proof)f(of)g
(Lemma)197 975 y(5.13.)315 939 y 29 2 v 49 x 2 49 v 26 w 2 49 v 315 990 a 29 2
v 148 1151 a(Although)h(the)h(number)f(of)g(items)h(in)f(each)h(packet)g(is)g
(reduced)f(to)h(what)g(we)f(want,)i(we)f(should)f(note)75 1229 y(that)h(after)
g(the)g(modi\256cation)f(each)i(KVD)f(list)g(generated)g(by)g(the)g(new)h(Cre\
ate)f(Algorithm)f(may)h(not)g(be)75 1307 y(2-deviant.)28 b(This)16 b(is)h(bec\
ause)f(on)g(the)g(corresponding)e(leaf)i(processor)g(there)f(may)h(be)g(some)
g(elements)75 1385 y(with)e(key)g(values)h(lower)e(than)i(the)f(\256rst)g(key)
g(value)g(of)g(the)g(list.)24 b(In)14 b(order)f(to)h(let)g(each)h(leaf)f(proc\
essor)r(')m(s)75 1464 y(KVD)9 b(list)g fp(\025)290 1471 y fm(i)314 1464 y fv
(become)g(2-deviant)g(again,)h(we)f(increase)h(those)f(key)g(values)h(less)g
(than)f fp(\031)1585 1471 y fm(i)p fo(1)1624 1464 y fv(\(in)g(the)g(processor)
75 1542 y(subtree)14 b fn(\000)263 1549 y fm(i)278 1542 y fv(\))f(to)h fp(\
\031)389 1549 y fm(i)p fo(1)420 1542 y fv(,)h(as)g(illustrated)e(in)h(Figure)
f(5.14\(b\).)23 b(After)14 b(increasing)f(the)i(key)f(values,)h(each)f fp(n)p
fn(\()p fp(\031)r fn(\))75 1620 y fv(becomes)f(at)f(most)h(2)p fp(M)r(=p)p fv
(.)148 1765 y(Since)22 b(the)g(internal)g(processor)g(nodes)g(still)g(use)h
(the)f(modi\256ed)f(mer)o(ge)h(algorithm)f(to)h(generate)75 1844 y(their)17 b
(KVD)g(lists,)i(Lemma)e(5.11)h(still)f(holds)g(and)g(then)g(the)h(KVD)f(list)
g(in)g(the)g(root)g(processor)g(is)g(still)75 1922 y(4-deviant)i(from)f(Lemma)
i(5.7.)40 b(Although)19 b fp(n)p fn(\()p fp(\031)q fn(\))24 b fq(\024)g fv
(2)p fp(M)r(=p)d fv(for)d(each)i fp(\031)r fv(,)h(we)f(still)f(can)h(derive)f
(that)75 2000 y fp(N)5 b fn(\()p fp(\031)166 2007 y fm(r)q(t;m)237 2011 y fj
(r)q(t)268 2000 y fn(\))14 b(=)f(\002\()p fp(M)6 b fn(\))p fv(,)13 b(by)f(app\
lying)g(the)g(same)h(technique)f(used)h(in)f(the)g(proof)g(of)g(Lemma)g(5.8.)
148 2145 y(The)f(above)f(result)g(only)f(shows)i(that)f fr(after)g fv(increas\
ing)g(key)g(values,)h(the)f(value)g fp(N)5 b fn(\()p fp(\031)1635 2152 y fm
(r)q(t;m)1706 2156 y fj(r)q(t)1737 2145 y fn(\))10 b fv(is)g fn(\002\()p fp
(M)c fn(\))p fv(.)75 2224 y(Lemma)20 b(5.15)f(proves)h(that)f(if)g(we)g(incre\
ase)h(at)g(most)f(2)p fp(M)r(=p)i fv(nodes)f(on)f(each)h(of)f fp(p)h fv(leaf)
f(processors)75 2302 y(and)14 b(the)g(value)h fp(N)5 b fn(\()p fp(\031)q fn
(\))14 b fv(is)h fn(\002\()p fp(M)5 b fn(\))15 b fv(after)e(increasing)h(thes\
e)h(key)f(values,)h(the)g(value)f fp(N)5 b fn(\()p fp(\031)q fn(\))15 b fv
(is)f(also)h fn(\002\()p fp(M)5 b fn(\))75 2380 y fv(before)15 b(the)g(increa\
sing.)27 b(This)16 b(implies)f(that)g(the)h(condition)e fp(N)6 b fn(\()p fp
(\031)1266 2387 y fm(r)q(t;m)1337 2391 y fj(rt)1367 2380 y fn(\))18 b(=)g(\
\002\()p fp(M)5 b fn(\))16 b fv(also)f(holds)h(before)75 2458 y(the)g(increas\
ing;)g(that)g(is,)h(the)e(\256nal)g(key)h(value)g fp(\031)960 2465 y fm(r)q
(t;m)1031 2469 y fj(rt)1077 2458 y fv(is)g(a)f(key)h(value)f(threshold)h(sati\
sfying)f(the)g(PRS)75 2537 y(problem.)988 2836 y(97)p eop
%%Page: 98 112
 bop 117 53 a fs(Lemma)14 b(5.15)25 b fr(For)20 b(the)f(PRS)h(pr)o(oblem,)h
(suppose)f(that)e(we)i(incr)o(ease)f(key)h(values)g(of)f(at)117 132 y(most)f
fv(2)p fp(M)s(=p)g fr(elements)g(on)f(each)h(of)f(the)g fp(p)h fr(leaf)g(pr)n
(ocessors.)35 b(If)17 b fp(N)6 b fn(\()p fp(\031)q fn(\))21 b(=)g(\002\()p fp
(M)5 b fn(\))17 b fr(after)117 210 y(we)d(incr)o(ease)g(these)g(key)f(values,)
i(then)e(the)h(original)f fp(N)5 b fn(\()p fp(\031)q fn(\))14 b fr(\(befor)n
(e)f(incr)o(easing)g(these)h(key)117 288 y(values\))f(is)f(also)h fn(\002\()p
fp(M)5 b fn(\))p fr(.)117 457 y fs(Proof.)40 b fv(Let)20 b fp(N)413 464 y fa
(befor)o(e)499 457 y fn(\()p fp(\031)q fn(\))g fv(denote)f(the)h(original)f
(value)g fp(N)5 b fn(\()p fp(\031)r fn(\))20 b fv(and)f fp(N)1383 464 y fa
(after)1448 457 y fn(\()p fp(\031)q fn(\))h fv(denote)g(the)117 535 y(value)g
fp(N)5 b fn(\()p fp(\031)q fn(\))20 b fv(after)e(we)i(increase)f(some)h(key)f
(values.)39 b(Since)19 b(we)h(increase)f(key)g(values)117 613 y(of)h(at)g(mos\
t)f fp(p)p fn(\()p fv(2)p fp(M)s(=p)p fn(\))i fv(elements,)h(the)e(value)g fp
(N)5 b fn(\()p fp(\031)r fn(\))19 b fv(decreases)i(at)f(most)g(2)p fp(M)25 b
fv(in)20 b(total.)117 691 y(Hence,)14 b fp(N)309 698 y fa(befor)o(e)394 691 y
fn(\()p fp(\031)r fn(\))d fq(\000)f fv(2)p fp(M)20 b fq(\024)13 b fp(N)705 698
y fa(after)770 691 y fn(\()p fp(\031)q fn(\))h fq(\024)g fp(N)943 698 y fa
(befor)o(e)1029 691 y fn(\()p fp(\031)q fn(\))p fv(,)f(that)f(is,)h fp(N)1305
698 y fa(after)1370 691 y fn(\()p fp(\031)q fn(\))h fq(\024)g fp(N)1543 698 y
fa(befor)o(e)1629 691 y fn(\()p fp(\031)q fn(\))g fq(\024)117 770 y fp(N)156
777 y fa(after)221 770 y fn(\()p fp(\031)r fn(\))d(+)g fv(2)p fp(M)5 b fv(.)
19 b(Therefore,)12 b(if)g fp(N)760 777 y fa(after)825 770 y fn(\()p fp(\031)q
fn(\))i(=)g(\002\()p fp(M)5 b fn(\))p fv(,)13 b(then)f fp(N)1248 777 y fa(bef\
or)o(e)1334 770 y fn(\()p fp(\031)q fn(\))i(=)g(\002\()p fp(M)5 b fn(\))p fv
(.)1625 734 y 29 2 v 48 x 2 49 v 27 w 2 49 v 1625 784 a 29 2 v -4 1002 a fi
(5.2.4)57 b(T)o(ime)14 b(Complexity)-4 1181 y fv(In)h(this)i(section,)h(we)e
(will)g(analyze)h(the)f(time)g(complexity)f(of)h(the)g(PRS)g(algorithm)g(base\
d)g(on)h(the)f(two)-4 1259 y(assumptions:)34 b(\(1\))19 b(it)h(takes)h fp(O)r
fn(\()p fv(1)p fn(\))f fv(time)g(to)g(send)h(each)f(piece)h(of)f(data;)k(\(2\
\))c(each)g(\(leaf\))g(processor)-4 1337 y(maintains)13 b(elements)h(based)g
(on)g(the)f(priority)f(queue)i(described)g(in)f(Section)g(4.2.1)i(by)e(lettin\
g)h(the)f(grain)-4 1416 y(size)f(of)g(each)h(element)f(\(corresponding)f(to)h
(a)h(task\))f(be)h(one.)69 1561 y(The)f(KVD)f(lists)h(on)f(leaf)g(processors)
h(are)f(generated)g(by)g(the)h(Create)f(Algorithm.)17 b(In)11 b(this)g(algori\
thm,)-4 1639 y(Step)e(3)g(can)h(use)g(the)f(T)p fu(HRESHPRI)h fv(operation)f
(\(an)g(operation)g(on)g(the)h(priority)e(queue)h(described)h(in)f(Section)-4
1717 y(4.2.1\),)i(so)g(the)f(computation)g(time)g(at)g(Step)g(3)g(is)h fp(O)r
fn(\()p fv(log)d fp(N)1013 1724 y fm(i)1027 1717 y fn(\))p fv(,)j(where)f fp
(N)1240 1724 y fm(i)1265 1717 y fv(is)g(the)h(total)f(number)f(of)h(elements)
-4 1796 y(on)16 b(processor)h fp(P)301 1803 y fm(i)316 1796 y fv(.)32 b(Note)
17 b(that)g(each)h(other)e(step)i(only)e(takes)i fp(O)q fn(\()p fv(1)p fn(\))
f fv(time.)32 b(Since)17 b fp(N)1535 1803 y fm(i)1570 1796 y fq(\024)j fp(N)5
b fv(,)19 b(the)e(time)-4 1874 y(complexity)h(is)h fp(O)q fn(\()p fv(log)8 b
fp(N)e fn(\))19 b fv(too.)37 b(Since)19 b(there)f(are)h(at)g(most)g fq(d)p fv
(lg)8 b fp(p)p fq(e)15 b fn(+)g fv(1)k(items)g(in)f(the)h(list)g(on)g(a)g(lea\
f)-4 1952 y(processor)m(,)f(we)e(will)f(repeat)h(each)g(step)g(at)g(most)f fq
(d)p fv(lg)9 b fp(p)p fq(e)k fn(+)g fv(1)j(times.)29 b(So,)16 b(the)g(total)g
(time)f(on)h(each)g(leaf)-4 2030 y(processor)c(is)h fp(O)q fn(\(\()p fv(log)8
b fp(p)p fn(\)\()p fv(log)g fp(N)e fn(\)\))p fv(.)69 2175 y(The)k(KVD)h(lists)
f(on)g(internal)g(processors)h(are)f(generated)g(by)g(the)g(modi\256ed)f(mer)
o(ge)h(algorithm.)17 b(Since)-4 2254 y(the)10 b(algorithm)f(does)i(a)f(mer)o
(ge)g(operation,)h(the)f(time)g(depends)h(on)f(the)g(number)g(of)g(items.)17 b
(The)11 b(number)f(of)-4 2332 y(items)i(in)h(each)g(list)g(is)g(at)g(most)g fq
(d)p fv(lg)612 2311 y fo(2)639 2332 y fp(p)p fq(e)f fn(+)f fv(1)i(\(or)f fp
(O)q fn(\()p fv(log)976 2311 y fo(2)1003 2332 y fp(p)p fn(\))p fv(\),)h(so)h
(the)e(total)h(time)f(taken)h(for)f(each)h(internal)-4 2410 y(processor)j(is)
i(only)e fp(O)r fn(\()p fv(log)480 2389 y fo(2)507 2410 y fp(p)p fn(\))p fv
(.)33 b(Since)16 b(there)h(are)g(lg)8 b fp(p)17 b fv(levels)g(in)g(the)g(proc\
essor)g(tree)f(and)h(processors)-4 2488 y(at)d(the)g(same)h(level)g(can)g(pro\
cess)g(the)f(mer)o(ge)g(operation)g(in)g(parallel,)h(the)g(total)f(time)g(of)
g(the)g(combining)-4 2567 y(operation)d(is)i fp(O)q fn(\()p fv(log)363 2546 y
fo(3)390 2567 y fp(p)f fn(+)f(\()p fv(log)d fp(p)p fn(\)\()p fv(log)g fp(N)d
fn(\)\))p fv(.)69 2712 y(As)13 b(for)f(the)h(disseminating)g(operation,)g(we)
g(broadcast)g(the)f(value)h(of)g fp(\031)1338 2719 y fm(thr)1403 2712 y fv
(from)e(the)i(root)g(processor)908 2836 y(98)p eop
%%Page: 99 113
 bop 75 53 a fv(to)15 b(each)g(leaf)g(processor)m(.)27 b(Obviously)l(,)16 b
(the)f(time)g(complexity)f(is)i(smaller)e(than)h(that)g(of)g(the)g(combining)
75 132 y(operation.)148 277 y(After)c(each)g(leaf)g(processor)h(receives)f
(the)g(value)h fp(\031)1050 284 y fm(thr)1101 277 y fv(,)g(the)g(processor)f
(will)g(use)g(the)h(S)p fu(PLIT)g fv(operation)75 355 y(\(an)d(operation)g
(of)g(the)g(priority)f(queue)i(described)f(in)g(Section)g(4.2.1\))h(to)f(part\
ition)g(the)g(priority)f(queue)h(into)75 433 y(two)j(parts,)g(one)g(containin\
g)g(tasks)g(with)g(priorities)f fp(\031)k fq(\025)f fp(\031)1118 440 y fm(thr)
1181 433 y fv(and)e(the)g(other)g(containing)f(the)h(remaining)75 512 y(tasks\
.)19 b(The)13 b(time)f(complexity)g(for)f(the)h(S)p fu(PLIT)i fv(operation)d
(is)i(only)f fp(O)r fn(\()p fv(log)c fp(n)p fn(\))p fv(.)148 657 y(From)k(the)
g(above,)h(we)f(conclude)h(that)f(the)g(total)g(time)g(complexity)g(is)g fp
(O)r fn(\()p fv(log)1515 636 y fo(3)1542 657 y fp(p)f fn(+)g(\()p fv(log)d fp
(p)p fn(\)\()p fv(log)g fp(N)e fn(\)\))p fv(.)75 909 y fi(5.2.5)57 b(Discussi\
on)75 1091 y fv(In)18 b(this)h(section,)j(we)d(will)f(\256rst)h(show)g(that)f
(when)h(the)g(degree)g(of)f(the)h(processor)g(tree)g(is)g(a)g(constant)75 1170
y(\(integer\))f(more)g(than)h(two,)j(we)d(still)g(can)g(solve)h(the)f(PRS)g
(problem)f(by)h(using)g(one)h(combining)e(and)75 1248 y(disseminating)13 b
(operation)g(in)g(which)g(each)g(packet)h(size)g(is)f fp(O)r fn(\()p fv(log)
1261 1227 y fo(2)1287 1248 y fp(p)p fn(\))p fv(.)22 b(Then,)15 b(we)e(will)g
(discuss)h(how)f(to)75 1326 y(apply)f(the)g(PRS)h(algorithm)e(to)h(our)g(mult\
ilist)f(scheduling)i(system.)148 1471 y(Suppose)k(that)g(an)h(internal)e(proc\
essor)h(node)g fp(P)1013 1478 y fm(i)1045 1471 y fv(has)h(three)e(children.)
33 b(Processor)16 b fp(P)1695 1478 y fm(i)1727 1471 y fv(will)h(do)g(the)75
1549 y(3-way)c(mer)n(ge)h(operation)e(after)h(receiving)g(three)g(KVD)g(lists)
h(from)e(its)h(children.)21 b(Using)13 b(the)g(technique)75 1628 y(of)f(the)h
(modi\256ed)f(mer)o(ge)h(algorithm,)f(the)h(number)f(of)h(items)g(in)f(the)h
(KVD)g(list)g fp(\025)1512 1635 y fm(i)1539 1628 y fv(is)h(still)e fp(O)r fn
(\()p fv(log)1795 1607 y fo(2)1822 1628 y fp(p)p fn(\))h fv(and)75 1706 y(the)
d(deviation)g(degree)h(of)f fp(\025)566 1713 y fm(i)591 1706 y fv(still)g(inc\
reases)h(by)f(a)h(factor)f(of)g fn(\()p fv(1)c fn(+)h fp(\016)q fn(\))p fv
(.)18 b(Since)10 b(the)h(height)f(of)g(the)g(processor)75 1784 y(tree)j(is)g
(lower)f(than)h(lg)8 b fp(p)p fv(,)14 b(the)f(KVD)g(list)g(in)g(the)g(root)f
(processor)h(is)g(still)g(4-deviant.)19 b(Thus,)c(the)d(\256nal)h(key)75 1862
y(value)i(of)f(this)h(list)g(is)g(still)g(a)g(key)g(value)g(threshold)f fp
(\031)1030 1869 y fm(thr)1097 1862 y fv(satisfying)h fp(N)1345 1869 y fm(i)
1359 1862 y fn(\()p fp(\031)1406 1869 y fm(thr)1458 1862 y fn(\))i(=)g(\002\()
p fp(M)5 b fn(\))p fv(.)26 b(This)16 b(can)f(be)75 1941 y(generalized)h(to)f
(any)h(constant)g(degree)g(processor)g(tree,)h(so)f(we)g(still)g(can)g(solve)
h(the)f(PRS)f(problem)g(by)75 2019 y(using)d(packets)h(with)f(size)h fp(O)r fn
(\()p fv(log)669 1998 y fo(2)696 2019 y fp(p)p fn(\))p fv(.)148 2164 y(For)h
(the)h(multilist)f(scheduling)h(model,)g(the)g(problem)f(in)h(Section)f(4.1.2\
.2)i(is)f(as)h(follows.)25 b(Given)15 b(a)75 2242 y(load)c(threshold)f fp(L)
401 2249 y fm(thr)464 2242 y fv(and)h(a)g(set)g(of)g(tasks)g(each)g(containin\
g)f(a)h(priority)f(and)h(a)g(grain)f(size)h(\(represented)f(by)75 2321 y(an)j
(integer\),)f(select)h(a)f(set)h(of)f(highest-priority)f(tasks)i(whose)g(tota\
l)f(load)g(\(summation)g(of)g(grain)g(sizes\))h(is)75 2399 y fp(L)108 2406 y
fm(sel)168 2399 y fn(=)g(\002\()p fp(L)309 2406 y fm(thr)362 2399 y fn(\))p fv
(,)c(if)e(each)i(task')m(s)f(grain)g(size)g(is)g fp(O)r fn(\()p fp(L)989 2406
y fm(thr)1041 2399 y fn(\))g fv(and)g(the)g(total)g(load)g(of)f(tasks)i(is)f
fp(L)1639 2406 y fm(total)1727 2399 y fn(=)14 b(\012\()p fp(L)1866 2406 y fm
(thr)1919 2399 y fn(\))p fv(.)75 2477 y(If)c(the)g(maximum)g(task)g(grain)g
(size)h fp(G)732 2484 y fm(max)815 2477 y fv(is)g(lar)n(ger)f(than)h fp(L)
1114 2484 y fm(thr)1166 2477 y fv(,)g(then)g fp(L)1319 2484 y fm(sel)1378 2477
y fn(=)j fp(O)r fn(\()p fp(G)1526 2484 y fm(max)1598 2477 y fn(\))c fv(becaus\
e)i(we)e(may)75 2555 y(need)j(to)f(group)g(the)g(task)h(with)f fp(G)667 2562 y
fm(max)752 2555 y fv(\(e.g.,)h(when)g(the)f(task)h(with)f(the)g(grain)g(size)
h fp(G)1569 2562 y fm(max)1654 2555 y fv(has)g(the)f(highest)75 2634 y(priori\
ty\).)21 b(If)13 b(the)h(total)g(load)f(of)h(tasks)h(is)f fp(L)850 2641 y fm
(total)940 2634 y fp(<)i(L)1027 2641 y fm(thr)1079 2634 y fv(,)f(then)f fp
(L)1239 2641 y fm(sel)1301 2634 y fn(=)i fp(L)1388 2641 y fm(total)1476 2634 y
fv(because)f(we)f(can)g(at)g(most)75 2712 y(group)e(tasks)h(with)f(total)g
(load)g fp(L)649 2719 y fm(total)723 2712 y fv(.)988 2836 y(99)p eop
%%Page: 100 114
 bop 69 53 a fv(Now)l(,)12 b(we)f(want)g(to)g(translate)g(the)g(above)h(probl\
em)e(to)h(the)g(PRS)g(problem)f(in)h(order)f(to)h(apply)g(the)g(PRS)-4 132 y
(algorithm)g(presented)i(in)f(this)h(section.)20 b(Since)13 b(each)g(task)g fq
(T)26 b fv(may)12 b(have)h(a)g(dif)o(ferent)f(grain)g(size)h fp(G)1756 139 y
fk(T)1787 132 y fv(,)g(we)-4 210 y(can)e(conceptually)h(break)f(a)h(task)g
(into)f fp(G)718 217 y fk(T)761 210 y fv(elements)h(with)f(the)h(same)g(prior\
ity)-5 b(.)18 b(Then,)13 b(for)e(each)h(element)-4 288 y(which)j(is)g(the)h fp
(j)s fv(-th)e(element)i(with)f(priority)e fp(\031)k fv(on)f(processor)f fp
(P)1141 295 y fm(i)1156 288 y fv(,)h(we)g(can)f(de\256ne)g(its)h(key)f(value)
h(as)g(the)-4 366 y(compound)f(key)i fn(\()p fq(\000)p fp(\031)q(;)8 b(i;)f
(j)s fn(\))p fv(,)18 b(such)f(that)f(all)g(key)h(values)g(are)f(distinct.)30 b
(Note)16 b(that)h(by)f(negating)g fp(\031)q fv(,)i(we)-4 445 y(translate)e
(highest)g(priority)f(to)h(lowest)g(key)g(value.)30 b(W)l(e)17 b(should)f(not\
e)g(that)g(when)g(we)h(break)f(a)g(task)h fq(T)-4 523 y fv(into)11 b fp(G)123
530 y fk(T)165 523 y fv(elements,)h(we)g(let)f(these)h(elements)g(be)f(the)h
fp(i)p fv(th)f(element)g(to)g(the)h fn(\()p fp(i)d fn(+)g fp(G)1420 530 y fk
(T)1459 523 y fq(\000)g fv(1)p fn(\))p fv(-st)j(element)f(with)-4 601 y(the)i
(same)g(priority)f(of)g fq(T)26 b fv(on)13 b(the)g(same)h(processor)m(,)g(so)
g(that)e(the)h(elements)h(for)e(the)h(same)g(task)h(will)e(have)-4 679 y(cons\
ecutive)h(key)g(values.)22 b(Thus,)14 b(there)f(is)h(at)f(most)g(one)g(task)h
(whose)g(elements)f(are)g(partially)g(selected.)-4 758 y(Since)i(in)g(the)g
(actual)g(implementation)f(we)i(still)f(need)g(to)h(select)f(the)h(whole)f
(task)g fq(T)e fv(,)k(the)e(total)g(load)g(of)-4 836 y(selected)c(tasks)g(may)
g(be)g fp(G)470 843 y fm(max)553 836 y fv(higher)f(than)g(the)h(total)g(numbe\
r)f(of)g(selected)h(elements.)18 b(If)10 b fp(G)1634 843 y fm(max)1720 836 y
fq(\024)k fp(L)1806 843 y fm(thr)1858 836 y fv(,)-4 914 y(the)e(total)g(load)
g(of)g(selected)h(tasks)g(is)g(still)f fn(\002\()p fp(L)830 921 y fm(thr)882
914 y fn(\))p fv(.)69 1059 y(In)k(addition,)h(since)g(the)g(system)g(does)g
(not)g(know)f fp(L)1021 1066 y fm(total)1112 1059 y fv(in)h(advance,)h(we)f
(cannot)f(guarantee)h(that)-4 1138 y fp(L)29 1145 y fm(total)125 1138 y fq
(\025)k fp(L)218 1145 y fm(thr)270 1138 y fv(.)36 b(In)17 b(the)h(case)h(that)
f fp(L)686 1145 y fm(total)782 1138 y fp(<)k(L)875 1145 y fm(thr)927 1138 y fv
(,)e(the)e(\256nal)g(item)f(of)h(the)g(KVD)g(list)g(in)g(the)g(root)f(of)-4
1216 y(the)e(processor)h(tree)f(must)h(be)f(\()p fq(1)p fv(,)i fp(N)5 b fn
(\()p fq(1)p fn(\))18 b(=)g fp(L)879 1223 y fm(total)954 1216 y fv(\))d(from)
g(the)g(\256rst)h(restriction)e(of)h(property)g(V1.)28 b(In)-4 1294 y(this)18
b(case,)i(we)f(can)f(simply)g(broadcast)g(the)g(\256nal)g(key)g(value)g(\()p
fq(1)p fv(\))f(to)h(select)g(all)g(the)h(tasks)f(such)h(that)-4 1372 y fp(L)
29 1379 y fm(sel)88 1372 y fn(=)14 b fp(L)173 1379 y fm(total)247 1372 y fv
(.)896 2836 y(100)p eop eos end TeXDict begin bos 300 @start /fa 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 25 25 25 25 25 25 25 25 25
25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25
25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25
25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25
25 25 25 25 25 25 25 25 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 25 25 25 25 25 25 25 25 25 25 25 25 25 0 0 0 25 25 25 25 0 25 25
25 25 25 25 25 0 0 25 0 25 25 25 25 25 25 25 25 0 25 25 0 25 25 25 25 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 25 0 0 0 0 25 25 0 25 0 0 0 0 0 0 0 0 0 25 0 0 25
25 0 25 0 0 0 0 /Courier 1000 655360 rf /fb 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30
30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30
30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30
30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30
30 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 30 30
30 30 30 30 30 30 30 30 30 30 30 0 0 0 30 30 30 30 0 30 30 30 30 30 30 30 0 0
30 0 30 30 30 30 30 30 30 30 0 30 30 0 30 30 30 30 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 30 0 0 0 0 30 30 0 30 0 0 0 0 0 0 0 0 0 30 0 0 30 30 0 30 0 0 0 0
/Courier 1000 786432 rf /fc df[<0018007800F001E003C007800F001F001E003E003C007C
007C007800F800F800F800F800F800F800F800F800F800F800F800F800F800F800F800F800F800
F800F800F800F800F800F800>13 37 16 38 37]56 dc[<F800F800F800F800F800F800F800F8
00F800F800F800F800F800F800F800F800F800F800F800F800F800F800F80078007C007C003C00
3E001E001F000F00078003C001E000F000780018>13 37 16 36 37]58 dc[<007C007C007C00
7C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C
007C00F800F800F800F001F001E003E003C0078007000E001C003800F000C000F00038001C000E
000700078003C003E001E001F000F000F800F800F8007C007C007C007C007C007C007C007C007C
007C007C007C007C007C007C007C007C007C007C007C007C007C007C007C>14 77 7 76 37]60
dc dfe /fd 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 15
19 32 29 29 58 48 19 19 19 29 33 15 19 15 16 29 29 29 29 29 29 29 29 29 29 19
19 33 33 33 29 54 42 39 42 42 39 36 45 45 23 29 45 39 55 42 45 36 45 42 32 39
42 42 58 42 42 39 19 16 19 34 29 19 29 32 26 32 26 19 29 32 16 19 32 16 48 32
29 32 32 26 23 19 32 29 42 29 29 26 23 13 23 30 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 19 29 29 10 29 29 29 29 16 29 29 19 19
32 32 0 29 29 29 15 0 31 20 19 29 29 29 58 58 0 29 0 19 19 19 19 19 19 19 19 0
19 19 0 19 19 19 58 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 58 0 17 0 0 0 0 39 45 58
19 0 0 0 0 0 42 0 0 0 16 0 0 16 29 42 32 0 0 0 0 /Times-Bold 1000 917504 rf
/fe df[<020002000200C218F2783AE00F800F803AE0F278C218020002000200>13 14 2 -1 18
]3 dc[<060F0F0E1E1E1C3C383830707060E0C040>8 17 1 -1 10]48 dc dfe /ff 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 10 12 15 15 24 23 10
10 10 15 16 7 10 7 8 15 15 15 15 15 15 15 15 15 15 8 8 16 16 16 13 27 21 19 19
21 18 16 21 21 10 11 21 18 26 21 21 16 21 19 16 18 21 21 27 21 21 18 10 8 10
14 15 10 13 15 13 15 13 10 15 15 8 8 15 8 23 15 15 15 15 10 11 8 15 15 21 15
15 13 14 6 14 16 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 10 15 15 5 15 15 15 15 5 13 15 10 10 16 16 0 15 15 15 7 0 13 10 10 13 13
15 29 29 0 13 0 10 10 10 10 10 10 10 10 0 10 10 0 10 10 10 29 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 26 0 8 0 0 0 0 18 21 26 9 0 0 0 0 0 19 0 0 0 8 0 0 8 15 21 15
0 0 0 0 /Times-Roman 1000 458752 rf /fg df[<0008001800300030003000600060006000
C000C000C0018001800180030003000600060006000C000C000C00180018001800300030003000
600060006000C000C000>13 33 2 8 18]61 dc[<001F8100F06201801607000E0E000E1C0004
380004300004700004600000E00000E00000E00000C007FEC00070C00070E00070E000E06000E0
7000E03001E00C06C003F840>24 23 2 0 27]71 dc[<07FF0000E00000E00000E00000E00001
C00001C00001C00001C0000380000380000380000380000700000700080700080700100E00100E
00300E00200E00601C01E0FFFFC0>21 23 1 0 24]76 dc[<07C01C20301060106020FFC0C000
C000C000C000C010402060C01F00>12 14 2 0 16]101 dc[<1F0006000600060006000C000C00
0C000C0018F01B181C08180838183018301830306030603160616062C022C03C>16 23 2 0 20]
104 dc[<0300038003000000000000000000000000001C002400460046008C000C001800180018
0031003100320032001C00>9 23 1 0 12]105 dc[<0018003800100000000000000000000000
0001C0022004300430086000600060006000C000C000C000C001800180018001806300E300C600
7800>13 29 0 6 14]106 dc[<1C3C22462382230346030603060306030C060C060C0C0C081A30
19E018001800300030003000FC00>16 20 0 6 18]112 dc[<071018D0307060706060C060C060
C06080C080C080C0C1C047803980018001800300030003001FC0>12 20 2 6 16]113 dc[<07C0
0C201870187038001E000FC003E000606060E060C0C0C1803F00>12 14 2 0 16]115 dc dfe
/fh df[<00200040008001000300060004000C000C001800180030003000300070006000600060
00E000E000E000E000E000E000E000E000E000E000E000E000E000E00060006000600070003000
30003000180018000C000C000400060003000100008000400020>11 50 4 13 19]40 dc[<8000
40002000100018000C000400060006000300030001800180018001C000C000C000C000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000C000C000C001C00180018001800300
03000600060004000C0018001000200040008000>11 50 3 13 19]41 dc[<0001800000018000
000180000001800000018000000180000001800000018000000180000001800000018000000180
0000018000000180000001800000018000FFFFFFFEFFFFFFFE0001800000018000000180000001
800000018000000180000001800000018000000180000001800000018000000180000001800000
0180000001800000018000>31 34 3 5 38]43 dc[<FFFFFFFEFFFFFFFE000000000000000000
0000000000000000000000000000000000000000000000FFFFFFFEFFFFFFFE>31 12 3 -6 38]
61 dc dfe /fi 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
8 11 14 17 17 28 26 11 11 11 17 19 8 11 8 9 17 17 17 17 17 17 17 17 17 17 9 9
19 19 19 15 31 24 22 22 24 20 18 24 24 11 13 24 20 30 24 24 18 24 22 18 20 24
24 31 24 24 20 11 9 11 16 17 11 15 17 15 17 15 11 17 17 9 9 17 9 26 17 17 17
17 11 13 9 17 17 24 17 17 15 16 7 16 18 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 11 17 17 6 17 17 17 17 6 15 17 11 11 18 18 0 17
17 17 8 0 15 12 11 15 15 17 33 33 0 15 0 11 11 11 11 11 11 11 11 0 11 11 0 11
11 11 33 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 30 0 9 0 0 0 0 20 24 30 10 0 0 0 0 0
22 0 0 0 9 0 0 9 17 24 17 0 0 0 0 /Times-Roman 1000 524288 rf /fj df[<07FFFF1F
FFFF3FFFFF30410040410080410080C30000820000820001820001820001060003060003070007
07000607000E07000E07001C03801C0380180300>24 21 2 0 28]25 dc[<70F8F8F870>5 5 4
0 14]58 dc[<70F8FCFC7404040404080810102040>6 15 4 10 14]59 dc[<00008000018000
0180000300000300000300000600000600000600000C00000C00000C0000180000180000180000
300000300000300000600000600000600000C00000C00000C00001800001800001800001800003
00000300000300000600000600000600000C00000C00000C000018000018000018000030000030
0000300000600000600000600000C00000C00000C00000>17 49 3 12 24]61 dc[<C0000000F0
0000003C0000000F00000003C0000000F00000003E0000000F80000001E0000000780000001E00
00000780000001E00000007800000078000001E00000078000001E00000078000001E000000F80
00003E000000F0000003C000000F0000003C000000F0000000C0000000>29 28 4 2 38]62 dc[
<00000080000000018000000001C000000003C000000003C000000007C00000000BC00000000B
C000000013C000000033C000000023C000000043C000000043E000000081E000000181E0000001
01E000000201E000000201E000000401E000000C01E000000801E000001001E000001FFFF00000
2000F000006000F000004000F000008000F000008000F000010000F000030000F000020000F000
040000F8000C0000F8001E0000F800FF800FFF80>33 35 2 0 37]65 dc[<007FFFFFC0000780
03C000078000C000078000C0000F0000C0000F0000C0000F000080000F000080001E000080001E
000080001E008080001E008000003C010000003C010000003C030000003C070000007FFE000000
780600000078060000007806000000F004000000F004000000F004010000F000020001E0000200
01E000020001E000040001E0000C0003C000080003C000180003C000300003C000700007C003F0
00FFFFFFE000>34 34 2 0 36]69 dc[<007FFFFFC000078003C000078000C000078000C0000F
0000C0000F0000C0000F000080000F000080001E000080001E000080001E008080001E00800000
3C010000003C010000003C030000003C070000007FFE0000007806000000780600000078060000
00F004000000F004000000F004000000F000000001E000000001E000000001E000000001E00000
0003C000000003C000000003C000000003C000000007C0000000FFFE000000>34 34 2 0 32]
70 dc[<007FFE000007C0000007800000078000000F0000000F0000000F0000000F0000001E00
00001E0000001E0000001E0000003C0000003C0000003C0000003C000000780000007800000078
00000078000000F0000000F0000000F0001000F0001001E0002001E0002001E0004001E0004003
C000C003C0008003C0018003C0078007C01F00FFFFFF00>28 34 2 0 33]76 dc[<007FC00001
FF0007C00003E00007C00005E00007C00005E00009E0000BC00009E0000BC00009E00013C00009
E00023C00011E00027800011E00047800011E00047800011E00087800021E0010F000020F0010F
000020F0020F000020F0040F000040F0041E000040F0081E000040F0081E000040F0101E000080
F0203C00008078203C00008078403C00008078803C000100788078000100790078000100790078
0001007A00780002007C00F00002007C00F00002003800F00006003800F0000F003001F000FFE0
203FFF00>48 34 2 0 47]77 dc[<007FC003FF0007C000780007C000600005E000200009E000
400009E000400008F000400008F000400010F800800010780080001078008000103C008000203C
010000203E010000201E010000201E010000400F020000400F020000400F020000400782000080
078400008007C400008003C400008003C400010001E800010001E800010001F800010000F80002
0000F0000200007000020000700006000070000F00002000FFE0002000>40 34 2 0 39]78 dc[
<00007F00000381C0000E0060003800380070003800E0001C01C0001E0380000E0700000E0F00
000F0E00000F1C00000F3C00000F3C00000F7800000F7800000F7800000FF000001EF000001EF0
00001EF000003CF000003CF000003CE0000078E0000078E00000F0F00000E0F00001E0F00003C0
700007807800070038000E001C0038000E0070000783C00000FE0000>32 36 3 1 37]79 dc[<
007FFFF0000007801C000007800F000007800700000F000380000F000380000F000380000F0003
80001E000780001E000780001E000780001E000F00003C000F00003C001E00003C003C00003C00
7000007801E000007FFF00000078000000007800000000F000000000F000000000F000000000F0
00000001E000000001E000000001E000000001E000000003C000000003C000000003C000000003
C000000007C0000000FFFC000000>33 34 2 0 31]80 dc[<0003F010000E0C20001802600020
01E0004000E000C000C0008000C0018000C0018000C00380008003800080038000000380000003
C0000001F0000001FE000000FFE000007FF000001FF8000001FC0000003C0000001C0000000E00
00000E0000000E0020000C0020000C0020000C0020000800600018006000100070002000700040
00C8008000C603000081FC0000>28 36 3 1 30]83 dc[<1FFFFFFE1E01E00E1801E0063001E0
062003C0062003C0064003C0044003C00440078004800780048007800400078000000F0000000F
0000000F0000000F0000001E0000001E0000001E0000001E0000003C0000003C0000003C000000
3C00000078000000780000007800000078000000F0000000F0000000F0000000F0000001F00000
FFFFC000>31 34 2 0 29]84 dc[<FFF8007FC00F80000F000F00000C000F000008000F000010
000F80001000078000200007800060000780004000078000800007800080000780010000078002
000007C002000003C004000003C00C000003C008000003C010000003C010000003C020000003E0
40000003E040000001E080000001E180000001E100000001E200000001E200000001E400000001
F800000000F800000000F000000000E000000000E000000000C000000000C0000000>34 35 3 1
28]86 dc[<00786001C4E00302E00601C00E01C01C01C03C01C0380380780380780380780380F0
0700F00700F00700F00708F00E10700E10701E1030262018C6200F01C0>21 21 2 0 26]97 dc[
<03C0003F80000380000380000380000700000700000700000700000E00000E00000E00000E00
001C00001C78001D8E001E07003C0700380380380380380780700780700780700780700780E00F
00E00F00E00F00E01E00E01C00601C0060380030700030C0000F0000>17 35 3 0 21]98 dc[<
003F0000E0800380C00701C00E03C01C03C03C00003C0000780000780000780000F00000F00000
F00000F000007000407000403001803802001C1C0007E000>18 21 2 0 21]99 dc[<007C0003
82000701000E01001C0100380100780200700400FFF800F00000F00000E00000E00000E00000E0
0000E00080E000807003003004001838000FC000>17 21 3 0 23]101 dc[<00F0000FE00000E0
0000E00000E00001C00001C00001C00001C000038000038000038000038000070000071F000721
8007C0C00F00E00F00E00E00E00E00E01C01C01C01C01C01C01C01C03803803803803807003807
04700708700E08700E08700610E006206003C0>22 35 3 0 28]104 dc[<00E000E001E000C000
00000000000000000000000000000000001E0023004380438083808380870007000E000E000E00
1C001C0038003820384070407040308031001E00>11 34 2 0 17]105 dc[<0000E00001E00001
E00000C0000000000000000000000000000000000000000000000000000000001E000023000043
80008380010380010380010380000700000700000700000700000E00000E00000E00000E00001C
00001C00001C00001C0000380000380000380000380000700000700000700070E000F0C000F180
006300003E0000>19 44 -1 10 20]106 dc[<01E01FC001C001C001C003800380038003800700
0700070007000E000E000E000E001C001C001C001C0038003800380038007000700070007100E2
00E200E200620064001C00>11 35 3 0 15]108 dc[<3C07E01F00461830618047201880C08740
1D00E087801E00E087801C00E087001C00E00E003801C00E003801C00E003801C00E003801C01C
007003801C007003801C007007001C007007043800E007083800E00E083800E00E083800E00610
7001C006203000C003C0>38 21 2 0 43]109 dc[<3C07C0461860472030874038878038870038
8700380E00700E00700E00700E00701C00E01C00E01C01C01C01C13801C2380382380382380184
7001883000F0>24 21 2 0 29]110 dc[<03C0F004631C04740E08780E08700708700708700F00
E00F00E00F00E00F00E00F01C01E01C01E01C01E01C03C03803803803803C07003C0E007218007
1E000700000700000E00000E00000E00000E00001C00001C00001C0000FFC000>24 31 -1 10
24]112 dc[<007E0000810003008002018006038006030006000007000007F80003FE0001FF00
003F00000780000380700380F00300F00300E002004004003018000FE000>17 21 2 0 23]115
dc[<01E0F006310C081A1C101A3C201C3C201C18201C0000380000380000380000380000700000
700000700000700860E010F0E010F0E020E170404230803C1F00>22 21 2 0 28]120 dc dfe
/fk df[<FFFFFFFCFFFFFFFC>30 2 4 -11 39]0 dc[<800002C0000660000C3000181800300C
00600600C003018001830000C600006C00003800003800006C0000C6000183000301800600C00C
006018003030001860000CC00006800002>23 24 8 0 39]2 dc[<03F0000FFC001FFE003FFF00
7FFF807FFF80FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC0FFFFC07FFF807FFF803FFF00
1FFE000FFC0003F000>18 20 3 -2 25]15 dc[<0000000C0000003C000000F0000003C000000F
0000003C000000F0000007C000001F00000078000001E00000078000001E00000078000000E000
0000780000001E0000000780000001E0000000780000001F00000007C0000000F00000003C0000
000F00000003C0000000F00000003C0000000C0000000000000000000000000000000000000000
0000000000000000000000007FFFFFF8FFFFFFFC>30 39 4 7 39]20 dc[<C0000000F0000000
3C0000000F00000003C0000000F00000003C0000000F80000003E0000000780000001E00000007
80000001E0000000780000001C00000078000001E00000078000001E00000078000003E000000F
8000003C000000F0000003C000000F0000003C00000070000000C0000000000000000000000000
00000000000000000000000000000000000000000000007FFFFFF8FFFFFFFC>30 39 4 7 39]
21 dc[<03F80001F80007FE000FFE001E3F801C0300380FC03001802003E06000804001F0C000
404000F9800040C0007F00002080003F00002080003E00002080001F00002080000F8000208000
1F80002080001FC00060400033E00040400061F000402000C0F800803001807E03801807003F8F
000FFE000FFC0003F00003F800>43 21 3 0 50]49 dc[<40000010C000003060000060600000
6060000060300000C0300000C0300000C018000180180001800C0003000C0003000C00030007FF
FE0007FFFE0003000C0003000C0003000C0001801800018018000180180000C0300000C0300000
60600000606000006060000030C0000030C000001980000019800000198000000F0000000F0000
000F00000006000000060000>28 36 0 1 29]56 dc[<FFFFFFFEFFFFFFFE0003000000030000
000300000003000000030000000300000003000000030000000300000003000000030000000300
000003000000030000000300000003000000030000000300000003000000030000000300000003
00000003000000030000000300000003000000030000000300000003000000010000>31 32 4 0
39]62 dc[<000F0038007000E001C001C001C001C001C001C001C001C001C001C001C001C001C0
01C001C001C001C0038007001E00F0001E000700038001C001C001C001C001C001C001C001C001
C001C001C001C001C001C001C001C001C000E000700038000F>16 49 4 12 25]102 dc[<F000
1E000700038001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001
C000E000700038000F0038007000E001C001C001C001C001C001C001C001C001C001C001C001C0
01C001C001C001C001C0038007001E00F000>16 49 4 12 25]103 dc[<C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0>2 49 6 12 14]106 dc dfe /fl 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 12 17 21 25 25 41 39 17 17 17 25 34 12 17 12 14 25 25 25 25 25
25 25 25 25 25 17 17 34 34 34 25 46 30 30 33 36 30 30 36 36 17 22 33 28 41 33
36 30 36 30 25 28 36 30 41 30 28 28 19 14 19 21 25 17 25 25 22 25 22 14 25 25
14 14 22 14 36 25 25 25 25 19 19 14 25 22 33 22 22 19 20 14 20 27 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 19 25 25 8 25 25 25 25
11 28 25 17 17 25 25 0 25 25 25 12 0 26 17 17 28 28 25 44 50 0 25 0 17 17 17
17 17 17 17 17 0 17 17 0 17 17 17 44 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 44 0 14 0
0 0 0 28 36 47 15 0 0 0 0 0 33 0 0 0 14 0 0 14 25 33 25 0 0 0 0 /Times-Italic
1000 786432 rf /fm 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 26 35 58 52 52 104 86 35 35 35 52 59 26 35 26 29 52 52 52 52 52 52 52 52
52 52 35 35 59 59 59 52 97 75 69 75 75 69 63 81 81 40 52 81 69 98 75 81 63 81
75 58 69 75 75 104 75 75 69 35 29 35 60 52 35 52 58 46 58 46 35 52 58 29 35 58
29 86 58 52 58 58 46 40 35 58 52 75 52 52 46 41 23 41 54 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 35 52 52 17 52 52 52 52 29 52 52
35 35 58 58 0 52 52 52 26 0 56 36 35 52 52 52 104 104 0 52 0 35 35 35 35 35 35
35 35 0 35 35 0 35 35 35 104 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 104 0 31 0 0 0 0
69 81 104 34 0 0 0 0 0 75 0 0 0 29 0 0 29 52 75 58 0 0 0 0 /Times-Bold 1000
1638400 rf /fn 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
12 17 28 25 25 50 41 17 17 17 25 28 12 17 12 14 25 25 25 25 25 25 25 25 25 25
17 17 28 28 28 25 46 36 33 36 36 33 30 39 39 19 25 39 33 47 36 39 30 39 36 28
33 36 36 50 36 36 33 17 14 17 29 25 17 25 28 22 28 22 17 25 28 14 17 28 14 41
28 25 28 28 22 19 17 28 25 36 25 25 22 20 11 20 26 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 17 25 25 8 25 25 25 25 14 25 25 17 17
28 28 0 25 25 25 12 0 27 17 17 25 25 25 50 50 0 25 0 17 17 17 17 17 17 17 17 0
17 17 0 17 17 17 50 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 50 0 15 0 0 0 0 33 39 50
16 0 0 0 0 0 36 0 0 0 14 0 0 14 25 36 28 0 0 0 0 /Times-Bold 1000 786432 rf
/fo 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 14 17
21 21 35 32 14 14 14 21 23 10 14 10 12 21 21 21 21 21 21 21 21 21 21 12 12 23
23 23 18 38 30 28 28 30 25 23 30 30 14 16 30 25 37 30 30 23 30 28 23 25 30 30
39 30 30 25 14 12 14 19 21 14 18 21 18 21 18 14 21 21 12 12 21 12 32 21 21 21
21 14 16 12 21 21 30 21 21 18 20 8 20 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 14 21 21 7 21 21 21 21 7 18 21 14 14 23 23 0 21
21 21 10 0 19 15 14 18 18 21 42 42 0 18 0 14 14 14 14 14 14 14 14 0 14 14 0 14
14 14 42 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 37 0 11 0 0 0 0 25 30 37 13 0 0 0 0 0
28 0 0 0 12 0 0 12 21 30 21 0 0 0 0 /Times-Roman 1000 655360 rf /fp 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 13 16 20 20 33 31 13
13 13 20 22 10 13 10 11 20 20 20 20 20 20 20 20 20 20 11 11 22 22 22 18 37 29
27 27 29 24 22 29 29 13 16 29 24 35 29 29 22 29 27 22 24 29 29 38 29 29 24 13
11 13 19 20 13 18 20 18 20 18 13 20 20 11 11 20 11 31 20 20 20 20 13 16 11 20
20 29 20 20 18 19 8 19 22 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 13 20 20 7 20 20 20 20 7 18 20 13 13 22 22 0 20 20 20 10 0 18
14 13 18 18 20 40 40 0 18 0 13 13 13 13 13 13 13 13 0 13 13 0 13 13 13 40 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 35 0 11 0 0 0 0 24 29 35 12 0 0 0 0 0 27 0 0 0 11
0 0 11 20 29 20 0 0 0 0 /Times-Roman 1000 629145 rf /fq 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 12 17 20 25 25 41 39 17 17 17 25 28
12 17 12 14 25 25 25 25 25 25 25 25 25 25 14 14 28 28 28 22 46 36 33 33 36 30
28 36 36 17 19 36 30 44 36 36 28 36 33 28 30 36 36 47 36 36 30 17 14 17 23 25
17 22 25 22 25 22 17 25 25 14 14 25 14 39 25 25 25 25 17 19 14 25 25 36 25 25
22 24 10 24 27 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 17 25 25 8 25 25 25 25 9 22 25 17 17 28 28 0 25 25 25 12 0 23 17 17 22 22
25 50 50 0 22 0 17 17 17 17 17 17 17 17 0 17 17 0 17 17 17 50 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 44 0 14 0 0 0 0 30 36 44 15 0 0 0 0 0 33 0 0 0 14 0 0 14 25 36
25 0 0 0 0 /Times-Roman 1000 786432 rf /fr 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 18 23 39 35 35 71 59 23 23 23 35 40 18 23 18 20 35
35 35 35 35 35 35 35 35 35 23 23 40 40 40 35 66 51 47 51 51 47 43 55 55 27 35
55 47 67 51 55 43 55 51 39 47 51 51 71 51 51 47 23 20 23 41 35 23 35 39 31 39
31 23 35 39 20 23 39 20 59 39 35 39 39 31 27 23 39 35 51 35 35 31 28 16 28 37
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 23 35 35
12 35 35 35 35 20 35 35 23 23 39 39 0 35 35 35 18 0 38 25 23 35 35 35 71 71 0
35 0 23 23 23 23 23 23 23 23 0 23 23 0 23 23 23 71 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 71 0 21 0 0 0 0 47 55 71 23 0 0 0 0 0 51 0 0 0 20 0 0 20 35 51 39 0 0 0 0
/Times-Bold 1000 1114112 rf end
 TeXDict begin @letter
%%Page: 101 115
 bop 75 490 a fm(Chapter)25 b(6)75 802 y(Experimental)g(Results)75 1113 y fq
(In)11 b(this)g(chapter)n(,)h(we)f(will)g(describe)h(our)f(experiments)f(with)
h(the)h(multilist)e(scheduling)i(model)f(and)g(show)75 1191 y(good)i(performa\
nce)e(results)i(for)g(the)f fl(PBFS-GPQ)j fq(and)e fl(PDC-WK)h fq(scheduling)
e(algorithms.)20 b(\(Since)12 b(for)75 1269 y(parallel)e(best-\256rst)f(searc\
h)i(\(BFS\))e(we)h(only)g(choose)g fl(PBFS-GPQ)i fq(and)e(for)f(parallel)h
(divide-and-conquer)75 1348 y(\(D&C\))16 b(we)g(only)g(choose)h fl(PDC-WK)p fq
(,)h(we)e(will)g(respectively)g(abbreviate)g(their)g(names)h(as)f fl(PBFS)i fq
(and)75 1426 y fl(PDC)13 b fq(in)g(this)f(chapter)g(for)g(simplicity)l(.\))18
b(In)12 b(Section)g(6.1,)i(we)e(will)h(describe)f(the)h(environment)e(in)h
(which)75 1504 y(we)i(have)f(run)g(our)g(experiments.)22 b(Then,)15 b(we)e
(will)h(present)f(two)g(application)g(examples,)i(the)f(Fibonacci)75 1582 y
(problem)j(and)h(the)g(set)g(covering)f(problem,)i(each)f(of)f(which)h(can)g
(use)h(either)e(the)h(PBFS)f(or)g(the)h(PDC)75 1661 y(scheduling)c(algorithm,)
g(and)g(we)g(will)g(report)f(our)g(experimental)g(results)i(for)e(these)h(app\
lications.)24 b(The)75 1739 y(two)12 b(application)g(examples)h(will)f(be)g
(described)g(in)h(Sections)f(6.2)h(and)f(6.3,)h(respectively)m(.)75 2039 y fr
(6.1)71 b(Envir)o(onment)75 2242 y fq(Our)12 b(multilist)g(scheduling)h(model)
g(is)g(currently)f(implemented)g(on)g(Nectar)h([6],)g(a)g(high-bandwidth)e
(and)75 2321 y(low-latency)j(computer)g(network)f(developed)i(at)f(Carnegie)h
(Mellon)f(University)l(.)25 b(The)15 b(Nectar)g(system)75 2399 y(consists)g
(of)f(a)g fl(Nectar)h(network)g fq(and)f(a)g(set)h(of)f(network)f(coprocessor\
s,)j(called)e fl(communication)f(accel-)75 2477 y(erator)j(boar)n(ds)f fq(\()
p fl(CABs)p fq(\),)i(as)e(illustrated)g(in)f(Figure)g(6.1.)27 b(W)l(e)15 b
(can)g(connect)g(hosts)g(\(e.g.,)i(workstations\))75 2555 y(to)f(Nectar)f(by)
h(attaching)g(them)f(to)h(CABs)h(via)f(VME)g(buses.)30 b(Each)17 b(CAB)f(is)g
(a)g(Sparc-based)g(network)75 2634 y(coprocessor)h(with)f(1.5)i(Mbytes)f(of)f
(local)h(memory)l(.)32 b(Since)17 b(each)g(CAB)g(has)h(local)e(memory)l(,)j
(we)e(can)75 2712 y(install)11 b(some)g(processes)i(on)e(a)g(CAB.)h(The)g(Nec\
tar)f(network)f(consists)i(of)f(100)g(Mbits/s)h(\256ber)n(-optic)f(links,)975
2836 y(101)p eop
%%Page: 102 116
 bop -4 1422 a @beginspecial 0.900000 @vscale 0.900000 @hscale @setspecial
%%BeginDocument: fig/nectar.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 1 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
612 792 0 FMBEGINPAGE
7 X
0 K
90 450 182.3 131.4 246.1 181.8 G
1 H
2 Z
0 X
90 450 182.3 131.4 246.1 181.8 A
7 X
90 450 115.2 68.4 244.8 183.6 G
0 X
90 450 115.2 68.4 244.8 183.6 A
0 F
(Nectar network) 201.6 233 T
(Nectar system ) 324.72 251 T
(HUB) 176.34 162.22 T
165.6 147.6 212.4 187.2 R
N
(HUB) 277.14 198.22 T
266.4 183.6 313.2 223.2 R
N
151.2 262.8 208.8 345.6 R
3 H
3 X
N
180 316.8 180 291.6 2 L
0 X
N
158.4 270 201.6 291.6 R
7 X
V
1 H
0 X
N
158.4 316.8 201.6 338.4 R
7 X
V
0 X
N
(CAB) 167.67 276.71 T
(HOST) 164.34 323.51 T
255.6 270 313.2 352.8 R
3 H
3 X
N
284.4 324 284.4 298.8 2 L
0 X
N
262.8 277.2 306 298.8 R
7 X
V
1 H
0 X
N
262.8 324 306 345.6 R
7 X
V
0 X
N
(CAB) 272.07 283.91 T
(HOST) 268.74 330.71 T
273.6 14.4 331.2 97.2 R
3 H
3 X
N
302.4 68.4 302.4 43.2 2 L
0 X
N
280.8 21.6 324 43.2 R
7 X
V
1 H
0 X
N
280.8 68.4 324 90 R
7 X
V
0 X
N
(HOST) 286.74 28.31 T
(CAB) 290.07 75.11 T
162 18 219.6 100.8 R
3 H
3 X
N
190.8 72 190.8 46.8 2 L
0 X
N
169.2 25.2 212.4 46.8 R
7 X
V
1 H
0 X
N
169.2 72 212.4 93.6 R
7 X
V
0 X
N
(HOST) 175.14 31.91 T
(CAB) 178.47 78.71 T
367.2 176.4 493.2 212.4 R
3 H
3 X
N
417.6 194.4 442.8 194.4 2 L
0 X
N
374.4 183.6 417.6 205.2 R
7 X
V
1 H
0 X
N
442.8 183.6 486 205.2 R
7 X
V
0 X
N
(CAB) 383.67 190.31 T
(HOST) 448.74 190.31 T
7.2 140.4 126 176.4 R
3 H
3 X
N
57.6 158.4 82.8 158.4 2 L
0 X
N
14.4 147.6 57.6 169.2 R
7 X
V
1 H
0 X
N
75.6 147.6 118.8 169.2 R
7 X
V
0 X
N
(HOST) 20.34 154.31 T
(CAB) 84.87 154.31 T
180 270 180 187.2 2 L
0.5 H
N
284.4 277.2 284.4 223.2 2 L
N
302.4 183.6 302.4 90 2 L
N
190.8 147.6 190.8 93.6 2 L
N
118.8 158.4 165.6 158.4 2 L
N
313.2 194.4 374.4 194.4 2 L
N
212.4 172.8 244.8 172.8 244.8 208.8 266.4 208.8 4 L
N
259.2 126 259.2 147.6 280.8 147.6 280.8 183.6 4 L
N
198 187.2 198 219.6 219.6 219.6 3 L
N
212.4 158.4 237.6 158.4 237.6 126 3 L
N
313.2 212.4 338.4 212.4 338.4 219.6 3 L
N
165.6 172.8 140.4 172.8 140.4 201.6 3 L
N
(NODE) 320.4 308.6 T
(NODE) 108 297.8 T
(NODE) 21.6 189.8 T
(NODE) 434.7 222.2 T
(NODE) 334.8 53.02 T
(NODE) 118.8 49.4 T
392.4 50.4 421.2 50.4 2 L
N
392.4 32.4 421.2 32.4 2 L
3 H
N
(VME bus) 424.8 27.8 T
(Fiber optic link) 424.94 45.8 T
FMENDPAGE
%%EndDocument
 @endspecial 622 1498 a fq(Figure)11 b(6.1:)18 b(The)13 b(Nectar)f(system.)-4
1706 y(plus)17 b(16)d fk(\002)f fq(16)k(crossbar)h(switches)g(called)f(HUBs.)
34 b(The)18 b(CAB)g(is)g(connected)f(to)g(a)h(HUB)f(via)h(a)f(\256ber)-4 1784
y(link.)26 b(In)15 b(our)g(experiments,)h(we)g(use)g(up)f(to)g(8)h(Sun4/330s.)
26 b(The)16 b(number)f(of)g(processors)h(is)f(not)g(lar)o(ge,)-4 1862 y(but)i
(is)i(suf)n(\256cient)f(to)g(validate)g(our)f(multilist)g(scheduling)h(approa\
ch.)35 b(In)18 b(order)f(to)h(make)g(the)f(results)-4 1941 y(directly)e(compa\
rable,)h(we)h(run)e(our)h(experiments)f(when)h(no)g(other)f(users)i(are)f(usi\
ng)f(these)i(machines.)-4 2019 y(As)c(for)g(software,)h fl(Nectarine)f fq([94\
])g(is)h(an)f(interface)g(package)h(that)f(provides)g(ef)o(\256cient)g(commun\
ication)-4 2097 y(primitives)h(for)h(programmers)f(to)h(access)i(the)e(Nectar)
h(runtime)e(system.)28 b(W)l(e)16 b(have)f(implemented)g(our)-4 2175 y(system)
d(using)h(Nectarine.)69 2321 y(Basically)m(,)21 b(the)e(implementation)f(of)h
(the)g(multilist)f(scheduling)h(model)g(follows)f(the)h(description)-4 2399 y
(presented)10 b(in)h(Chapter)f(4.)18 b(For)10 b(maintaining)f(physical)i(list\
s)g(\(PLs\),)g(we)g(choose)g(2-4)f(trees)h(instead)g(of)f(2-3)-4 2477 y(trees)
h(simply)h(because)g(2-4)f(trees)h(may)g(require)e(slightly)i(fewer)f(operati\
ons)g(of)g(recon\256guring)f(the)i(trees.)-4 2555 y(Note)f(that)h(for)f(all)h
(integer)f(constants)i fj(a)g fk(\025)h fq(2)e(and)g fj(b)h(>)h(a)e fq(the)g
(heights)g(of)f(all)h fj(a)p fq(-)p fj(b)f fq(trees)h(are)g(still)g fj(O)q fh
(\()p fq(log)c fj(n)p fh(\))-4 2634 y fq([3)o(],)15 b(where)e fj(n)i fq(is)f
(the)g(number)f(of)h(distinct)g(priority)f(keys;)i(thus,)g(properties)e(P1)h
(and)g(P2)g(in)g(Section)f(4.2)-4 2712 y(still)f(hold)h(for)f(all)h(such)g fj
(a)p fq(-)p fj(b)f fq(trees.)20 b(In)12 b(addition,)h(since)g(derived)g(PLs)g
(have)g(not)g(been)g(implemented,)f(we)896 2836 y(102)p eop
%%Page: 103 117
 bop 75 53 a fq(still)12 b(use)h(two)f(base)h(PLs)g(to)f(implement)g(the)g fl
(PDC)h fq(scheduling)g(algorithm.)75 1567 y @beginspecial @setspecial
%%BeginDocument: fig/glb-trees.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 4 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 14 /Times-Bold FMDEFINEFONT
1 12 /Times-Roman FMDEFINEFONT
2 12 /Times-Italic FMDEFINEFONT
3 10 /Times-Italic FMDEFINEFONT
612 792 0 FMBEGINPAGE
72 746 540 756 R
7 X
0 K
V
72 32.67 540 42.67 R
V
0 F
0 X
(GLB) 93.6 164.94 T
122.4 90 39.6 57.6 2 L
7 X
V
1 H
2 Z
4 X
N
122.4 90 93.6 57.6 2 L
N
122.4 90 201.6 57.6 2 L
7 X
V
4 X
N
122.4 90 147.6 57.6 2 L
N
338.4 90 255.6 57.6 2 L
7 X
V
4 X
N
338.4 90 309.6 57.6 2 L
N
338.4 90 417.6 57.6 2 L
7 X
V
4 X
N
338.4 90 363.6 57.6 2 L
N
97.38 90 151.2 118.8 R
0.5 H
N
1 F
0 X
(\050on) 107.35 101.77 T
2 F
( P) 123.34 101.77 T
3 F
(0) 133.66 98.77 T
1 F
(\051) 138.66 101.77 T
313.38 90 367.2 118.8 R
4 X
N
0 X
(\050on) 323.35 101.77 T
2 F
( P) 339.34 101.77 T
3 F
(4) 349.66 98.77 T
1 F
(\051) 354.66 101.77 T
342 118.8 232.5 147.6 2 L
1 H
4 X
N
123.01 118.8 232.5 147.6 2 L
7 X
V
4 X
N
205.38 147.6 259.2 176.4 R
0.5 H
N
0 X
(\050on) 215.35 159.37 T
2 F
( P) 231.34 159.37 T
3 F
(3) 241.66 156.37 T
1 F
(\051) 246.66 159.37 T
360 282.6 277.2 250.2 2 L
7 X
V
1 H
4 X
N
360 282.6 331.2 250.2 2 L
N
360 282.6 439.2 250.2 2 L
7 X
V
4 X
N
360 282.6 385.2 250.2 2 L
N
334.98 282.6 388.8 311.4 R
0.5 H
N
0 X
(\050on) 344.95 294.37 T
2 F
( P) 360.94 294.37 T
3 F
(0) 371.26 291.37 T
1 F
(\051) 376.26 294.37 T
298.8 262.8 421.2 336.6 R
2 H
N
0 F
(GLB) 305.25 320.02 T
180 282.6 151.2 250.2 2 L
1 H
4 X
N
180 282.6 205.2 250.2 2 L
N
154.98 282.6 208.8 311.4 R
0.5 H
N
1 F
0 X
(\050on) 164.95 294.37 T
2 F
( P) 180.94 294.37 T
3 F
(0) 191.26 291.37 T
1 F
(\051) 196.26 294.37 T
140.4 262.8 219.6 336.6 R
2 H
N
0 F
(GLB) 146.85 320.02 T
50.4 282.6 50.4 250.2 2 L
1 H
4 X
N
25.38 282.6 79.2 311.4 R
0.5 H
N
1 F
0 X
(\050on) 35.35 294.37 T
2 F
( P) 51.34 294.37 T
3 F
(0) 61.66 291.37 T
1 F
(\051) 66.66 294.37 T
10.8 262.8 90 336.6 R
2 H
N
0 F
(GLB) 17.25 320.02 T
1 F
(\050a\051) 43.2 202.4 T
(\050b\051) 172.8 202.4 T
(\050c\051) 356.4 202.4 T
(\050d\051) 219.6 9.8 T
75.6 72 385.2 189 R
N
21.6 28.8 57.6 57.6 R
0.5 H
N
2 F
(P) 35.15 38.59 T
3 F
(0) 42.48 35.59 T
75.6 28.8 111.6 57.6 R
N
2 F
(P) 89.15 38.59 T
3 F
(1) 96.48 35.59 T
129.6 28.8 165.6 57.6 R
N
2 F
(P) 143.15 38.59 T
3 F
(2) 150.48 35.59 T
183.6 28.8 219.6 57.6 R
N
2 F
(P) 197.15 38.59 T
3 F
(3) 204.48 35.59 T
237.6 28.8 273.6 57.6 R
N
2 F
(P) 251.15 38.59 T
3 F
(4) 258.48 35.59 T
291.6 28.8 327.6 57.6 R
N
2 F
(P) 305.15 38.59 T
3 F
(5) 312.48 35.59 T
345.6 28.8 381.6 57.6 R
N
2 F
(P) 359.15 38.59 T
3 F
(6) 366.48 35.59 T
399.6 28.8 435.6 57.6 R
N
2 F
(P) 413.15 38.59 T
3 F
(7) 420.48 35.59 T
259.2 221.4 295.2 250.2 R
N
2 F
(P) 272.75 231.2 T
3 F
(0) 280.08 228.2 T
313.2 221.4 349.2 250.2 R
N
2 F
(P) 326.75 231.2 T
3 F
(1) 334.08 228.2 T
367.2 221.4 403.2 250.2 R
N
2 F
(P) 380.75 231.2 T
3 F
(2) 388.08 228.2 T
421.2 221.4 457.2 250.2 R
N
2 F
(P) 434.75 231.2 T
3 F
(3) 442.08 228.2 T
133.2 221.4 169.2 250.2 R
N
2 F
(P) 146.75 231.2 T
3 F
(0) 154.08 228.2 T
187.2 221.4 223.2 250.2 R
N
2 F
(P) 200.75 231.2 T
3 F
(1) 208.08 228.2 T
32.4 221.4 68.4 250.2 R
N
2 F
(P) 45.95 231.2 T
3 F
(0) 53.28 228.2 T
FMENDPAGE
%%EndDocument
 @endspecial 251 1643 a(Figure)e(6.2:)18 b(GLB)13 b(trees)g(for)e(\(a\))h(one\
,)h(\(b\))e(two,)i(\(c\))f(four)m(,)h(and)f(\(d\))g(eight)g(processors.)148
1784 y(For)e(maintaining)f(virtual)h(lists,)i(we)e(use)h(the)g(advanced)f(glo\
bal)g(protocol)g(for)g(global)g(scheduling)g(and)75 1862 y(the)k(standard)g
(protocol)f(for)g(other)h(situations.)23 b(In)13 b(the)h(global)g(protocol,)g
(it)g(appears)g(that)g(the)g(degree)g(of)75 1941 y(the)g(global)g(load)g(bala\
ncer)g(\(GLB\))h(tree)f(should)g(be)g(moderately)g(lar)o(ge)g(because)h(for)f
(a)g(tree)g(with)g(small)75 2019 y(degree)e(\(say)g(2\))g(we)g(need)g(more)g
(GLB)h(processes)g(each)g(of)e(which)h(will)g(incur)g(some)g(overhead.)18 b
(In)12 b([90)o(],)75 2097 y(Sinha)e(and)h(Kale)g(also)g(implemented)f(similar)
g(global)g(scheduling)h(by)f(letting)g(one)h(load)g(balancer)f(handle)75 2175
y(at)15 b(least)h(8)f(processors)h(or)f(8)g(load)g(balancers,)i(i.e.,)h(they)
d(used)g(a)h(load)f(balancer)g(tree)g(with)g(a)h(degree)f(at)75 2254 y(least)
g(8.)25 b(But,)15 b(in)f(our)g(actual)h(implementation,)f(since)h(we)g(will)f
(use)h(at)f(most)h(8)f(processors,)i(we)f(let)f(the)75 2332 y(tree)f(degree)g
(be)g(4)g(so)g(that)g(we)g(can)g(conduct)g(experiments)g(for)f(a)h(GLB)h(tree)
f(with)f(more)h(than)g(one)g(level.)75 2410 y(Figure)f(6.2)h(shows)g(GLB)h
(trees)e(with)h fj(p)i fh(=)f fq(1,)f(2,)g(4,)h(and)e(8,)h(where)g(the)g(tree)
f(for)g(8)h(processors)g(requires)f(a)75 2488 y(two-level)g(GLB)h(tree)f(and)
g(others)g(require)g(only)g(a)g(one-level)g(GLB)h(tree.)148 2634 y(The)18 b
(GLB)g(processes)g(can)g(be)f(installed)h(either)e(on)i(host)f(processors)h
(or)f(on)g(CABs.)34 b(Since)17 b(most)75 2712 y(parallel)c(systems)h(do)g(not)
f(use)h(network)f(coprocessors)h(\(such)g(as)g(CABs\),)h(it)e(is)h(natural)f
(for)g(us)h(to)f(focus)975 2836 y(103)p eop
%%Page: 104 118
 bop -4 53 a fq(on)15 b(the)g(case)h(of)f(installing)g(GLB)h(processes)g(on)f
(host)h(processors.)27 b(However)n(,)17 b(we)e(will)g(also)h(examine)-4 132 y
(the)c(case)h(of)f(installing)g(them)g(on)g(CABs)h(in)g(order)e(to)h(see)h
(the)g(bene\256t)f(of)g(using)g(network)g(coprocessors.)69 277 y(For)d(the)g
(analysis)i(of)e(the)g(experimental)g(results)h(in)g(the)f(following)g(sectio\
ns,)i(we)f(de\256ne)g fl(speedup)g fq(and)-4 355 y fl(ef\256ciency)i fq(in)h
(De\256nition)f(6.1)h(below)l(.)20 b(The)13 b(time)f(taken)h(to)g(run)f(a)h
(job)f(on)h(one)f(processor)h(of)f(the)h(parallel)-4 433 y(version)f(is)h(gen\
erally)e(higher)h(than)h(that)f(for)g(a)g(sequential)h(program)e(because)j
(the)e(parallel)g(version)g(also)-4 512 y(includes)d(some)g(scheduling,)i(com\
munication,)e(and)g(GLB)h(overhead.)17 b(Therefore,)10 b(it)f(makes)h(more)f
(sense)-4 590 y(to)j(use)h(the)f(timing)f(results)i(for)f(the)g(sequential)g
(version)g(as)h(a)g(baseline.)117 938 y fn(De\256nition)e(6.1)25 b fl(Let)16 b
fj(T)536 945 y fg(seq)603 938 y fl(be)h(the)f(execution)g(time)g(for)g(the)g
(original)g(sequential)g(version)117 1016 y(of)j(a)f(pr)n(ogram.)36 b(Also,)
21 b(let)d fj(T)656 1023 y fg(p)694 1016 y fl(be)h(the)f(time)g(for)g(the)h
(parallel)f(version)h(of)f(the)g(pr)o(ogram)117 1095 y(on)d fj(p)h fl(pr)n
(ocessors.)27 b(W)l(e)15 b(de\256ne)g(the)g fp(SPEEDUP)g fl(as)h fj(S)1034
1102 y fg(p)1071 1095 y fh(=)h fj(T)1155 1102 y fg(seq)1206 1095 y fj(=T)1259
1102 y fg(p)1294 1095 y fl(and)d(the)h fp(EFFICIENCY)g fl(as)117 1173 y fj
(E)153 1180 y fg(p)188 1173 y fh(=)g fj(S)271 1180 y fg(p)290 1173 y fj(=p)p
fl(.)22 b(If)12 b(we)h(use)h fj(T)592 1180 y fi(1)623 1173 y fl(instead)f(of)
g fj(T)861 1180 y fg(seq)912 1173 y fl(,)h(we)f(call)g(these)g(measur)o(es)h
fp(SIMPLE)g(SPEEDUP)p fl(,)117 1251 y fj(S)150 1233 y fe(0)147 1264 y fg(p)
181 1251 y fh(=)g fj(T)262 1258 y fi(1)280 1251 y fj(=T)333 1258 y fg(p)353
1251 y fl(,)f(and)f fp(SIMPLE)i(EFFICIENCY)p fl(,)f fj(E)913 1233 y fe(0)910
1264 y fg(p)944 1251 y fh(=)h fj(S)1029 1233 y fe(0)1026 1264 y fg(p)1046 1251
y fj(=p)p fl(.)-4 1527 y fr(6.2)70 b(Fibonacci)-4 1726 y fq(In)14 b(this)g
(section)h(we)f(will)g(present)h(a)f(simple)h(Fibonacci)f(problem,)g(which)g
(will)g(allow)h(us)f(to)h(derive)f(the)-4 1804 y(average)k(overhead)h(for)f
(one)h(task)g(and)g(to)f(investigate)h(the)g(case)h(in)e(which)h(tasks)h(have)
f(a)g(minimum)-4 1883 y(number)11 b(of)h(operations.)-4 2621 y @beginspecial
@setspecial
%%BeginDocument: fig/fib.PS
/FMversion (2.0) def 
	/FMPrintInColor systemdict /colorimage known def
/FrameDict 190 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 

	} def 
/FMDEFINEFONT { 
	FrameDict begin
	findfont 
	ReEncode 
	2 index exch 
	definefont exch 
	scalefont 
	FMfonts 3 1 roll 
	put
	end 
	} bind def
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
	 statusdict /manualfeed true put
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for
	} def
/manualpapersize {
	papersizedict begin
		/Letter {} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall
	Encoding StandardEncoding eq 
	{
		/Encoding DiacriticEncoding def
	}if
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
(2.0) FMVERSION
1 1 612 792 0 1 1 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 9 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<8040201008040201> 8 1 setpattern } put
fillprocs 14 {<03060c183060c081> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 25 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 30 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 31 {} put
0 12 /Times-Roman FMDEFINEFONT
612 792 0 FMBEGINPAGE
313.2 136.8 187.2 79.2 2 L
0.5 H
2 Z
0 X
0 K
N
313.2 136.8 356.4 79.2 2 L
N
298.8 122.4 327.6 151.2 14.4 RR
7 X
V
0 X
N
0 F
(F\0503\051) 302.87 132.2 T
187.2 79.2 100.8 21.6 2 L
N
187.2 79.2 230.4 21.6 2 L
N
172.8 64.8 201.6 93.6 14.4 RR
7 X
V
0 X
N
(F\0502\051) 176.87 74.6 T
86.4 7.2 115.2 36 14.4 RR
7 X
V
0 X
N
(F\0501\051) 90.47 17 T
212.4 10.8 241.2 39.6 14.4 RR
7 X
V
0 X
N
(F\0500\051) 216.47 20.6 T
342 64.8 370.8 93.6 14.4 RR
7 X
V
0 X
N
(F\0501\051) 346.07 74.6 T
FMENDPAGE
%%EndDocument
 @endspecial 503 2699 a(Figure)g(6.3:)18 b(The)13 b(computation)e(tree)h(for)
g fj(F)6 b fh(\()p fq(3)p fh(\))p fq(.)896 2836 y(104)p eop
%%Page: 105 119
 bop 148 53 a fq(The)13 b(Fibonacci)f(problem)f(solves)i(the)g(function)e fj
(F)c fh(\()p fj(n)p fh(\))12 b fq(recursively)g(as)h(follows.)469 223 y fj
(F)6 b fh(\()p fj(n)p fh(\))14 b(=)640 136 y fc(8)640 174 y(<)640 248 y(:)698
187 y fq(1)459 b(if)12 b fj(n)i fh(=)f fq(0)g(or)f fj(n)i fh(=)f fq(1)698 266
y fj(F)6 b fh(\()p fj(n)11 b fk(\000)g fq(1)p fh(\))g(+)g fj(F)6 b fh(\()p fj
(n)11 b fk(\000)g fq(2)p fh(\))42 b fq(otherwise)75 390 y(W)l(e)14 b(can)g
(recursively)f(expand)h(this)g(computation)e(as)j(a)f(tree,)g(as)g(illustrate\
d)f(in)h(Figure)f(6.3)h(with)f fj(n)j fh(=)g fq(3.)75 469 y(This)c(can)g(be)f
(considered)g(as)h(a)g(D&C)f(algorithm.)17 b(The)12 b(program)e(can)h(be)h
(made)f(parallel)g(by)g(letting)g(each)75 547 y(node)i(in)h(the)f(computation)
g(tree)g(represent)g(a)h(thread.)21 b(After)12 b(the)i(node)f(for)g fj(F)6 b
fh(\()p fj(n)p fh(\))14 b fq(creates)g(two)f(children)75 625 y(for)f fj(F)7 b
fh(\()p fj(n)k fk(\000)h fq(1)p fh(\))h fq(and)g fj(F)6 b fh(\()p fj(n)12 b fk
(\000)f fq(2)p fh(\))p fq(,)j(the)f(node)g(is)g(suspended.)22 b(The)13 b(node)
h(becomes)f(executable)g(again)g(only)75 703 y(after)f(receiving)g(two)g(retu\
rned)f(values)i fj(F)6 b fh(\()p fj(n)11 b fk(\000)g fq(1)p fh(\))h fq(and)h
fj(F)6 b fh(\()p fj(n)11 b fk(\000)g fq(2)p fh(\))i fq(from)e(its)h(two)h(chi\
ldren.)148 848 y(W)l(e)j(will)g(use)h(PDC)f(as)g(the)g(scheduling)g(algorithm)
f(for)g(this)h(parallel)g(program.)28 b(As)16 b(described)g(in)75 927 y(Secti\
on)c(3.1.2,)i(each)f(node)f(initially)g(has)h(local)f(priority)f fj(\031)1121
934 y fg(L)1161 927 y fh(=)j fj(l)g fq(and)e(global)g(priority)f fj(\031)1653
934 y fg(G)1697 927 y fh(=)j fk(\000)p fj(l)p fq(,)f(where)75 1005 y fj(l)k fq
(is)f(the)g(level)g(of)f(the)h(node)g(in)g(the)f(tree.)29 b(When)16 b(the)g
(node)g(resumes)g(from)f(suspension)i(\(i.e.,)g(when)f(it)75 1083 y(receives)
10 b(two)f(returned)g(values)h(from)e(its)i(two)f(children\),)g fj(\031)1122
1090 y fg(G)1161 1083 y fq(of)g(the)h(node)f(becomes)h(a)g(very)f(low)g(numbe\
r)n(,)75 1161 y(say)j fk(\0001)p fq(.)17 b(The)12 b(reason)f(is)g(that)g(sinc\
e)h(the)f(grain)g(size)g(of)g(the)g(node)g(at)g(this)g(moment)g(becomes)g(ver\
y)g(small)75 1240 y(\(see)17 b(the)g(grain)f(size)i(de\256nition)e(in)h(Secti\
on)f(4.1.2.3\),)j(we)e(prefer)f(not)h(to)g(move)f(the)h(node)g(to)g(another)
75 1318 y(processor)m(.)449 1430 y 1127 2 v 78 x 2 79 v 474 1485 a(#)c(proces\
sors)f(\()p fj(p)p fq(\))952 1508 y 2 79 v 1021 1485 a(1)1114 1508 y 2 79 v
1183 1485 a(2)1276 1508 y 2 79 v 1345 1485 a(4)1438 1508 y 2 79 v 1495 1485 a
(8)1575 1508 y 2 79 v 449 1510 a 1127 2 v 78 x 2 79 v 474 1565 a(T)m(otal)g
(T)o(ime)g(\()p fj(T)6 b fq(\))952 1588 y 2 79 v 978 1565 a(53.88)1114 1588 y
2 79 v 1140 1565 a(27.61)1276 1588 y 2 79 v 1302 1565 a(13.54)1438 1588 y 2 79
v 1464 1565 a(6.84)1575 1588 y 2 79 v 449 1590 a 1127 2 v 78 x 2 79 v 474 1645
a(Simple)12 b(Speedup)g(\()p fj(S)861 1627 y fe(0)873 1645 y fq(\))952 1668 y
2 79 v 1003 1645 a(1.00)1114 1668 y 2 79 v 1165 1645 a(1.95)1276 1668 y 2 79 v
1327 1645 a(3.97)1438 1668 y 2 79 v 1464 1645 a(7.86)1575 1668 y 2 79 v 449
1670 a 1127 2 v 78 x 2 79 v 474 1725 a(Simple)g(Ef)o(\256ciency)g(\()p fj(E)
900 1707 y fe(0)911 1725 y fq(\))952 1748 y 2 79 v 1003 1725 a(1.00)1114 1748
y 2 79 v 1165 1725 a(0.98)1276 1748 y 2 79 v 1327 1725 a(0.99)1438 1748 y 2 79
v 1464 1725 a(0.98)1575 1748 y 2 79 v 449 1750 a 1127 2 v 75 1830 a(T)m(able)
f(6.1:)18 b(The)12 b(total)e(times)i(\(in)e(seconds\))i(and)f(simple)g(speedu\
ps/ef\256ciencies)g(for)f(parallel)h(Fibonacci.)148 2008 y(In)i(our)h(experim\
ent,)f(we)h(computed)g fj(F)6 b fh(\()p fq(26)p fh(\))14 b fq(with)f(the)h
(GLB)g(installed)g(on)f(a)h(CAB)h(so)f(that)f(we)h(may)75 2086 y(ignore)e(the)
h(GLB)g(overhead.)20 b(The)13 b(performance)f(results)g(are)h(shown)g(in)g
(T)m(able)g(6.1.)20 b(T)l(ask)14 b(creation)e(and)75 2164 y(scheduling)j(\(i.\
e.,)i(task)f(insertion)f(and)g(deletion\))g(dominate)f(most)i(of)f(the)g(comp\
utation)f(time)h(because)75 2242 y(other)e(operations)g(require)g(short)h(tim\
es,)g(for)f(the)g(following)g(reasons.)23 b(The)14 b(essential)g(computation)
f(for)75 2321 y(Fibonacci)d(consists)h(of)f(only)g(addition)f(and)i(assignmen\
t,)g(which)f(is)h(insigni\256cant)e(when)i(compared)e(with)75 2399 y(the)17 b
(overhead)f(of)g(task)h(scheduling.)31 b(In)16 b(addition,)i(we)e(also)h(obse\
rve)g(little)f(communication,)h(i.e.,)i(98)75 2477 y(sends/receives)g(\(about)
e(20)h(milliseconds)g(in)f(total\))h(for)f(each)h(processor)m(.)35 b(Since)18
b(computing)f fj(F)6 b fh(\()p fq(26)p fh(\))75 2555 y fq(requires)18 b(sched\
uling)g(nodes)g(589252)g(times)g(\(including)f(the)h(times)h(for)e(rescheduli\
ng)h(nodes)g(which)75 2634 y(resume)c(from)f(suspension\),)j(the)e(average)g
(time)g(for)f(one)h(task)g(scheduling)h(and)f(task)g(creation)g(is)g(about)75
2712 y(91)p fj(:)p fq(4)e(microseconds)g(\(53)p fj(:)p fq(88)f(seconds)i fj
(=)p fq(589252\).)975 2836 y(105)p eop
%%Page: 106 120
 bop 69 53 a fq(The)21 b(results)f(for)g(simple)g(speedup)h(also)f(show)h(tha\
t)f(the)h(mechanism)f(for)g(task)g(scheduling)h(and)-4 132 y(creation)12 b
(can)h(be)g(parallelized)g(well.)20 b(For)13 b(example,)g(the)g(simple)g(spee\
dup)g(for)g(8)g(processors)g(is)g(as)h(high)-4 210 y(as)e(7)p fj(:)p fq(86)g
(and)h(the)f(simple)g(ef)o(\256ciency)g(is)h(98%.)-4 477 y fr(6.3)70 b(Set)19
b(Covering)-4 675 y fq(Set)c(covering)f(is)i(an)f(important)f(application)h
(of)g(integer)f(linear)h(programming)f(in)h(the)g(area)g(of)g(mathe-)-4 753 y
(matical)f(optimization.)23 b(Balas)15 b(and)g(Padber)n(g)g([9)o(])f(surveyed)
h(many)f(real)g(applications)g(of)g(set)h(covering)-4 831 y(in)h(industry)h
(and)g(listed)f(over)h(10)g(types.)32 b(Examples)18 b(includes)f(airline)f
(crew)h(scheduling)g([22)o(],)h(truck)-4 909 y(delivery)10 b([10],)i(facility)
e(location)h([83],)h(switching)f(circuit)g(design)h([84)o(],)g(political)f
(districting)f([36],)i(and)-4 988 y(information)e(retrieval)i([30)o(].)69 1133
y(The)h fl(set)f(covering)h fq(problem)f(is)472 1263 y(min)p fk(f)p fj(cx)h fk
(j)h fj(Ax)f fk(\025)g fj(e;)8 b(x)868 1270 y fg(j)900 1263 y fh(=)13 b fq
(0)g(or)f(1)p fj(;)7 b fk(8)p fj(j)o(;)h fq(1)14 b fk(\024)g fj(j)i fk(\024)e
fj(n)p fk(g)-4 1393 y fq(where)c fj(A)h fq(is)g(an)h fj(m)7 b fk(\002)h fj
(n)j fq(matrix)g(of)f(zeros)i(and)f(ones,)h fj(c)f fq(is)g(a)g(row)g(vector)g
(of)f fj(n)i fq(positive)e(\(integer\))g(weights,)-4 1471 y(and)j fj(e)g fq
(is)g(a)h(column)e(vector)h(of)g fj(m)g fq(ones.)21 b(The)14 b(above)f(de\256\
nition)f(can)i(be)f(interpreted)f(as)i(follows:)19 b(Each)-4 1549 y(column)c
fj(a)187 1556 y fg(j)220 1549 y fq(of)h fj(A)f fq(is)h(associated)g(with)g
(a)f(set)i fj(M)860 1556 y fg(j)894 1549 y fq(\(associated)f(with)f(a)h(weigh\
t)f fj(c)1445 1556 y fg(j)1464 1549 y fq(\))g(with)g(the)h(following)-4 1628 y
(properties:)f(\(1\))9 b fj(M)340 1635 y fg(j)368 1628 y fq(is)h(a)g(subset)g
(of)f fj(M)19 b fh(=)14 b fk(f)p fq(1)p fj(;)8 b(:::;)e(m)p fk(g)p fq(;)k(\(2\
\))f(each)h(value)g fj(i)f fq(is)h(in)f fj(M)1423 1635 y fg(j)1452 1628 y fq
(if)g(and)g(only)h(if)f fj(a)1738 1635 y fg(ij)1781 1628 y fh(=)14 b fq(1.)-4
1706 y(The)c(set)h(covering)f(problem)f(is)i(to)f(\256nd)g(a)h(minimum-weight)
d(family)i(of)g(subsets)h fj(M)1474 1713 y fg(j)1492 1706 y fq(,)h(1)h fk(\
\024)h fj(j)j fk(\024)c fj(n)p fq(,)f(which)-4 1784 y(covers)17 b(all)g(eleme\
nts)g(of)g fj(M)5 b fq(.)33 b(For)16 b(example,)j(for)d(airline)h(crew)g(sche\
duling,)h fj(M)23 b fq(corresponds)17 b(to)g(the)-4 1862 y(set)f(of)g(\257igh\
t)g(legs)g(\(nonstop)g(\257ights)g(from)f(one)i(city)f(to)g(another\))f(to)h
(be)h(covered,)g(while)f(each)h(subset)-4 1941 y fj(M)43 1948 y fg(j)79 1941 y
fq(corresponds)g(to)g(a)h(possible)g(tour)f(\(starting)g(and)g(ending)g(at)h
(the)f(same)h(point)g(via)f(a)h(sequence)g(of)-4 2019 y(\257ight)13 b(legs\))
g(for)g(a)i(crew)l(.)23 b(Let)14 b(each)g(tour)g(be)g(associated)g(with)g(a)g
(cost.)23 b(The)14 b(problem)f(is)i(then)e(to)h(obtain)-4 2097 y(a)h(minimum-\
cost)g(collection)g(of)g(these)h(tours)f(to)h(cover)f(all)h(the)f(\257ight)g
(legs)h(in)g fj(M)5 b fq(.)28 b(According)15 b(to)h(the)-4 2175 y(survey)f
(in)h([9],)h(there)e(are)h(usually)g(hundreds)g(of)f(possible)i(tours)e(and)h
(thousands)h(of)e(\257ight)g(legs)i(to)e(be)-4 2254 y(covered.)j(In)12 b(our)
f(experiments,)i(we)f(chose)h(problems)f(with)g(200)g(possible)h(tours,)g(and)
f(with)g(1000)g(\257ight)-4 2332 y(legs)g(to)g(be)h(covered)f(\(the)g(same)h
(size)g(was)g(commonly)e(used)i(in)f([8,)g(35,)h(41]\).)69 2477 y(The)k(set)f
(covering)g(problem,)h(as)g(well)f(as)h(other)f(mathematical)g(optimization)f
(problems,)j(usually)-4 2555 y(requires)8 b(lar)n(ge-scale)i(branch-and-bound)
d(\(B&B\))h(tree)g(search)i(in)e(order)g(to)h(locate)g(the)f(optimal)g(soluti\
on.)-4 2634 y(W)l(e)j(have)g(found)g(that)g(these)h(searching)f(processes)h
(are)f(highly)g(dynamic)g(in)g(the)g(sense)h(that)f(it)g(is)h(dif)n(\256cult)
-4 2712 y(to)i(make)g(useful)g(a)h(priori)e(estimates)i(on)f(the)g(number)g
(of)g(nodes)g(the)h(search)f(tree)h(will)e(explore)h(and)h(the)896 2836 y(106)
p eop
%%Page: 107 121
 bop 75 53 a fq(sizes)12 b(of)f(the)g(nodes.)18 b(This)12 b(indeterminacy)l
(,)g(plus)f(the)h(possible)f(lar)o(ge)g(load)g(\257uctuations)g(in)g(the)g
(network,)75 132 y(makes)h(the)f(problem)g(of)g(solving)g(set)h(covering)f
(over)g(networks)g(extremely)g(dif)n(\256cult.)18 b(Since)11 b(both)g(D&C)75
210 y(and)20 b(BFS)g(can)g(be)g(used)h(to)f(implement)f(B&B)h(tree)g(search,)
j(the)d(set)g(covering)g(problem)f(is)h(a)g(good)75 288 y(application)12 b
(example)g(to)g(test)h(both)f(PBFS)g(and)g(PDC)g(scheduling)h(algorithms)e
(in)h(our)g(experiments.)148 433 y(The)j(most)g(advanced)g(technique)f([8)o
(,)i(35)o(,)f(41])g(for)e(solving)i(the)f(set)h(covering)f(problem,)h(as)g
(well)g(as)75 512 y(other)d(mathematical)g(optimization)f(problems)h([73)o
(],)h(is)f(based)h(on)g(the)f(following)f(two)h(steps:)135 719 y(1.)25 b(Conv\
ert)8 b(it)g(to)g(a)h(linear)f(programming)e(\(LP\))i(problem)f(and)i(\256nd)
f(the)g(optimum)f(LP)i(solution,)g(which)197 797 y(may)15 b(be)g(a)g(\257oati\
ng-point)f(number)l(.)27 b(Usually)m(,)16 b(a)g(LP)f(problem)f(can)h(be)h(sol\
ved)f(very)g(ef)n(\256ciently)m(.)197 875 y(For)j(example,)j(Karmarkar)c([55)
o(])i(proposed)f(a)h(polynomial)f(time)g(algorithm)g(to)g(solve)h(the)g(LP)
197 953 y(problem.)k(In)13 b(addition,)i(Sethi)f(and)g(Thompson)g(also)h(desi\
gned)f(a)g(specialized)h fl(pivot)f(and)g(pr)n(obe)197 1032 y(algorithm)p fq
(,)e(called)h fl(P)-6 b(AP)g(A)13 b fq([88],)f(to)g(solve)h(the)f(LP)h(proble\
m)e(ef)o(\256ciently)l(.)135 1158 y(2.)25 b(Apply)13 b(a)h(B&B)g(technique)f
(to)h(search)g(for)f(the)g(desired)h(optimal)f fl(integer)h fq(solution)f(sta\
rting)g(from)197 1236 y(the)h(optimal)g(LP)h(solution.)24 b(Since)14 b(the)h
(LP)g(solution)28 b(is)15 b(usually)f(close)h(to)g(the)f(integer)g(solution,)
197 1314 y(the)h(search)h(tree)f(will)g(be)g(much)g(smaller)g(than)g(that)g
(without)g(using)g(this)g(technique)g(of)g(utilizing)197 1392 y(the)d(LP)h
(solution.)148 1599 y(The)g(sequential)g(set)f(covering)g(program)g(for)f(our)
h(experiments)g(was)h(originally)e(written)h(by)g(Harche)75 1678 y(and)j(Thom\
pson)h([41)o(];)h(it)e(was)h(optimized)f(by)g(W)n(u)g fl(et)h(al.)27 b fq([10\
6)o(].)g(This)16 b(program)f(takes)g(the)h(LP)f(result)75 1756 y(generated)f
(by)g(the)g(P)l(AP)-5 b(A)14 b(package)h([88)o(])f(and)g(then)g(performs)g
(B&B)g(tree)g(search)1546 1738 y fi(1)1579 1756 y fq(interactively)l(.)24 b
(This)75 1834 y(program)11 b(is)i(described)f(as)h(follows:)135 2041 y(1.)25 b
(The)13 b(user)f(chooses)h(an)f(upper)f(bound)h(and)g(the)g(tree)g(search)g
(strategy)m(,)h(e.g.,)g(incomplete/complete)197 2119 y(tree)k(search)h(and)g
(depth-/best-\256rst)e(search.)34 b(Incomplete)17 b(tree)h(search)g(is)f(allo\
wed)h(because)g(in)197 2198 y(real)e(applications)f(getting)h(a)g(decent)g
(solution)g(quickly)f(is)h(sometimes)g(better)g(than)g(getting)f(the)197 2276
y(optimal)d(solution)g(in)g(an)g(enormous)g(length)g(of)g(time.)135 2402 y
(2.)25 b(The)14 b(program)e(uses)i(the)f(chosen)h(strategy)f(to)g(search)h
(for)e(all)i(the)f(solutions)g(with)g(costs)h(less)g(than)197 2480 y(the)f
(given)f(upper)h(bound.)19 b(The)13 b(program)f(will)g(report)g(the)h(minimum)
e(cost)j(of)e(these)h(solutions,)h(if)197 2559 y(one)e(exists.)75 2598 y 750 2
v 133 2629 a ff(1)150 2644 y fo(In)g(the)g(B&B)g(tree)g(search,)j(only)c(one)
h(column)g(of)g(data)h(in)e(the)i(set)f(covering)g(matrix)f(is)i(transferred)
f(between)g(any)h(two)75 2709 y(nodes)d(of)g(the)g(B&B)g(tree.)975 2836 y fq
(107)p eop
%%Page: 108 122
 bop 69 53 a fq(Regarding)9 b(parallelization)g(of)g(B&B)h(programs,)g(resear\
chers)g([63)o(,)h(66)o(])f(have)g(reported)f(the)g fl(speedup)-4 132 y(anomal\
y)h(phenomenon)h fq(in)g(which)g(the)g(speedup)h(is)f(irregular)f(\(sometimes)
h(superlinear)f(and)h(sometimes)-4 210 y(sublinear\))g(when)i(dif)n(ferent)f
(numbers)g(of)g(processors)g(are)h(used.)18 b(Since)12 b(the)h(order)e(of)h
(expanding)g(nodes)-4 288 y(may)20 b(vary)g(when)g(a)h(dif)n(ferent)f(number)
f(of)h(processors)h(is)g(used,)i(the)d(search)h(may)f(need)g(to)h(expand)-4
366 y(signi\256cantly)11 b(more)h(nodes)h(or)f(fewer)g(nodes.)69 512 y(Since)
20 b(this)g(anomalous)h(phenomenon)f(would)g(make)g(our)g(performance)f(analy\
sis)j(dif)n(\256cult,)g(we)-4 590 y(choose)11 b(cases)i(in)e(which)g(the)g
(phenomenon)g(does)h(not)f(occur)m(.)18 b(This)12 b(ensures)g(a)f(rigorous)g
(standard)g(in)g(our)-4 668 y(testing.)24 b(For)14 b(our)g(experiments,)h(we)
f(choose)h(a)g(problem)e(in)h(which)h(no)f(solution)g(will)g(be)h(found)e(in)
i(the)-4 746 y(search;)d(thus,)g(we)h(would)e(prune)h(no)g(nodes)g(at)g(runti\
me.)17 b(Thus,)d(the)e(expanded)g(tree)f(is)i(always)f(the)g(same)-4 825 y
(in)g(spite)g(of)g(dif)o(ferent)f(search)i(orders.)18 b(Note)12 b(that)g(the)
h(tree)f(shape)h(is)f(still)h(very)f(irregular)-5 b(.)69 970 y(Based)14 b(on)
g(the)g(above)g(criterion,)g(the)g(experiments)f(use)i(four)e(problems,)h(cal\
led)g(Problems)g(1,)g(2,)h(3,)-4 1048 y(and)d(4,)h(of)e(increasing)i(sizes.)
19 b(In)12 b(these)h(four)e(problems,)h(the)g(heights)h(of)f(the)g(search)h
(tree)f(are)g(30,)h(36,)f(66,)-4 1126 y(and)f(71,)h(respectively;)g(the)g(num\
bers)f(of)g(tree)h(nodes)f(are)h(1135,)g(2107,)g(7097,)g(and)g(23767,)g(respe\
ctively)l(.)69 1271 y(In)g(our)f(experiments)h(on)g(the)h(set)f(covering)g
(problem,)g(we)g(apply)g(both)g(PBFS)g(and)g(PDC)h(scheduling)-4 1350 y(algor\
ithms,)g(described)h(in)g(Sections)g(6.3.1)g(and)g(6.3.2,)h(respectively)m
(.)22 b(In)14 b(Section)f(6.3.3,)j(we)e(show)g(the)-4 1428 y(experimental)e
(results)h(obtained)g(by)g(installing)g(the)g(GLB)h(tree)e(on)i(CABs.)21 b
(In)13 b(addition,)g(we)g(also)h(apply)-4 1506 y(a)j(scheduling)f(algorithm,)
i(called)f fl(parallel)f(hybrid)i(sear)n(ch)g fq(\()p fl(PHS)p fq(\),)e(to)h
(the)g(set)g(covering)g(problem)f(in)-4 1584 y(Section)11 b(6.3.4.)19 b(This)
12 b(shows)h(how)e(easily)i(we)f(can)g(change)g(to)f(dif)o(ferent)g(task)h
(scheduling)g(algorithms)f(to)-4 1663 y(possibly)h(obtain)g(better)g(scheduli\
ng.)-4 1915 y fd(6.3.1)57 b(PDC)69 2097 y fq(T)m(able)13 b(6.2)i(lists)f(the)
f(performance)g(results)h(for)f(Problems)g(1)g(through)g(4)h(with)f(the)h(PDC)
g(scheduling)-4 2175 y(algorithm.)i(The)c(results)f(for)f(speedups)h(are)g
(also)g(depicted)g(in)g(Figure)f(6.4.)18 b(These)12 b(results)f(show)g(that)g
(the)-4 2254 y(speedup)g(increases)g(with)g(the)g(problem)f(size.)18 b(In)11 b
(particular)m(,)g(on)g(eight)g(processors,)h(the)f(lar)n(gest)g(problem)-4
2332 y(\(Problem)f(4\))h(has)h(a)g(very)f(good)g(speedup)h(of)g(7)p fj(:)p fq
(71.)17 b(This)12 b(is)g(because,)h(in)f(general,)g(the)f(number)g(of)g(nodes)
-4 2410 y fj(N)21 b fq(in)16 b(a)g(tree)g(grows)g(exponentially)f(with)h(the)
g(tree)g(height)g fj(h)p fq(.)29 b(For)16 b(example,)h(for)e(a)h(complete)g
(binary)-4 2488 y(tree,)d(when)g fj(h)h fq(increases)g(by)f(one,)h fj(N)k fq
(is)c(doubled.)20 b(Therefore,)14 b(on)f(the)g(average,)h(the)f(lar)o(ger)g
(a)g(problem,)-4 2567 y(the)f(more)g(independent)g(tasks)h(are)f(available;)g
(so)h(the)f(better)g(the)g(ef)o(\256ciency)m(.)69 2712 y(In)g(order)g(to)h
(understand)f(the)h(performance)f(results)h(of)f(T)m(able)h(6.2,)h(we)f(will)
f(examine)h(the)g(overhead)896 2836 y(108)p eop
%%Page: 109 123
 bop 386 14 a 1254 2 v 385 92 a 2 79 v 256 w 2 79 v 666 69 a fj(p)730 92 y 2
79 v 768 69 a fq(1\(seq\))916 92 y 2 79 v 998 69 a(1)1103 92 y 2 79 v 1185 69
a(2)1290 92 y 2 79 v 1372 69 a(4)1477 92 y 2 79 v 1546 69 a(8)1639 92 y 2 79 v
386 94 a 1254 2 v 385 172 a 2 79 v 256 w 2 79 v 666 148 a fj(T)730 172 y 2 79
v 780 148 a fq(16.01)916 172 y 2 79 v 967 148 a(16.29)1103 172 y 2 79 v 1179
148 a(8.51)1290 172 y 2 79 v 1365 148 a(4.66)1477 172 y 2 79 v 1527 148 a(3.0\
5)1639 172 y 2 79 v 642 174 a 998 2 v 385 250 a 2 79 v 410 227 a(Problem)12 b
(1)641 250 y 2 79 v 666 227 a fj(S)730 250 y 2 79 v 805 227 a fq(1.00)916 250
y 2 79 v 992 227 a(0.98)1103 250 y 2 79 v 1179 227 a(1.88)1290 250 y 2 79 v
1365 227 a(3.44)1477 250 y 2 79 v 1527 227 a(5.25)1639 250 y 2 79 v 642 252 a
998 2 v 385 328 a 2 79 v 256 w 2 79 v 666 305 a fj(E)730 328 y 2 79 v 805 305
a fq(1.00)916 328 y 2 79 v 992 305 a(0.98)1103 328 y 2 79 v 1179 305 a(0.94)
1290 328 y 2 79 v 1365 305 a(0.86)1477 328 y 2 79 v 1527 305 a(0.66)1639 328 y
2 79 v 386 330 a 1254 2 v 385 408 a 2 79 v 256 w 2 79 v 666 385 a fj(T)730 408
y 2 79 v 780 385 a fq(31.60)916 408 y 2 79 v 967 385 a(31.97)1103 408 y 2 79 v
1154 385 a(16.48)1290 408 y 2 79 v 1365 385 a(8.73)1477 408 y 2 79 v 1527 385
a(5.01)1639 408 y 2 79 v 642 410 a 998 2 v 385 487 a 2 79 v 410 463 a(Problem)
g(2)641 487 y 2 79 v 666 463 a fj(S)730 487 y 2 79 v 805 463 a fq(1.00)916 487
y 2 79 v 992 463 a(0.98)1103 487 y 2 79 v 1179 463 a(1.92)1290 487 y 2 79 v
1365 463 a(3.62)1477 487 y 2 79 v 1527 463 a(6.31)1639 487 y 2 79 v 642 488 a
998 2 v 385 565 a 2 79 v 256 w 2 79 v 666 541 a fj(E)730 565 y 2 79 v 805 541
a fq(1.00)916 565 y 2 79 v 992 541 a(0.99)1103 565 y 2 79 v 1179 541 a(0.96)
1290 565 y 2 79 v 1365 541 a(0.91)1477 565 y 2 79 v 1527 541 a(0.79)1639 565 y
2 79 v 386 567 a 1254 2 v 385 645 a 2 79 v 256 w 2 79 v 666 621 a fj(T)730 645
y 2 79 v 755 621 a fq(176.58)916 645 y 2 79 v 942 621 a(177.36)1103 645 y 2 79
v 1154 621 a(89.24)1290 645 y 2 79 v 1341 621 a(45.79)1477 645 y 2 79 v 1502
621 a(24.64)1639 645 y 2 79 v 642 646 a 998 2 v 385 723 a 2 79 v 410 700 a
(Problem)g(3)641 723 y 2 79 v 666 700 a fj(S)730 723 y 2 79 v 805 700 a fq
(1.00)916 723 y 2 79 v 992 700 a(1.00)1103 723 y 2 79 v 1179 700 a(1.98)1290
723 y 2 79 v 1365 700 a(3.86)1477 723 y 2 79 v 1527 700 a(7.17)1639 723 y 2 79
v 642 725 a 998 2 v 385 801 a 2 79 v 256 w 2 79 v 666 778 a fj(E)730 801 y 2
79 v 805 778 a fq(1.00)916 801 y 2 79 v 992 778 a(1.00)1103 801 y 2 79 v 1179
778 a(0.99)1290 801 y 2 79 v 1365 778 a(0.96)1477 801 y 2 79 v 1527 778 a(0.9\
0)1639 801 y 2 79 v 386 803 a 1254 2 v 385 881 a 2 79 v 256 w 2 79 v 666 858 a
fj(T)730 881 y 2 79 v 755 858 a fq(464.45)916 881 y 2 79 v 942 858 a(466.74)
1103 881 y 2 79 v 1129 858 a(233.38)1290 881 y 2 79 v 1316 858 a(118.00)1477
881 y 2 79 v 1502 858 a(60.24)1639 881 y 2 79 v 642 883 a 998 2 v 385 959 a 2
79 v 410 936 a(Problem)g(4)641 959 y 2 79 v 666 936 a fj(S)730 959 y 2 79 v
805 936 a fq(1.00)916 959 y 2 79 v 992 936 a(1.00)1103 959 y 2 79 v 1179 936 a
(1.99)1290 959 y 2 79 v 1365 936 a(3.94)1477 959 y 2 79 v 1527 936 a(7.71)
1639 959 y 2 79 v 642 961 a 998 2 v 385 1038 a 2 79 v 256 w 2 79 v 666 1014 a
fj(E)730 1038 y 2 79 v 805 1014 a fq(1.00)916 1038 y 2 79 v 992 1014 a(1.00)
1103 1038 y 2 79 v 1179 1014 a(1.00)1290 1038 y 2 79 v 1365 1014 a(0.98)1477
1038 y 2 79 v 1527 1014 a(0.96)1639 1038 y 2 79 v 386 1039 a 1254 2 v 75 1144
a(T)m(able)21 b(6.2:)35 b(Measured)21 b(performance)e(results)i(for)f(the)h
(PDC)f(scheduling)h(algorithm)f(\()p fj(T)5 b fq(:)35 b(T)o(ime)20 b(in)75
1222 y(seconds,)14 b fj(S)s fq(:)j(speedup,)c(and)g fj(E)s fq(:)18 b(ef)o(\
\256ciency\).)456 1275 y
 17557743 13945733 11057585 18550456 28615328 32496189 startTexFig
%%BeginDocument: fig/dfs-s.ps
/spoofdict 25 dict def
spoofdict begin
/bdf {bind def} bind def
/ldf {load def} bdf
/xdf {exch def} bdf
/M /moveto ldf
/RM /rmoveto ldf
/L /lineto ldf
/RL /rlineto ldf
/dbeg {gsave dup scale 2 setlinecap /s 6 def} bdf
/dplus {dbeg /s2 s 2 div def 0 s2 RM 0 s neg RL
  s2 s2 RM s neg 0 RL stroke grestore} bdf
/dcross {dbeg /s2 s 1.414 div def s2 2 div neg dup RM s2 s2 RL
  0 s2 neg RM s2 neg s2 RL stroke grestore} bdf
/dbox {dbeg /s2 s 1.414 div def s2 2 div neg dup RM s2 0 RL
   0 s2 RL s2 neg 0 RL 0 s2 neg RL stroke grestore} bdf
/ddiamond {dbeg /s2 s 2 div def 0 s2 RM s2 neg s2 neg RL
  s2 s2 neg RL s2 s2 RL s2 neg s2 RL stroke grestore} bdf
/dstar {dup gsave exch dplus grestore dcross} bdf
/ddot {dbeg currentpoint s 2 div 0 360 arc fill grestore} bdf
/pnt {gsave 1 setlinecap M 0 0 RL stroke grestore} bdf
/xt {gsave 4 2 roll translate exch rotate} bdf
/ltext {xt 0 0 M show grestore} bdf
/rtext {xt dup stringwidth pop neg 0 M show grestore} bdf
/ctext {xt dup stringwidth pop 2 div neg 0 M show grestore} bdf
2 setlinecap
0 setgray
216 306 M
1 setlinewidth
[] 0 setdash
216 486 L
stroke
219.6 306 M
216 306 L
stroke
/Helvetica-BoldOblique findfont 10 scalefont setfont
211.555 304 0 (0.00) rtext
219.6 326 M
216 326 L
stroke
211.555 324 0 (1.00) rtext
219.6 346 M
216 346 L
stroke
211.555 344 0 (2.00) rtext
219.6 366 M
216 366 L
stroke
211.555 364 0 (3.00) rtext
219.6 386 M
216 386 L
stroke
211.555 384 0 (4.00) rtext
219.6 406 M
216 406 L
stroke
211.555 404 0 (5.00) rtext
219.6 426 M
216 426 L
stroke
211.555 424 0 (6.00) rtext
219.6 446 M
216 446 L
stroke
211.555 444 0 (7.00) rtext
219.6 466 M
216 466 L
stroke
211.555 464 0 (8.00) rtext
219.6 486 M
216 486 L
stroke
211.555 484 0 (9.00) rtext
/Helvetica-BoldOblique findfont 12 scalefont setfont
180.095 494 90 (Speedup) rtext
216 306 M
396 306 L
stroke
216 309.6 M
216 306 L
stroke
/Helvetica-BoldOblique findfont 10 scalefont setfont
216 296 0 (0) ctext
236 309.6 M
236 306 L
stroke
236 296 0 (1) ctext
256 309.6 M
256 306 L
stroke
256 296 0 (2) ctext
276 309.6 M
276 306 L
stroke
276 296 0 (3) ctext
296 309.6 M
296 306 L
stroke
296 296 0 (4) ctext
316 309.6 M
316 306 L
stroke
316 296 0 (5) ctext
336 309.6 M
336 306 L
stroke
336 296 0 (6) ctext
356 309.6 M
356 306 L
stroke
356 296 0 (7) ctext
376 309.6 M
376 306 L
stroke
376 296 0 (8) ctext
396 309.6 M
396 306 L
stroke
396 296 0 (9) ctext
/Helvetica-BoldOblique findfont 12 scalefont setfont
396 282 0 (# processors) rtext
236 326 M
[.5 3] 0 setdash
376 466 L
stroke
/Times-Roman findfont 12 scalefont setfont
380 470 0 (\(ideal\)) ltext
396 486 pnt
216 306 pnt
385.336 410.98 0 (Problem 1) ltext
0.5 setlinewidth
[] 0 setdash
236 325.66 M 1 dplus
256 343.62 M 1 dplus
296 374.72 M 1 dplus
376 410.98 M 1 dplus
236 325.66 M
1 setlinewidth
256 343.62 L
296 374.72 L
376 410.98 L
stroke
385.336 432.14 0 (Problem 2) ltext
0.5 setlinewidth
236 325.66 M 1 dbox
256 344.34 M 1 dbox
296 378.4 M 1 dbox
376 432.14 M 1 dbox
236 325.66 M
1 setlinewidth
256 344.34 L
296 378.4 L
376 432.14 L
stroke
385.336 449.32 0 (Problem 3) ltext
0.5 setlinewidth
236 325.92 M 1 ddiamond
256 345.58 M 1 ddiamond
296 383.12 M 1 ddiamond
376 449.32 M 1 ddiamond
236 325.92 M
1 setlinewidth
256 345.58 L
296 383.12 L
376 449.32 L
stroke
385.336 460.2 0 (Problem 4) ltext
0.5 setlinewidth
236 325.9 M 1 ddot
256 345.8 M 1 ddot
296 384.72 M 1 ddot
376 460.2 M 1 ddot
236 325.9 M
1 setlinewidth
256 345.8 L
296 384.72 L
376 460.2 L
stroke
showpage
end
%%EndDocument
  endTexFig 512 2278 a(Figure)12 b(6.4:)18 b(Speedups)12 b(for)g(Problems)f
(1-4)h(with)g(PDC.)611 2357 y 804 2 v 610 2435 a 2 79 v 256 w 2 79 v 954 2412
a(1)1003 2435 y 2 79 v 1091 2412 a(2)1140 2435 y 2 79 v 1228 2412 a(4)1277
2435 y 2 79 v 1365 2412 a(8)1414 2435 y 2 79 v 611 2437 a 804 2 v 610 2515 a 2
79 v 635 2491 a(Problem)g(1)866 2515 y 2 79 v 891 2491 a(0.09)1003 2515 y 2 79
v 1028 2491 a(0.04)1140 2515 y 2 79 v 1165 2491 a(0.02)1277 2515 y 2 79 v 1302
2491 a(0.01)1414 2515 y 2 79 v 611 2517 a 804 2 v 610 2595 a 2 79 v 635 2571 a
(Problem)g(2)866 2595 y 2 79 v 891 2571 a(0.18)1003 2595 y 2 79 v 1028 2571 a
(0.08)1140 2595 y 2 79 v 1165 2571 a(0.04)1277 2595 y 2 79 v 1302 2571 a(0.02)
1414 2595 y 2 79 v 611 2596 a 804 2 v 75 2701 a(T)m(able)c(6.3:)16 b(A)m(vera\
ged)8 b(scheduling)g(overhead)g(in)g(seconds)h(when)g(using)f(the)g(PDC)h(sch\
eduling)f(algorithm.)975 2836 y(109)p eop
%%Page: 110 124
 bop -4 53 a fq(and)20 b(the)h(idle)g(time)f(for)g(Problems)g(1)h(and)g(2)f
(which)h(are)g(representative)f(for)g(our)g(analysis.)44 b(There)-4 132 y(are)
15 b(two)g(main)h(kinds)f(of)h(overhead:)24 b(the)15 b(overhead)g(for)g(sched\
uling)h(each)g(task)g(locally)f(\(without)g(any)-4 210 y(communication\))9 b
(and)h(the)h(overhead)f(for)g(communication.)17 b(T)m(able)10 b(6.3)h(shows)h
(the)e(average)h(scheduling)-4 288 y(overhead)17 b(on)i(each)f(processor)h
(for)e(Problems)h(1)g(and)g(2.)36 b(The)19 b(overhead)f(for)f(scheduling)i
(each)f(task)-4 366 y(locally)d(is)h(about)g(80)f(microseconds)h(\()p fh(=)i
fq(0)p fj(:)p fq(09)d(seconds)i fj(=)p fq(1135\))e(from)g(the)h(table.)28 b
(Since)16 b(the)g(average)-4 445 y(task)22 b(computation)f(time)h(is)g(about)
g(15)f(milliseconds)h(\(which)g(is)g(16.01)g(seconds/1135)g(tasks\),)k(the)-4
523 y(scheduling)18 b(overhead)g(is)g(less)h(than)f(1%.)37 b(Since)18 b(we)g
(always)h(search)g(the)f(same)h(complete)f(tree,)i(the)-4 601 y(overhead)12 b
(for)f(scheduling)h(local)h(tasks)g(can)f(be)h(distributed)e(over)h(processor\
s)h(nearly)f(evenly)m(.)469 698 y 929 2 v 468 777 a 2 79 v 256 w 2 79 v 750
753 a(height)898 777 y 2 79 v 949 753 a(1)998 777 y 2 79 v 1073 753 a(2)1122
777 y 2 79 v 1198 753 a(4)1247 777 y 2 79 v 1347 753 a(8)1396 777 y 2 79 v 469
778 a 929 2 v 468 856 a 2 79 v 494 833 a(Problem)f(1)724 856 y 2 79 v 824 833
a(30)898 856 y 2 79 v 924 833 a(15)998 856 y 2 79 v 1024 833 a(188)1122 856 y
2 79 v 1148 833 a(405)1247 856 y 2 79 v 1273 833 a(1154)1396 856 y 2 79 v 469
858 a 929 2 v 468 936 a 2 79 v 494 913 a(Problem)g(2)724 936 y 2 79 v 824 913
a(36)898 936 y 2 79 v 949 913 a(8)998 936 y 2 79 v 1024 913 a(265)1122 936 y 2
79 v 1148 913 a(502)1247 936 y 2 79 v 1273 913 a(1366)1396 936 y 2 79 v 469
938 a 929 2 v 171 1042 a(T)m(able)h(6.4:)19 b(Number)11 b(of)h(sends/receive)
h(pairs)f(for)g(the)g(PDC)g(scheduling)h(algorithm.)69 1181 y(T)m(o)j(analyze)
h(the)f(communication)g(overhead,)h(we)g(measured)f(the)g(number)g(of)g(sends\
/receives)h(for)-4 1259 y(Problems)g(1)h(and)g(2;)j(results)d(are)g(shown)h
(in)f(T)l(able)h(6.4.)36 b(Since)18 b(each)g(send/receive)g(is)h(roughly)e
(200)-4 1337 y(microseconds)12 b([27],)h(we)g(can)g(roughly)f(calculate)g(the)
h(aggregate)g(communication)e(overhead)i(from)f(the)-4 1416 y(table.)19 b(For)
12 b(PDC,)h(the)g(ratio)g(of)f(the)h(number)f(of)g(sends/receives)i(to)e(the)
h(product)f(of)h(the)g(tree)f(height)h(and)-4 1494 y(the)j(number)g(of)g(proc\
essors)h(is)g(close)g(to)f(a)h(constant)f(between)h(3)g(and)f(5.)31 b(This)17
b(result)f(is)h(close)g(to)g(the)-4 1572 y(theoretical)11 b(communication)h
(cost)g([105],)g(which)g(is)h fj(O)r fh(\()p fj(ph)p fh(\))p fq(.)69 1717 y
(Recall)h(the)f(advanced)h(global)f(protocol)g(in)g(Section)g(4.1.2.3,)i(whic\
h)f(requires)f(a)h(second)g(broadcast)-4 1796 y(during)e(each)h(load)g(balanc\
ing)g(round)g(if)f(the)h(total)g(load)g(in)g fk(>)1088 1777 y fe(0)1088 1808 y
fi(1)1120 1796 y fq(is)g(small.)21 b(In)13 b(our)f(experiments,)i(we)f(only)
-4 1874 y(need)c(the)h(second)h(broadcast)e(at)h(most)g(once)g(for)f(each)h
(run.)17 b(This)11 b(result)e(is)h(close)h(to)e(the)h(theory)f(in)h(Section)
-4 1952 y(4.1.2.3.)69 2097 y(Processors)16 b(become)g(idle)h(mainly)e(in)i
(situations)f(which)g(lack)h(parallelism)e(or)h(have)h(long)f(latency)-4 2175
y(for)11 b(responding)i(to)f(task)h(requests.)20 b(In)12 b(our)g(implementati\
on,)g(we)h(use)h(a)e(scheme)i(in)e(which)h(a)g(processor)-4 2254 y(schedules)
k(the)g(next)g(task)g(while)g(executing)f(the)h(current)f(task.)32 b(Since)17
b(the)g(task)g(granularity)f(is)h(quite)-4 2332 y(lar)n(ge)c(when)f(compared)
g(with)g(the)g(latency)h(of)e(task)i(request)f(\(each)h(task)f(request)h(requ\
iring)e(about)h(3)g(to)h(5)-4 2410 y(sends/receives\),)f(processors)g(become)
f(idle)g(mainly)g(due)h(to)f(lack)h(of)f(parallelism.)17 b(Note)12 b(that)f
(if)g(the)g(task)-4 2488 y(request)i(latency)g(is)h(very)f(lar)o(ge)h(\(e.g.,)
h(when)e(using)h(a)f(wide-area)g(network\),)g(our)g(system)h(can)g(schedule)
-4 2567 y(several)e(tasks)h(at)g(a)f(time)g(so)h(that)f(the)g(latency)h(can)f
(be)h(hidden.)69 2712 y(T)m(able)c(6.5)h(shows)g(the)g(idle)f(times)h(for)e
(Problems)h(1)h(and)f(2.)18 b(In)9 b(general,)h(the)f(more)g(processors)h(tha\
t)g(are)896 2836 y(110)p eop
%%Page: 111 125
 bop 611 38 a 804 2 v 610 116 a 2 79 v 256 w 2 79 v 954 93 a fq(1)1003 116 y 2
79 v 1091 93 a(2)1140 116 y 2 79 v 1228 93 a(4)1277 116 y 2 79 v 1365 93 a
(8)1414 116 y 2 79 v 611 118 a 804 2 v 610 196 a 2 79 v 635 173 a(Problem)12 b
(1)866 196 y 2 79 v 891 173 a(0.00)1003 196 y 2 79 v 1028 173 a(0.30)1140 196
y 2 79 v 1165 173 a(0.47)1277 196 y 2 79 v 1302 173 a(0.76)1414 196 y 2 79 v
611 198 a 804 2 v 610 276 a 2 79 v 635 253 a(Problem)g(2)866 276 y 2 79 v 891
253 a(0.00)1003 276 y 2 79 v 1028 253 a(0.35)1140 276 y 2 79 v 1165 253 a(0.6\
1)1277 276 y 2 79 v 1302 253 a(0.76)1414 276 y 2 79 v 611 278 a 804 2 v 156
382 a(T)l(able)h(6.5:)18 b(A)l(verage)12 b(idle)h(times)f(\(in)g(seconds\))h
(when)f(using)g(the)h(PDC)f(scheduling)g(algorithm.)75 530 y(used,)i(the)f
(more)f(likely)g(they)h(are)g(to)g(become)f(idle.)20 b(For)12 b(the)h(trees)g
(in)g(the)g(set)g(covering)f(problem)g(of)h(our)75 609 y(experiments,)h(the)f
(average)g(branching)g(factor)f(\(de\256ned)h(as)h fj(N)1205 590 y fi(1)p fg
(=h)1262 609 y fq(\))f(is)g(very)g(low)m(,)h(about)f(1.1)g(to)g(1.3.)22 b(So,)
75 687 y(for)12 b(example,)i(when)f(we)g(initially)g(execute)g(the)g(part)g
(of)g(the)g(tree)g(near)g(the)g(root,)g(not)g(much)g(parallelism)75 765 y(can)
g(be)f(exploited.)19 b(When)12 b(the)g(number)g(of)g(processors)h(increases,)
h(we)e(expect)h(the)f(maximum)g(value)h(of)75 843 y(the)f(average)g(idle)f
(time)h(to)f(be)h(close)g(to)g(the)g(execution)f(time)h(of)f(all)h(the)g(node\
s)g(on)g(the)f(critical)g(path)h(from)75 922 y(the)k(root)g(to)g(the)g(leaves\
.)31 b(Since)16 b(the)g(number)g(of)f(nodes)i(on)f(the)g(critical)g(path)g
(\(about)g fj(O)r fh(\()p fj(h)p fh(\))p fq(\))f(is)i(small)75 1000 y(compare\
d)12 b(with)g(the)h(total)f(number)g(of)h(nodes)g(\()p fj(N)t fq(\),)g(the)g
(idle)f(time)h(for)e(the)i(PDC)g(scheduling)f(algorithm)75 1078 y(can)h(be)f
(negligibly)g(small.)75 1349 y fd(6.3.2)57 b(PBFS)386 1476 y 1254 2 v 385 1554
a 2 79 v 256 w 2 79 v 666 1531 a fj(p)730 1554 y 2 79 v 768 1531 a fq(1\(seq\
\))916 1554 y 2 79 v 998 1531 a(1)1103 1554 y 2 79 v 1185 1531 a(2)1290 1554 y
2 79 v 1372 1531 a(4)1477 1554 y 2 79 v 1546 1531 a(8)1639 1554 y 2 79 v 386
1556 a 1254 2 v 385 1634 a 2 79 v 256 w 2 79 v 666 1611 a fj(T)730 1634 y 2 79
v 780 1611 a fq(16.79)916 1634 y 2 79 v 967 1611 a(17.71)1103 1634 y 2 79 v
1179 1611 a(9.42)1290 1634 y 2 79 v 1365 1611 a(5.16)1477 1634 y 2 79 v 1527
1611 a(3.52)1639 1634 y 2 79 v 642 1636 a 998 2 v 385 1712 a 2 79 v 410 1689 a
(Problem)12 b(1)641 1712 y 2 79 v 666 1689 a fj(S)730 1712 y 2 79 v 805 1689 a
fq(1.00)916 1712 y 2 79 v 992 1689 a(0.95)1103 1712 y 2 79 v 1179 1689 a(1.78)
1290 1712 y 2 79 v 1365 1689 a(3.25)1477 1712 y 2 79 v 1527 1689 a(4.77)1639
1712 y 2 79 v 642 1714 a 998 2 v 385 1791 a 2 79 v 256 w 2 79 v 666 1767 a fj
(E)730 1791 y 2 79 v 805 1767 a fq(1.00)916 1791 y 2 79 v 992 1767 a(0.95)
1103 1791 y 2 79 v 1179 1767 a(0.89)1290 1791 y 2 79 v 1365 1767 a(0.81)1477
1791 y 2 79 v 1527 1767 a(0.60)1639 1791 y 2 79 v 386 1792 a 1254 2 v 385 1871
a 2 79 v 256 w 2 79 v 666 1847 a fj(T)730 1871 y 2 79 v 780 1847 a fq(33.48)
916 1871 y 2 79 v 967 1847 a(34.83)1103 1871 y 2 79 v 1154 1847 a(17.85)1290
1871 y 2 79 v 1365 1847 a(9.44)1477 1871 y 2 79 v 1527 1847 a(5.68)1639 1871 y
2 79 v 642 1872 a 998 2 v 385 1949 a 2 79 v 410 1925 a(Problem)g(2)641 1949 y
2 79 v 666 1925 a fj(S)730 1949 y 2 79 v 805 1925 a fq(1.00)916 1949 y 2 79 v
992 1925 a(0.96)1103 1949 y 2 79 v 1179 1925 a(1.88)1290 1949 y 2 79 v 1365
1925 a(3.55)1477 1949 y 2 79 v 1527 1925 a(5.89)1639 1949 y 2 79 v 642 1950 a
998 2 v 385 2027 a 2 79 v 256 w 2 79 v 666 2004 a fj(E)730 2027 y 2 79 v 805
2004 a fq(1.00)916 2027 y 2 79 v 992 2004 a(0.96)1103 2027 y 2 79 v 1179 2004
a(0.94)1290 2027 y 2 79 v 1365 2004 a(0.89)1477 2027 y 2 79 v 1527 2004 a(0.7\
4)1639 2027 y 2 79 v 386 2029 a 1254 2 v 385 2107 a 2 79 v 256 w 2 79 v 666
2084 a fj(T)730 2107 y 2 79 v 755 2084 a fq(181.32)916 2107 y 2 79 v 942 2084
a(185.62)1103 2107 y 2 79 v 1154 2084 a(94.87)1290 2107 y 2 79 v 1341 2084 a
(48.31)1477 2107 y 2 79 v 1502 2084 a(25.83)1639 2107 y 2 79 v 642 2109 a 998
2 v 385 2185 a 2 79 v 410 2162 a(Problem)g(3)641 2185 y 2 79 v 666 2162 a fj
(S)730 2185 y 2 79 v 805 2162 a fq(1.00)916 2185 y 2 79 v 992 2162 a(0.98)
1103 2185 y 2 79 v 1179 2162 a(1.91)1290 2185 y 2 79 v 1365 2162 a(3.75)1477
2185 y 2 79 v 1527 2162 a(7.02)1639 2185 y 2 79 v 642 2187 a 998 2 v 385 2263
a 2 79 v 256 w 2 79 v 666 2240 a fj(E)730 2263 y 2 79 v 805 2240 a fq(1.00)
916 2263 y 2 79 v 992 2240 a(0.98)1103 2263 y 2 79 v 1179 2240 a(0.96)1290
2263 y 2 79 v 1365 2240 a(0.94)1477 2263 y 2 79 v 1527 2240 a(0.88)1639 2263 y
2 79 v 386 2265 a 1254 2 v 385 2343 a 2 79 v 256 w 2 79 v 666 2320 a fj(T)730
2343 y 2 79 v 755 2320 a fq(475.31)916 2343 y 2 79 v 942 2320 a(486.84)1103
2343 y 2 79 v 1129 2320 a(247.03)1290 2343 y 2 79 v 1316 2320 a(125.77)1477
2343 y 2 79 v 1502 2320 a(64.81)1639 2343 y 2 79 v 642 2345 a 998 2 v 385 2422
a 2 79 v 410 2398 a(Problem)g(4)641 2422 y 2 79 v 666 2398 a fj(S)730 2422 y 2
79 v 805 2398 a fq(1.00)916 2422 y 2 79 v 992 2398 a(0.98)1103 2422 y 2 79 v
1179 2398 a(1.92)1290 2422 y 2 79 v 1365 2398 a(3.78)1477 2422 y 2 79 v 1527
2398 a(7.33)1639 2422 y 2 79 v 642 2423 a 998 2 v 385 2500 a 2 79 v 256 w 2 79
v 666 2476 a fj(E)730 2500 y 2 79 v 805 2476 a fq(1.00)916 2500 y 2 79 v 992
2476 a(0.98)1103 2500 y 2 79 v 1179 2476 a(0.96)1290 2500 y 2 79 v 1365 2476 a
(0.95)1477 2500 y 2 79 v 1527 2476 a(0.92)1639 2500 y 2 79 v 386 2502 a 1254 2
v 75 2606 a(T)m(able)19 b(6.6:)32 b(Measured)20 b(performance)e(results)i(for)
e(the)i(PBFS)e(scheduling)i(algorithm)e(\()p fj(T)6 b fq(:)31 b(T)o(ime)19 b
(in)75 2684 y(seconds,)14 b fj(S)s fq(:)j(speedup,)c(and)g fj(E)s fq(:)18 b
(ef)o(\256ciency\).)975 2836 y(111)p eop
%%Page: 112 126
 bop 377 12 a
 17557743 13945733 11057585 18550456 28615328 32496189 startTexFig
%%BeginDocument: fig/bfs-s.ps
/spoofdict 25 dict def
spoofdict begin
/bdf {bind def} bind def
/ldf {load def} bdf
/xdf {exch def} bdf
/M /moveto ldf
/RM /rmoveto ldf
/L /lineto ldf
/RL /rlineto ldf
/dbeg {gsave dup scale 2 setlinecap /s 6 def} bdf
/dplus {dbeg /s2 s 2 div def 0 s2 RM 0 s neg RL
  s2 s2 RM s neg 0 RL stroke grestore} bdf
/dcross {dbeg /s2 s 1.414 div def s2 2 div neg dup RM s2 s2 RL
  0 s2 neg RM s2 neg s2 RL stroke grestore} bdf
/dbox {dbeg /s2 s 1.414 div def s2 2 div neg dup RM s2 0 RL
   0 s2 RL s2 neg 0 RL 0 s2 neg RL stroke grestore} bdf
/ddiamond {dbeg /s2 s 2 div def 0 s2 RM s2 neg s2 neg RL
  s2 s2 neg RL s2 s2 RL s2 neg s2 RL stroke grestore} bdf
/dstar {dup gsave exch dplus grestore dcross} bdf
/ddot {dbeg currentpoint s 2 div 0 360 arc fill grestore} bdf
/pnt {gsave 1 setlinecap M 0 0 RL stroke grestore} bdf
/xt {gsave 4 2 roll translate exch rotate} bdf
/ltext {xt 0 0 M show grestore} bdf
/rtext {xt dup stringwidth pop neg 0 M show grestore} bdf
/ctext {xt dup stringwidth pop 2 div neg 0 M show grestore} bdf
2 setlinecap
0 setgray
216 306 M
1 setlinewidth
[] 0 setdash
216 486 L
stroke
219.6 306 M
216 306 L
stroke
/Helvetica-BoldOblique findfont 10 scalefont setfont
211.555 304 0 (0.00) rtext
219.6 326 M
216 326 L
stroke
211.555 324 0 (1.00) rtext
219.6 346 M
216 346 L
stroke
211.555 344 0 (2.00) rtext
219.6 366 M
216 366 L
stroke
211.555 364 0 (3.00) rtext
219.6 386 M
216 386 L
stroke
211.555 384 0 (4.00) rtext
219.6 406 M
216 406 L
stroke
211.555 404 0 (5.00) rtext
219.6 426 M
216 426 L
stroke
211.555 424 0 (6.00) rtext
219.6 446 M
216 446 L
stroke
211.555 444 0 (7.00) rtext
219.6 466 M
216 466 L
stroke
211.555 464 0 (8.00) rtext
219.6 486 M
216 486 L
stroke
211.555 484 0 (9.00) rtext
/Helvetica-BoldOblique findfont 12 scalefont setfont
180.095 494 90 (Speedup) rtext
216 306 M
396 306 L
stroke
216 309.6 M
216 306 L
stroke
/Helvetica-BoldOblique findfont 10 scalefont setfont
216 296 0 (0) ctext
236 309.6 M
236 306 L
stroke
236 296 0 (1) ctext
256 309.6 M
256 306 L
stroke
256 296 0 (2) ctext
276 309.6 M
276 306 L
stroke
276 296 0 (3) ctext
296 309.6 M
296 306 L
stroke
296 296 0 (4) ctext
316 309.6 M
316 306 L
stroke
316 296 0 (5) ctext
336 309.6 M
336 306 L
stroke
336 296 0 (6) ctext
356 309.6 M
356 306 L
stroke
356 296 0 (7) ctext
376 309.6 M
376 306 L
stroke
376 296 0 (8) ctext
396 309.6 M
396 306 L
stroke
396 296 0 (9) ctext
/Helvetica-BoldOblique findfont 12 scalefont setfont
396 282 0 (# processors) rtext
236 326 M
[.5 3] 0 setdash
376 466 L
stroke
/Times-Roman findfont 12 scalefont setfont
380 470 0 (\(ideal\)) ltext
396 486 pnt
216 306 pnt
385.336 401.4 0 (Problem 1) ltext
0.5 setlinewidth
[] 0 setdash
236 324.96 M 1 dplus
256 341.64 M 1 dplus
296 371.08 M 1 dplus
376 401.4 M 1 dplus
236 324.96 M
1 setlinewidth
256 341.64 L
296 371.08 L
376 401.4 L
stroke
385.336 423.88 0 (Problem 2) ltext
0.5 setlinewidth
236 325.22 M 1 dbox
256 343.52 M 1 dbox
296 376.94 M 1 dbox
376 423.88 M 1 dbox
236 325.22 M
1 setlinewidth
256 343.52 L
296 376.94 L
376 423.88 L
stroke
385.336 446.4 0 (Problem 3) ltext
0.5 setlinewidth
236 325.52 M 1 ddiamond
256 344.22 M 1 ddiamond
296 381.06 M 1 ddiamond
376 446.4 M 1 ddiamond
236 325.52 M
1 setlinewidth
256 344.22 L
296 381.06 L
376 446.4 L
stroke
385.336 452.68 0 (Problem 4) ltext
0.5 setlinewidth
236 325.52 M 1 ddot
256 344.48 M 1 ddot
296 381.58 M 1 ddot
376 452.68 M 1 ddot
236 325.52 M
1 setlinewidth
256 344.48 L
296 381.58 L
376 452.68 L
stroke
showpage
end
%%EndDocument
  endTexFig 423 1015 a fq(Figure)12 b(6.5:)18 b(Speedups)12 b(for)g(Problems)
f(1-4)h(with)g(PBFS.)69 1140 y(T)m(able)e(6.6)g(lists)h(the)f(measured)g(perf\
ormance)f(for)h(Problems)f(1)h(through)f(4)i(for)e(the)h(PBFS)g(scheduling)-4
1218 y(algorithm.)16 b(The)d(results)e(for)g(speedups)i(are)e(also)h(depicted)
g(in)f(Figure)g(6.5.)19 b(Note)11 b(that)h(the)f(PBFS)g(results)-4 1296 y(are)
h(not)f(as)i(good)f(as)h(the)f(PDC)g(results.)18 b(This)13 b(is)f(mainly)g
(because)h(in)f(Section)g(5.1,)g(the)h(PDC)f(scheduling)-4 1375 y(algorithm)f
(employs)h(a)h(provably)e(minimum)g(number)h(of)g(interprocessor)g(communicat\
ion)f(messages.)418 1459 y 1031 2 v 417 1538 a 2 79 v 256 w 2 79 v 698 1514 a
(Nodes)850 1538 y 2 79 v 950 1514 a(1)999 1538 y 2 79 v 1100 1514 a(2)1149
1538 y 2 79 v 1249 1514 a(4)1298 1538 y 2 79 v 1399 1514 a(8)1448 1538 y 2 79
v 418 1539 a 1031 2 v 417 1618 a 2 79 v 442 1594 a(Problem)h(1)673 1618 y 2 79
v 726 1594 a(1135)850 1618 y 2 79 v 900 1594 a(770)999 1618 y 2 79 v 1025 1594
a(1190)1149 1618 y 2 79 v 1174 1594 a(1695)1298 1618 y 2 79 v 1324 1594 a(184\
6)1448 1618 y 2 79 v 418 1619 a 1031 2 v 417 1697 a 2 79 v 442 1674 a(Problem)
g(2)673 1697 y 2 79 v 726 1674 a(2107)850 1697 y 2 79 v 876 1674 a(1672)999
1697 y 2 79 v 1025 1674 a(1963)1149 1697 y 2 79 v 1174 1674 a(2716)1298 1697 y
2 79 v 1324 1674 a(3543)1448 1697 y 2 79 v 418 1699 a 1031 2 v 17 1803 a(T)m
(able)g(6.7:)18 b(Measured)13 b(Number)f(of)g(sends/receives)h(when)f(using)h
(the)f(PBFS)g(scheduling)g(algorithm.)69 1929 y(For)k(PBFS,)i(the)f(idle)g
(time)g(and)g(the)h(scheduling)f(overhead)g(are)g(very)g(similar)g(to)g(those)
h(for)f(PDC)-4 2008 y(and)c(their)g(presence)g(is)h(for)f(the)g(same)h(reason\
s)g(discussed)g(before.)21 b(So,)14 b(here)f(we)g(will)g(only)g(discuss)i(the)
-4 2086 y(communication)g(overhead)i(for)f(PBFS.)g(T)m(able)h(6.7)g(shows)g
(the)g(measured)g(numbers)f(of)h(send/receive)-4 2164 y(pairs)11 b(for)f(Prob\
lems)g(1)h(and)g(2.)18 b(The)12 b(numbers)f(for)f(PBFS)g(are)h(much)g(lar)o
(ger)g(than)f(those)i(for)e(PDC.)i(This)f(is)-4 2242 y(because)g(in)g(PBFS)f
(whenever)h(a)g(task)h(is)f(scheduled,)h(the)f(minimum-cost)f(task)h(needs)g
(to)g(be)g(recomputed)-4 2321 y(across)i(all)g(processors.)21 b(As)13 b(menti\
oned)g(above,)g(the)g(communication)f(cost)i(for)e(PBFS)g(is)i fj(O)q fh(\()p
fj(N)6 b fh(\))p fq(.)20 b(If)12 b(we)-4 2399 y(check)17 b(each)h(column,)g
(the)f(ratios)g(of)g(the)g(amount)g(of)f(communication)h(to)g(the)g(number)f
(of)h(nodes)h(are)-4 2477 y(nearly)e(constant.)33 b(But,)18 b(when)f(we)h(use)
f(more)g(processors,)i(the)e(ratios)f(go)h(up.)33 b(This)17 b(is)h(because)f
(in)g(a)-4 2555 y(realistic)11 b(situation)g(we)g(need)g(more)g(control)g(pac\
kets)g(to)g(help)h(send)f(a)h(cross)f(node)h(out)f(when)g(using)g(more)-4 2634
y(processors.)24 b(However)n(,)15 b(our)f(system)h(only)f(lets)h(the)f(ratio)
g(grow)g(from)g(0.7)g(\(for)g(one)g(processor\))g(to)g(1.7)-4 2712 y(\(for)d
(8)h(processors\).)896 2836 y(112)p eop
%%Page: 113 127
 bop 501 155 a
 16143172 14406205 11057585 18550456 27200757 32956661 startTexFig
%%BeginDocument: fig/dfs-glb.ps
/spoofdict 25 dict def
spoofdict begin
/bdf {bind def} bind def
/ldf {load def} bdf
/xdf {exch def} bdf
/M /moveto ldf
/RM /rmoveto ldf
/L /lineto ldf
/RL /rlineto ldf
/dbeg {gsave dup scale 2 setlinecap /s 6 def} bdf
/dplus {dbeg /s2 s 2 div def 0 s2 RM 0 s neg RL
  s2 s2 RM s neg 0 RL stroke grestore} bdf
/dcross {dbeg /s2 s 1.414 div def s2 2 div neg dup RM s2 s2 RL
  0 s2 neg RM s2 neg s2 RL stroke grestore} bdf
/dbox {dbeg /s2 s 1.414 div def s2 2 div neg dup RM s2 0 RL
   0 s2 RL s2 neg 0 RL 0 s2 neg RL stroke grestore} bdf
/ddiamond {dbeg /s2 s 2 div def 0 s2 RM s2 neg s2 neg RL
  s2 s2 neg RL s2 s2 RL s2 neg s2 RL stroke grestore} bdf
/dstar {dup gsave exch dplus grestore dcross} bdf
/ddot {dbeg currentpoint s 2 div 0 360 arc fill grestore} bdf
/pnt {gsave 1 setlinecap M 0 0 RL stroke grestore} bdf
/xt {gsave 4 2 roll translate exch rotate} bdf
/ltext {xt 0 0 M show grestore} bdf
/rtext {xt dup stringwidth pop neg 0 M show grestore} bdf
/ctext {xt dup stringwidth pop 2 div neg 0 M show grestore} bdf
2 setlinecap
0 setgray
216 306 M
1 setlinewidth
[] 0 setdash
216 486 L
stroke
219.6 306 M
216 306 L
stroke
/Helvetica-BoldOblique findfont 10 scalefont setfont
211.555 304 0 (0.00) rtext
219.6 324 M
216 324 L
stroke
211.555 322 0 (0.10) rtext
219.6 342 M
216 342 L
stroke
211.555 340 0 (0.20) rtext
219.6 360 M
216 360 L
stroke
211.555 358 0 (0.30) rtext
219.6 378 M
216 378 L
stroke
211.555 376 0 (0.40) rtext
219.6 396 M
216 396 L
stroke
211.555 394 0 (0.50) rtext
219.6 414 M
216 414 L
stroke
211.555 412 0 (0.60) rtext
219.6 432 M
216 432 L
stroke
211.555 430 0 (0.70) rtext
219.6 450 M
216 450 L
stroke
211.555 448 0 (0.80) rtext
219.6 468 M
216 468 L
stroke
211.555 466 0 (0.90) rtext
219.6 486 M
216 486 L
stroke
211.555 484 0 (1.00) rtext
/Helvetica-BoldOblique findfont 12 scalefont setfont
180.095 494 90 (Efficiency) rtext
216 306 M
396 306 L
stroke
216 309.6 M
216 306 L
stroke
/Helvetica-BoldOblique findfont 10 scalefont setfont
216 296 0 (0) ctext
236 309.6 M
236 306 L
stroke
236 296 0 (1) ctext
256 309.6 M
256 306 L
stroke
256 296 0 (2) ctext
276 309.6 M
276 306 L
stroke
276 296 0 (3) ctext
296 309.6 M
296 306 L
stroke
296 296 0 (4) ctext
316 309.6 M
316 306 L
stroke
316 296 0 (5) ctext
336 309.6 M
336 306 L
stroke
336 296 0 (6) ctext
356 309.6 M
356 306 L
stroke
356 296 0 (7) ctext
376 309.6 M
376 306 L
stroke
376 296 0 (8) ctext
396 309.6 M
396 306 L
stroke
396 296 0 (9) ctext
/Helvetica-BoldOblique findfont 12 scalefont setfont
396 282 0 (# processors) rtext
0.5 setlinewidth
246 347.39 M 1 dplus
276 347.4 M 1 dplus
246 347.39 M
1 setlinewidth
276 347.4 L
stroke
/Times-Roman findfont 10 scalefont setfont
286 344.4 0 (GLB on hosts for Problem 1) ltext
stroke
0.5 setlinewidth
246 357.39 M 1 dplus
276 357.4 M 1 dplus
246 357.39 M
1 setlinewidth
[8 5] 0 setdash
276 357.4 L
stroke
286 354.4 0 (GLB on CABs for Problem 1) ltext
stroke
0.5 setlinewidth
[] 0 setdash
246 367.39 M 1 dbox
276 367.4 M 1 dbox
246 367.39 M
1 setlinewidth
276 367.4 L
stroke
286 364.4 0 (GLB on hosts for Problem 2) ltext
stroke
0.5 setlinewidth
246 377.39 M 1 dbox
276 377.4 M 1 dbox
246 377.39 M
1 setlinewidth
[8 5] 0 setdash
276 377.4 L
stroke
286 374.4 0 (GLB on CABs for Problem 2) ltext
stroke
236 486 M
[.5 3] 0 setdash
376 486 L
stroke
/Times-Roman findfont 12 scalefont setfont
340 489 0 (\(ideal\)) ltext
396 486 pnt
216 306 pnt
0.5 setlinewidth
[] 0 setdash
236 482.94 M 1 dplus
256 475.38 M 1 dplus
296 460.62 M 1 dplus
376 424.08 M 1 dplus
236 482.94 M
1 setlinewidth
256 475.38 L
296 460.62 L
376 424.08 L
stroke
0.5 setlinewidth
236 483.84 M 1 dbox
256 478.62 M 1 dbox
296 468.9 M 1 dbox
376 447.84 M 1 dbox
236 483.84 M
1 setlinewidth
256 478.62 L
296 468.9 L
376 447.84 L
stroke
0.5 setlinewidth
236 484.74 M 1 dplus
256 477.54 M 1 dplus
296 466.02 M 1 dplus
376 448.38 M 1 dplus
236 484.74 M
1 setlinewidth
[8 5] 0 setdash
256 477.54 L
296 466.02 L
376 448.38 L
stroke
0.5 setlinewidth
[] 0 setdash
236 484.92 M 1 dbox
256 481.86 M 1 dbox
296 474.3 M 1 dbox
376 458.28 M 1 dbox
236 484.92 M
1 setlinewidth
[8 5] 0 setdash
256 481.86 L
296 474.3 L
376 458.28 L
stroke
[] 0 setdash
236 334.4 M 413.5 334.4 L 413.5 394.4 L 236 394.4 L closepath stroke
showpage
end
%%EndDocument
  endTexFig 402 1187 a fq(Figure)12 b(6.6:)18 b(Ef)o(\256ciencies)12 b(with)g
(PDC)h(\(installing)e(GLB)i(on)g(CABs\))501 1526 y
 16143172 14406205 11057585 18550456 27200757 32956661 startTexFig
%%BeginDocument: fig/bfs-glb.ps
/spoofdict 25 dict def
spoofdict begin
/bdf {bind def} bind def
/ldf {load def} bdf
/xdf {exch def} bdf
/M /moveto ldf
/RM /rmoveto ldf
/L /lineto ldf
/RL /rlineto ldf
/dbeg {gsave dup scale 2 setlinecap /s 6 def} bdf
/dplus {dbeg /s2 s 2 div def 0 s2 RM 0 s neg RL
  s2 s2 RM s neg 0 RL stroke grestore} bdf
/dcross {dbeg /s2 s 1.414 div def s2 2 div neg dup RM s2 s2 RL
  0 s2 neg RM s2 neg s2 RL stroke grestore} bdf
/dbox {dbeg /s2 s 1.414 div def s2 2 div neg dup RM s2 0 RL
   0 s2 RL s2 neg 0 RL 0 s2 neg RL stroke grestore} bdf
/ddiamond {dbeg /s2 s 2 div def 0 s2 RM s2 neg s2 neg RL
  s2 s2 neg RL s2 s2 RL s2 neg s2 RL stroke grestore} bdf
/dstar {dup gsave exch dplus grestore dcross} bdf
/ddot {dbeg currentpoint s 2 div 0 360 arc fill grestore} bdf
/pnt {gsave 1 setlinecap M 0 0 RL stroke grestore} bdf
/xt {gsave 4 2 roll translate exch rotate} bdf
/ltext {xt 0 0 M show grestore} bdf
/rtext {xt dup stringwidth pop neg 0 M show grestore} bdf
/ctext {xt dup stringwidth pop 2 div neg 0 M show grestore} bdf
2 setlinecap
0 setgray
216 306 M
1 setlinewidth
[] 0 setdash
216 486 L
stroke
219.6 306 M
216 306 L
stroke
/Helvetica-BoldOblique findfont 10 scalefont setfont
211.555 304 0 (0.00) rtext
219.6 324 M
216 324 L
stroke
211.555 322 0 (0.10) rtext
219.6 342 M
216 342 L
stroke
211.555 340 0 (0.20) rtext
219.6 360 M
216 360 L
stroke
211.555 358 0 (0.30) rtext
219.6 378 M
216 378 L
stroke
211.555 376 0 (0.40) rtext
219.6 396 M
216 396 L
stroke
211.555 394 0 (0.50) rtext
219.6 414 M
216 414 L
stroke
211.555 412 0 (0.60) rtext
219.6 432 M
216 432 L
stroke
211.555 430 0 (0.70) rtext
219.6 450 M
216 450 L
stroke
211.555 448 0 (0.80) rtext
219.6 468 M
216 468 L
stroke
211.555 466 0 (0.90) rtext
219.6 486 M
216 486 L
stroke
211.555 484 0 (1.00) rtext
/Helvetica-BoldOblique findfont 12 scalefont setfont
180.095 494 90 (Efficiency) rtext
216 306 M
396 306 L
stroke
216 309.6 M
216 306 L
stroke
/Helvetica-BoldOblique findfont 10 scalefont setfont
216 296 0 (0) ctext
236 309.6 M
236 306 L
stroke
236 296 0 (1) ctext
256 309.6 M
256 306 L
stroke
256 296 0 (2) ctext
276 309.6 M
276 306 L
stroke
276 296 0 (3) ctext
296 309.6 M
296 306 L
stroke
296 296 0 (4) ctext
316 309.6 M
316 306 L
stroke
316 296 0 (5) ctext
336 309.6 M
336 306 L
stroke
336 296 0 (6) ctext
356 309.6 M
356 306 L
stroke
356 296 0 (7) ctext
376 309.6 M
376 306 L
stroke
376 296 0 (8) ctext
396 309.6 M
396 306 L
stroke
396 296 0 (9) ctext
/Helvetica-BoldOblique findfont 12 scalefont setfont
396 282 0 (# processors) rtext
0.5 setlinewidth
246 347.39 M 1 dplus
276 347.4 M 1 dplus
246 347.39 M
1 setlinewidth
276 347.4 L
stroke
/Times-Roman findfont 10 scalefont setfont
286 344.4 0 (GLB on hosts for Problem 1) ltext
stroke
0.5 setlinewidth
246 357.39 M 1 dplus
276 357.4 M 1 dplus
246 357.39 M
1 setlinewidth
[8 5] 0 setdash
276 357.4 L
stroke
286 354.4 0 (GLB on CABs for Problem 1) ltext
stroke
0.5 setlinewidth
[] 0 setdash
246 367.39 M 1 dbox
276 367.4 M 1 dbox
246 367.39 M
1 setlinewidth
276 367.4 L
stroke
286 364.4 0 (GLB on hosts for Problem 2) ltext
stroke
0.5 setlinewidth
246 377.39 M 1 dbox
276 377.4 M 1 dbox
246 377.39 M
1 setlinewidth
[8 5] 0 setdash
276 377.4 L
stroke
286 374.4 0 (GLB on CABs for Problem 2) ltext
stroke
236 486 M
[.5 3] 0 setdash
376 486 L
stroke
/Times-Roman findfont 12 scalefont setfont
340 489 0 (\(ideal\)) ltext
396 486 pnt
216 306 pnt
0.5 setlinewidth
[] 0 setdash
236 476.64 M 1 dplus
256 466.38 M 1 dplus
296 452.34 M 1 dplus
376 413.28 M 1 dplus
236 476.64 M
1 setlinewidth
256 466.38 L
296 452.34 L
376 413.28 L
stroke
0.5 setlinewidth
236 478.98 M 1 dbox
256 474.84 M 1 dbox
296 465.66 M 1 dbox
376 438.66 M 1 dbox
236 478.98 M
1 setlinewidth
256 474.84 L
296 465.66 L
376 438.66 L
stroke
0.5 setlinewidth
236 483.48 M 1 dplus
256 470.16 M 1 dplus
296 462.78 M 1 dplus
376 430.74 M 1 dplus
236 483.48 M
1 setlinewidth
[8 5] 0 setdash
256 470.16 L
296 462.78 L
376 430.74 L
stroke
0.5 setlinewidth
[] 0 setdash
236 483.3 M 1 dbox
256 478.98 M 1 dbox
296 471.6 M 1 dbox
376 451.44 M 1 dbox
236 483.3 M
1 setlinewidth
[8 5] 0 setdash
256 478.98 L
296 471.6 L
376 451.44 L
stroke
[] 0 setdash
236 334.4 M 413.5 334.4 L 413.5 394.4 L 236 394.4 L closepath stroke
showpage
end
%%EndDocument
  endTexFig 392 2558 a(Figure)f(6.7:)18 b(Ef)o(\256ciencies)13 b(with)f(PBFS)
f(\(installing)h(GLB)h(on)f(CABs\))975 2836 y(113)p eop
%%Page: 114 128
 bop -4 53 a fd(6.3.3)57 b(Global)15 b(Load)g(Balancer)f(on)h(CABs)-4 259 y fq
(In)e(this)h(section,)h(we)f(will)f(investigate)h(the)g(ef)n(fect)g(of)f(inst\
alling)h(the)f(global)h(load)g(balancer)f(\(GLB\))h(tree)-4 337 y(on)g(CABs.)
25 b(When)14 b(the)g(GLB)h(is)g(installed)f(on)h(CABs,)h(the)e(GLB)h(work)f
(is)g(\252of)o(f-loaded\272)g(from)f(hosts)i(to)-4 416 y(CABs)e(and)f(therefo\
re)f(applications)i(should)f(get)g(better)g(performance.)69 561 y(Figure)e
(6.6)i(\(6.7\))f(shows)i(ef)n(\256ciencies)f(of)f(the)h(PDC)f(\(PBFS\))f(sche\
duling)i(algorithms)f(for)f(Problems)-4 639 y(1)16 b(and)h(2.)31 b(The)17 b
(dashed)g(lines)f(are)h(results)g(obtained)f(when)g(we)h(install)g(the)f(GLB)
h(tree)g(on)f(CABs;)k(the)-4 717 y(solid)14 b(lines)g(are)g(the)h(same)f(resu\
lts)h(as)g(those)f(in)g(Sections)g(6.3.1)h(and)g(6.3.2,)g(which)g(are)f(obtai\
ned)g(when)-4 795 y(we)e(install)g(the)h(GLB)g(tree)f(on)g(hosts.)69 941 y
(The)h(performance)f(data)g(indicate)h(that)f(we)h(can)g(improve)f(the)h(ef)o
(\256ciency)f(by)h(about)f(2%)i(to)e(20%)h(for)-4 1019 y(PDC)j(and)g(5%)g(to)
g(20%)g(for)g(PBFS)f(by)h(installing)g(the)g(GLB)h(on)e(CABs.)31 b(The)16 b
(improvement)f(is)i(small)-4 1097 y(because)9 b(the)g(task)h(grain)e(size)i
(\(about)e(15)h(millisecond\))g(is)g(lar)o(ge)g(when)g(compared)f(with)h(the)
g(time)g(for)f(each)-4 1175 y(send/receive)15 b(\(about)g(200)g(microseconds\
\).)27 b(In)15 b(general,)h(installing)f(GLB)h(on)g(CABs)g(will)f(help)g(more)
-4 1254 y(for)g(those)i(applications)f(requiring)f(heavy)i(communication,)g
(such)g(as)g(problems)e(with)i(small-grained)-4 1332 y(tasks.)40 b(Our)19 b
(results)h(also)f(show)h(that)f(we)h(can)g(save)g(more)f(time)g(for)f(PBFS)h
(\(which)g(requires)g(more)-4 1410 y(communication\))10 b(than)j(for)e(PDC.)
452 1577 y  15174865 14406205 11057585 18550456 26232450 32956661 startTexFig
%%BeginDocument: fig/hbs-glb.ps
/spoofdict 25 dict def
spoofdict begin
/bdf {bind def} bind def
/ldf {load def} bdf
/xdf {exch def} bdf
/M /moveto ldf
/RM /rmoveto ldf
/L /lineto ldf
/RL /rlineto ldf
/dbeg {gsave dup scale 2 setlinecap /s 6 def} bdf
/dplus {dbeg /s2 s 2 div def 0 s2 RM 0 s neg RL
  s2 s2 RM s neg 0 RL stroke grestore} bdf
/dcross {dbeg /s2 s 1.414 div def s2 2 div neg dup RM s2 s2 RL
  0 s2 neg RM s2 neg s2 RL stroke grestore} bdf
/dbox {dbeg /s2 s 1.414 div def s2 2 div neg dup RM s2 0 RL
   0 s2 RL s2 neg 0 RL 0 s2 neg RL stroke grestore} bdf
/ddiamond {dbeg /s2 s 2 div def 0 s2 RM s2 neg s2 neg RL
  s2 s2 neg RL s2 s2 RL s2 neg s2 RL stroke grestore} bdf
/dstar {dup gsave exch dplus grestore dcross} bdf
/ddot {dbeg currentpoint s 2 div 0 360 arc fill grestore} bdf
/pnt {gsave 1 setlinecap M 0 0 RL stroke grestore} bdf
/xt {gsave 4 2 roll translate exch rotate} bdf
/ltext {xt 0 0 M show grestore} bdf
/rtext {xt dup stringwidth pop neg 0 M show grestore} bdf
/ctext {xt dup stringwidth pop 2 div neg 0 M show grestore} bdf
2 setlinecap
0 setgray
216 306 M
1 setlinewidth
[] 0 setdash
216 486 L
stroke
219.6 306 M
216 306 L
stroke
/Helvetica-BoldOblique findfont 10 scalefont setfont
211.555 304 0 (0.00) rtext
219.6 324 M
216 324 L
stroke
211.555 322 0 (0.10) rtext
219.6 342 M
216 342 L
stroke
211.555 340 0 (0.20) rtext
219.6 360 M
216 360 L
stroke
211.555 358 0 (0.30) rtext
219.6 378 M
216 378 L
stroke
211.555 376 0 (0.40) rtext
219.6 396 M
216 396 L
stroke
211.555 394 0 (0.50) rtext
219.6 414 M
216 414 L
stroke
211.555 412 0 (0.60) rtext
219.6 432 M
216 432 L
stroke
211.555 430 0 (0.70) rtext
219.6 450 M
216 450 L
stroke
211.555 448 0 (0.80) rtext
219.6 468 M
216 468 L
stroke
211.555 466 0 (0.90) rtext
219.6 486 M
216 486 L
stroke
211.555 484 0 (1.00) rtext
/Helvetica-BoldOblique findfont 12 scalefont setfont
180.095 494 90 (Efficiency) rtext
216 306 M
396 306 L
stroke
216 309.6 M
216 306 L
stroke
/Helvetica-BoldOblique findfont 10 scalefont setfont
216 296 0 (0) ctext
236 309.6 M
236 306 L
stroke
236 296 0 (1) ctext
256 309.6 M
256 306 L
stroke
256 296 0 (2) ctext
276 309.6 M
276 306 L
stroke
276 296 0 (3) ctext
296 309.6 M
296 306 L
stroke
296 296 0 (4) ctext
316 309.6 M
316 306 L
stroke
316 296 0 (5) ctext
336 309.6 M
336 306 L
stroke
336 296 0 (6) ctext
356 309.6 M
356 306 L
stroke
356 296 0 (7) ctext
376 309.6 M
376 306 L
stroke
376 296 0 (8) ctext
396 309.6 M
396 306 L
stroke
396 296 0 (9) ctext
/Helvetica-BoldOblique findfont 12 scalefont setfont
396 282 0 (# processors) rtext
0.5 setlinewidth
252 347.39 M 1 dplus
282 347.4 M 1 dplus
252 347.39 M
1 setlinewidth
282 347.4 L
stroke
/Times-Roman findfont 10 scalefont setfont
292 344.4 0 (PDC for Problem 1) ltext
stroke
0.5 setlinewidth
252 357.39 M 1 dplus
282 357.4 M 1 dplus
252 357.39 M
1 setlinewidth
[8 5] 0 setdash
282 357.4 L
stroke
292 354.4 0 (PHS for Problem 1) ltext
stroke
0.5 setlinewidth
[] 0 setdash
252 367.39 M 1 dbox
282 367.4 M 1 dbox
252 367.39 M
1 setlinewidth
282 367.4 L
stroke
292 364.4 0 (PDC for Problem 2) ltext
stroke
0.5 setlinewidth
252 377.39 M 1 dbox
282 377.4 M 1 dbox
252 377.39 M
1 setlinewidth
[8 5] 0 setdash
282 377.4 L
stroke
292 374.4 0 (PHS for Problem 2) ltext
stroke
236 486 M
[.5 3] 0 setdash
376 486 L
stroke
/Times-Roman findfont 12 scalefont setfont
340 489 0 (\(ideal\)) ltext
396 486 pnt
216 306 pnt
0.5 setlinewidth
[] 0 setdash
236 482.94 M 1 dplus
256 475.38 M 1 dplus
296 460.62 M 1 dplus
376 424.08 M 1 dplus
236 482.94 M
1 setlinewidth
256 475.38 L
296 460.62 L
376 424.08 L
stroke
0.5 setlinewidth
236 483.84 M 1 dbox
256 478.62 M 1 dbox
296 468.9 M 1 dbox
376 447.84 M 1 dbox
236 483.84 M
1 setlinewidth
256 478.62 L
296 468.9 L
376 447.84 L
stroke
0.5 setlinewidth
236 482.94 M 1 dplus
256 475.2 M 1 dplus
296 460.62 M 1 dplus
376 434.7 M 1 dplus
236 482.94 M
1 setlinewidth
[8 5] 0 setdash
256 475.2 L
296 460.62 L
376 434.7 L
stroke
0.5 setlinewidth
[] 0 setdash
236 484.38 M 1 dbox
256 479.34 M 1 dbox
296 470.34 M 1 dbox
376 452.88 M 1 dbox
236 484.38 M
1 setlinewidth
[8 5] 0 setdash
256 479.34 L
296 470.34 L
376 452.88 L
stroke
[] 0 setdash
242 334.4 M 379.5 334.4 L 379.5 394.4 L 242 394.4 L closepath stroke
showpage
end
%%EndDocument
  endTexFig 353 2610 a(Figure)g(6.8:)18 b(Performance)11 b(results)i(for)e
(parallel)h(hybrid)g(search.)896 2836 y(114)p eop
%%Page: 115 129
 bop 75 53 a fd(6.3.4)57 b(Parallel)15 b(Hybrid)g(Sear)o(ch)75 233 y fq(In)f
(the)h(set)g(covering)f(problem,)h(the)f(computation)g(tree)g(is)h(usually)g
(lopsided.)25 b(A)15 b(node)f(with)h(a)f(smaller)75 311 y(cost)f(usually)g
(has)h(a)f(bigger)g(subtree.)20 b(So,)13 b(we)g(can)h(change)f(PDC)g(by)g(ass\
igning)g(to)g(the)g(node)g fj(\031)1781 318 y fg(G)1825 311 y fh(=)i fk(\000)
p fj(c)p fq(,)75 389 y(where)g fj(c)g fq(is)g(the)g(cost)g(of)f(the)h(node.)
26 b(This)16 b(is)f(called)g fl(parallel)f(hybrid)h(sear)o(ch)g fq(\()p fl
(PHS)p fq(\))g(in)g(the)f(sense)i(that)75 468 y(it)d(behaves)g(like)g(PDC)g
(locally)f(\(on)h(each)g(processor\))g(while)f(it)h(behaves)h(like)e(PBFS)h
(globally)f(\(over)g(the)75 546 y(whole)g(system\).)148 691 y(The)19 b(perfor\
mance)e(results)i(for)e(Problems)h(1)h(and)f(2)g(with)g(PHS)g(are)h(shown)f
(in)g(Figure)g(6.8.)37 b(W)l(e)75 769 y(observe)17 b(that)g(PHS)f(is)h(slight\
ly)g(better)f(than)h(PDC,)g(by)g(at)g(most)g(a)g(10%)h(mar)n(gin.)32 b(Most)
17 b(importantly)l(,)75 847 y(this)g(experiment)g(demonstrates)g(how)g(easily)
g(we)g(can)h(change)f(our)g(scheduling)g(algorithm)f(to)g(obtain)75 926 y(pos\
sibly)d(better)e(results.)75 1193 y fr(6.4)71 b(Summary)75 1390 y fq(W)l(e)13
b(summarize)f(our)f(experimental)h(results)h(as)f(follows:)148 1594 y fk(\017)
24 b fq(The)18 b(average)g(overhead)f(for)g(scheduling/creating)g(one)g(local)
h(task)g(can)g(be)f(as)i(low)e(as)h(80)g(mi-)197 1672 y(croseconds.)h(The)13 b
(scheduling)f(overhead)g(can)h(be)f(parallelized)g(well)g(too.)148 1795 y fk
(\017)24 b fq(For)12 b(the)h(set)h(covering)e(problem,)h(we)g(generally)g(get)
g(good)f(speedups)i(for)e(both)h(PBFS)g(and)g(PDC.)197 1873 y(For)g(a)h(speci\
\256c)g(lar)n(ge)g(problem)f(requiring)f(less)i(than)g(500)f(seconds,)i(we)f
(observed)g(a)g(speedup)g(of)197 1951 y(7.71)f(with)f(PDC)g(and)g(7.33)h(with)
f(PBFS)g(on)g(8)g(processors.)148 2074 y fk(\017)24 b fq(The)19 b(number)f
(of)g(sends/receives)i(for)e(PDC)g(is)h(about)g fj(O)q fh(\()p fj(ph)p fh(\))
h fq(while)e(that)g(for)g(PBFS)g(is)h(about)197 2153 y fj(O)r fh(\()p fj(N)5 b
fh(\))p fq(.)39 b(So,)21 b(PDC)f(can)f(be)h(scaled)f(up)h(well.)39 b(For)18 b
(PBFS,)i(a)f(high-speed)g(network)g(can)g(help)197 2231 y(improve)11 b(perfor\
mance)h(signi\256cantly)l(.)148 2354 y fk(\017)24 b fq(For)16 b(PDC)i(and)f
(PBFS,)g(the)g(maximum)f(value)i(of)e(the)i(average)f(idle)g(time)g(can)g(be)
g(close)h(to)f(the)197 2432 y(execution)f(time)h(of)f(all)h(the)f(nodes)h(on)
g(the)f(critical)g(path)h(from)f(the)g(root)g(to)h(leaves.)32 b(Since)16 b
(the)197 2511 y(number)d(of)g(the)g(nodes)h(on)f(the)h(critical)f(path)g(\()p
fj(h)p fq(\))g(is)h(small)f(compared)g(with)g(the)h(total)f(number)g(of)197
2589 y(nodes)g(\()p fj(N)t fq(\),)g(the)f(idle)g(time)g(for)g(the)g(two)h(sch\
eduling)f(algorithms)f(can)i(be)f(negligibly)g(small.)148 2712 y fk(\017)24 b
fq(W)l(e)13 b(can)f(\252of)o(f-load\272)f(the)i(computation)e(of)h(the)g(GLB)
i(to)e(network)f(coprocessors,)j(if)e(they)g(exist.)975 2836 y(115)p eop
%%Page: 116 130
 bop 68 53 a fk(\017)24 b fq(Although)12 b(parallel)g(hybrid)g(search)h(does)
g(not)f(improve)g(performance)f(signi\256cantly)l(,)i(it)g(serves)g(to)117 132
y(demonstrate)d(how)g(easily)g(we)g(can)g(change)g(our)g(scheduling)g(algorit\
hm)f(to)g(obtain)h(possibly)g(better)117 210 y(results.)26 b(This)15 b(point)
g(is)g(especially)g(important)e(for)h(parallel)h(programmers)e(who)i(come)f
(up)h(with)117 288 y(many)e(possible)f(scheduling)h(algorithms)e(and)i(want)f
(to)g(compare)g(them)g(empirically)l(.)896 2836 y(116)p eop
%%Page: 117 131
 bop 75 490 a fm(Chapter)25 b(7)75 802 y(Conclusions)75 1153 y fr(7.1)71 b
(Summary)75 1372 y fq(In)17 b(this)h(thesis,)h(we)f(have)g(proposed)f(a)h(gen\
eral)f(parallel)g(programming)f(model,)j(called)e(the)h fl(multilist)75 1450 y
(scheduling)c(model)p fq(,)h(which)f(decomposes)h(task)g(scheduling)f(into)g
(\(1\))f(the)h(speci\256cation)g(of)g(scheduling)75 1529 y(policies)20 b(and)
g(\(2\))f(the)h(implementation)e(of)i(supportive)f(scheduling)h(operations)g
(\(e.g.,)i(routines)e(for)75 1607 y(maintaining)9 b(task)i(lists)f(and)h(hand\
ling)e(interprocessor)h(communication)f(for)g(load)i(balancing\),)f(and)g(the\
n)75 1685 y(hides)17 b(the)g(latter)g(details)g(from)f(the)h(programmer)-5 b
(.)33 b(This)18 b(model)e(is)i(based)f(on)g(a)h(uniform)d(scheduling)75 1763 y
(model)10 b(involving)g(the)g(use)h(of)f(multiple)g(scheduling)g(lists.)18 b
(The)11 b(system)g(has)g(the)g(following)e(advantages:)135 2086 y(1.)25 b fl
(Ease)9 b(of)g(use)p fq(.)17 b(Under)8 b(this)h(new)f(model,)i(programmers)d
(only)h(need)h(to)f(specify)h(scheduling)f(policies)197 2164 y(based)13 b(on)
f(scheduling)g(lists)h(in)f(order)g(to)g(implement)g(scheduling)g(algorithms;)
f(they)i(do)f(not)g(need)197 2242 y(to)h(write)f(the)h(details)h(of)e(support\
ive)h(scheduling)g(routines.)20 b(In)12 b(fact,)i(the)f(supportive)f(scheduli\
ng)197 2321 y(routines)h(are)h(the)g(most)g(dif)n(\256cult)g(and)g(time-consu\
ming)e(part)i(to)f(write.)23 b(T)m(ypically)13 b(they)h(require)197 2399 y
(thousands)h(of)g(lines)g(of)f(code)h(in)g(C.)g(This)h(was)f(the)g(case)g(in)
g(our)f(earlier)h(experience)f([31,)h(62])f(in)197 2477 y(parallelizing)c(Noo\
dles,)h(a)g(solid)f(modeling)g(program)g([23)o(].)18 b(It)10 b(took)g(us)h
(months)f(to)h(write)f(the)g(load)197 2555 y(balancing)i(part!)18 b(In)12 b
(sharp)h(contrast,)g(the)f(code)h(for)f(the)g fl(PDC-WK)i fq(and)e fl(PBFS-GP\
Q)i fq(scheduling)197 2634 y(algorithms)e(\(shown)g(in)h(Appendix)f(A.2\))g
(only)h(has)g(about)f(10-20)g(lines.)19 b(A)13 b(program)f(of)g(this)h(size)
197 2712 y(can)g(be)f(written)g(within)f(tens)i(of)f(minutes.)975 2836 y(117)
p eop
%%Page: 118 132
 bop 56 53 a fq(2.)24 b fl(Generality)p fq(.)35 b(W)l(e)18 b(have)f(shown)h
(that)g(our)f(new)g(model)h(results)g(in)f(no)h(loss)g(of)f(generality)g(with)
117 132 y(respect)h(to)f(the)g(standard)g(scheduling)g(model)g(\(see)h(Chapte\
r)f(2\).)32 b(That)18 b(is,)h(we)f(can)f(recast)h(any)117 210 y(scheduling)g
(algorithm)e(in)h(terms)h(of)f(our)g(multilist)f(scheduling)i(model.)33 b(W)l
(e)18 b(have)f(illustrated)117 288 y(the)d(generality)g(of)g(the)g(model)f
(by)h(implementing)f(nine)h(scheduling)g(algorithms)g(\(in)f(Chapter)h(3\))
117 366 y(based)f(on)e(the)h(model)f(\320)h(two)g(for)f(parallel)g(divide-and\
-conquer)f(and)h(two)h(for)f(parallel)g(best-\256rst)117 445 y(search,)17 b
(two)f(for)e(parallel)h(network)g(simulation,)h(one)f(for)g(parallel)g(quicks\
ort,)h(one)g(for)e(parallel)117 523 y(loops,)f(and)g(one)f(for)g(parallel)f
(alpha-beta)h(search.)56 718 y(3.)24 b fl(Ef\256ciency)p fq(.)175 956 y fk
(\017)h fq(W)l(e)14 b(have)f(shown)h(that)f(our)g(general)h(approach)f(incurs)
g(no)h(signi\256cant)f(performance)f(over-)225 1034 y(head)k(at)h(least)g(for)
f(the)g(scheduling)h(algorithms)f(for)f(parallel)h(BFS)h(and)f(D&C.)h(Althoug\
h)225 1112 y(the)c(ultimate)f(goal)h(would)g(be)g(to)g(show)g(that)g(our)g
(general)f(approach)h(incurs)g(no)g(signi\256cant)225 1191 y(overhead)f(for)g
fl(any)g fq(scheduling)h(algorithm,)f(this)g(goal)h(appears)f(to)h(be)f(impos\
sible)h(to)f(meet.)225 1269 y(Our)j(limited)g(success,)k(however)m(,)f(is)e
(still)g(signi\256cant.)28 b(In)16 b(the)g(past,)h(it)f(was)g(unclear)g(how)
225 1347 y(to)k(support)f(scheduling)h(algorithms)g(for)f(both)h(parallel)g
(BFS)f(and)i(D&C)f(in)g(a)g(uniform)225 1425 y(framework)11 b([34)o(].)18 b
(W)l(e)13 b(believe)f(our)g(system)h(is)f(the)h(\256rst)f(that)g(can)g(do)h
(so.)175 1555 y fk(\017)25 b fq(W)l(e)20 b(have)g(devised)h(an)f(ef)n(\256cie\
nt)g(technique)g(to)g(cope)g(with)g(the)g(main)f(problem)h(of)f(task)225 1633
y(prioritization)6 b(which)i(arises)g(when)g(there)g(is)h(a)f(sparse)g(distri\
bution)f(of)h(priorities.)16 b(When)8 b(few)225 1711 y(tasks)h(have)g(the)g
(same)g(priority)-5 b(,)10 b(it)f(would)f(be)h(inef)o(\256cient)f(to)g(simply)
h(perform)e(load)i(balancing)225 1789 y(by)g(considering)g(only)g(those)g(tas\
ks)h(that)g(have)f(the)g(highest)h(priority)-5 b(.)17 b(Our)9 b(approach)g
(is)h(to)f(use)225 1868 y(a)k(novel)g(algorithm,)f(called)h(the)g(parallel)g
(range)g(selection)g(\(PRS\))f(algorithm)g(\(see)h(Section)225 1946 y(5.2\),)
e(to)f(try)f(to)h(select)g(additional)g(highest-priority)e(tasks,)j(such)g
(that)f(the)g(total)f(computation)225 2024 y(time)17 b(of)g(these)i(tasks)f
(is)g(comparable)f(to)h(the)g(maximum)e(overhead)i(for)f(load)g(balancing.)
225 2102 y(Then,)e(we)f(schedule)g(tasks)g(from)f(this)g(set)i(in)e(order)g
(to)h(balance)f(the)h(load.)22 b(In)14 b(Section)f(5.2,)225 2181 y(we)g(prove\
d)g(that)g(the)h(PRS)f(algorithm)f(only)h(requires)g(one)h(combining)e(and)i
(disseminating)225 2259 y(operation)d(\(de\256ned)g(in)g(Section)h(4.1.2.2\),)
h(and)f(each)g(packet)g(size)g(in)g(the)f(algorithm)g(is)h(only)225 2337 y fj
(O)q fh(\()p fq(log)346 2316 y fi(2)373 2337 y fj(p)p fh(\))p fq(,)19 b(where)
e fj(p)g fq(is)g(the)g(number)g(of)f(processors.)32 b(This)18 b(results)f(sho\
w)g(that)g(the)g(PRS)225 2415 y(algorithm)11 b(performs)g(very)h(ef)o(\256cie\
ntly)g(on)g(network-based)g(multicomputers.)175 2545 y fk(\017)25 b fq(W)l
(e)7 b(have)h(obtained)f(good)g(experimental)g(results.)17 b(For)7 b(example,)
h(for)f(a)h(speci\256c)f(set)h(covering)225 2623 y(problem)13 b(requiring)g
(less)i(than)f(500)h(seconds,)h(we)e(obtain)g(a)h(speedup)f(of)g(7.71)h(for)e
(parallel)225 2701 y(D&C)f(and)h(7.33)f(for)g(parallel)g(BFS)g(on)g(Nectar)g
(with)g(8)g(processors.)896 2836 y(118)p eop
%%Page: 119 133
 bop 75 59 a fr(7.2)71 b(Contributions)75 259 y fq(The)17 b(main)e(contributi\
on)g(of)h(this)g(thesis)h(is)f(a)g(new)g(approach)g(for)f(parallel)h(task)g
(scheduling,)i fl(multilist)75 338 y(scheduling)p fq(,)24 b(which)c(is)i(easy)
f(to)g(use,)j(general,)f(and)e(ef)o(\256cient.)44 b(This)22 b(new)f(approach)
g(successfully)75 416 y(decomposes)16 b(the)g(task)g(scheduling)g(process)g
(into)f(the)h(speci\256cation)g(of)f(scheduling)h(policies)f(and)h(the)75 494
y(supportive)e(scheduling)g(routines)g(such)h(that)f(the)h(scheduling)f(progr\
ammers)f(can)i(focus)f(on)g(designing)75 572 y(ef)o(\256cient)j(scheduling)g
(algorithms,)g(while)g(the)g(system)h(designers)f(can)h(focus)f(on)g(designin\
g)g(ef)n(\256cient)75 651 y(supportive)12 b(routines.)148 796 y(While)g(propo\
sing)g(this)g(new)h(model,)f(we)h(also)g(make)f(the)g(following)f(contributio\
ns:)148 1015 y fk(\017)24 b fq(W)l(e)11 b(develop)f(some)h(multilist)f(schedu\
ling)h(schemes)g(to)g(implement)f(nine)g(scheduling)h(algorithms)197 1093 y
(\320)19 b(two)g(for)f(parallel)g(divide-and-conquer)f(and)i(two)g(for)f(para\
llel)g(best-\256rst)h(search,)i(two)e(for)197 1171 y(parallel)10 b(network)g
(simulation,)g(one)h(for)f(parallel)g(quicksort,)g(one)h(for)f(parallel)g(loo\
ps,)h(and)f(one)h(for)197 1249 y(parallel)h(alpha-beta)g(search.)148 1385 y fk
(\017)24 b fq(W)l(e)13 b(show)f(that)g(the)h(multilist)e(scheduling)h(model)g
(results)h(in)f(no)g(loss)h(of)f(generality)g(with)g(respect)197 1464 y(to)g
(the)g(standard)h(scheduling)f(model)g(\(see)h(Chapter)f(2\).)148 1600 y fk
(\017)24 b fq(W)l(e)12 b(present)f(an)h(ef)o(\256cient)f(scheduling)g(algorit\
hm)g(for)g(parallel)g(D&C)g(and)h(prove)f(that,)h(among)f(all)197 1678 y(the)
f(scheduling)f(algorithms)g(which)h(can)g(split)f(the)h(load)f(nearly)h(evenl\
y)l(,)h(our)e(algorithm)g(is)h(optimal)197 1756 y(with)i(respect)g(to)h(the)f
(communication)f(cost.)148 1892 y fk(\017)24 b fq(W)l(e)12 b(design)h(an)f
(ef)o(\256cient)f(PRS)h(algorithm)f(for)g(the)h(situation)g(of)g(sparse)h(pri\
ority)d(distribution)h(and)197 1970 y(prove)f(that)h(the)f(algorithm)g(only)g
(needs)h(one)g(combining)f(and)g(then)h(one)f(disseminating)h(operation)197
2049 y(and)h(each)h(packet)f(size)h(is)g(only)f fj(O)r fh(\()p fq(log)885 2028
y fi(2)912 2049 y fj(p)p fh(\))p fq(,)i(where)e fj(p)h fq(is)f(the)h(number)e
(of)h(processors.)148 2185 y fk(\017)24 b fq(W)l(e)e(design)h(an)f(ef)o(\256c\
ient)g(data)g(structure)g(for)f(the)h(operations,)j(I)p fp(NSER)m(T)p fq(,)h
(D)p fp(ELETE)p fq(,)h(M)p fp(AXPRI)p fq(,)197 2263 y(D)p fp(ELETEMAX)p fq
(,)11 b(T)p fp(HRESHPRI)p fq(,)e(and)f(S)p fp(PLIT)h fq(\(see)f(Section)g(4.2\
\).)17 b(W)l(e)8 b(also)g(prove)f(that)h(the)g(computation)197 2341 y(times)
22 b(for)f(all)h(the)h(above)f(operations)g(are)g fj(O)q fh(\()p fq(log)8 b fj
(n)p fh(\))p fq(,)25 b(where)d fj(n)h fq(is)f(the)g(number)g(of)f(distinct)
197 2419 y(priorities)12 b(in)g(the)h(priority)e(queues,)j(and)e(the)h(amorti\
zed)f(times)h(for)f(the)g(above)h(operations)f(which)197 2498 y(access/insert\
/delete)h(a)g(task)f(with)g(the)h(highest)f(or)g(lowest)g(priority)f(are)i fj
(O)q fh(\()p fq(1)p fh(\))p fq(.)148 2634 y fk(\017)24 b fq(W)l(e)11 b(demons\
trate)f(good)h(performance)e(results)i(for)f(the)h(scheduling)f(algorithms)g
(for)g(parallel)g(BFS)197 2712 y(and)i(D&C.)975 2836 y(119)p eop
%%Page: 120 134
 bop 69 53 a fq(Multilist)9 b(scheduling)g(is)h(the)g(\256rst)f(approach)g
(which)g(can)h(hide)f(the)h(details)g(of)f(supportive)g(scheduling)-4 132 y
(routines)14 b(while)h(simultaneously)g(supporting)f(general)h(task)h(schedul\
ing.)26 b(W)l(e)16 b(expect)f(that)g(this)g(thesis)-4 210 y(will)j(have)h(a)g
(signi\256cant)f(impact)h(on)f(future)g(parallel)g(programming,)h(especially)
g(in)g(the)g(domain)f(of)-4 288 y(multicomputers.)-4 552 y fr(7.3)70 b(Future)
18 b(W)l(ork)-4 748 y fq(The)12 b(above)h(research)f(can)h(be)f(extended)h
(in)f(the)g(following)f(directions.)68 948 y fk(\017)24 b fq(Apply)16 b(the)g
(model)g(to)g(more)f(applications,)i(such)g(as)f(operations)g(research)g(prob\
lems)g(\(e.g.,)i(the)117 1026 y(traveling)11 b(salesman)h(problem)e([76)o(]\)\
,)h(alpha-beta)g(search)g(problems,)h(network)e(simulation)h(prob-)117 1104 y
(lems,)i(scienti\256c)g(problems,)f(and)g(any)h(other)f(interesting)f(problem\
s.)68 1224 y fk(\017)24 b fq(Formalize)13 b(a)g(language/interface.)19 b(This)
14 b(also)f(includes)g(two)g(important)f(parallel)g(programming)117 1302 y
(issues:)23 b(handling)13 b(global)h(variables)g([14)o(,)h(15])e(and)h(callin\
g)g(remote)g(procedures)f([7,)h(13,)h(54,)f(93,)117 1380 y(96,)f(102])f(over)
g(distributed-memory)e(systems.)68 1500 y fk(\017)24 b fq(Add)17 b(fault)g
(tolerance)f(to)h(the)g(system.)33 b(It)17 b(is)g(especially)h(important)d
(for)i(a)g(network)f(to)h(tolerate)117 1578 y(processor)c(failure.)k(For)12 b
(example,)h(a)f(remote)g(workstation)g(may)g(be)g(turned)g(of)o(f)g(unexpecte\
dly)l(.)68 1698 y fk(\017)24 b fq(Develop)14 b(tools)g(on)f(top)g(of)h(this)f
(package)h(for)f(debugging)g([26)o(],)i(performance)d(monitoring)g([19)o(],)
117 1776 y(and)h(graphical)f(development)f([12].)68 1896 y fk(\017)24 b fq
(Port)15 b(our)g(model)g(to)h(other)f(parallel)g(systems,)i(e.g.,)h(CM5)e([99\
])f(and)h(iW)-5 b(arp)16 b([18)o(];)h(also)f(port)f(the)117 1974 y(programmin\
g)c(system)i(to)f(other)g(network)g(interfaces,)g(e.g.,)i(PVM)e(and)h(sockets)
g(of)f(TCP/IP)-6 b(.)896 2836 y(120)p eop
%%Page: 121 135
 bop 75 490 a fm(Appendix)24 b(A)75 802 y(User)i(Interface)75 1113 y fq(The)
15 b(current)e(multilist)g(scheduling)h(system)h(is)f(operational)f(at)h(CMU.)
i(It)d(has)i(a)f(C)g(language)g(interface.)75 1191 y(This)f(interface)f(is)g
(presented)h(in)f(Section)g(A.1)h(in)f(enough)g(detail)g(to)h(illuminate)e
(the)h(code)h(of)f(the)g fl(PBFS-)75 1269 y(GPQ)h fq(and)f fl(PDC-WK)i fq(sch\
eduling)e(algorithms,)g(which)g(will)g(be)h(presented)f(in)g(Section)g(A.2.)
75 1539 y fr(A.1)70 b(Interface)21 b(De\256nitions)75 1737 y fq(T)m(o)12 b
(distinguish)h(our)f(interface)f(from)h(system)h(calls)f(or)g(variables,)h
(we)g(pre\256x)f(each)g(function)g(name)g(with)75 1815 y(\252)p fb(MLS_)p fq
(\272)g(\(MultiList)h(Scheduling\).)75 2058 y fd(A.1.1)57 b(Initializing)16 b
(the)f(Multilist)h(Scheduling)g(System)75 2238 y fb(void)29 b(MLS_Init)g(\(sp\
ec,)h(pkey_type,)e(min_grain\);)148 2410 y fq(The)13 b fb(MLS_Init\(\))e fq
(procedure)h(initializes)g(the)h(multilist)e(scheduling)h(system.)148 2555 y
(The)j(parameter)e fb(spec)h fq(is)g(the)g(name)g(of)g(a)g(user)o(-de\256ned)
f(routine)h(which)f(speci\256es)i(the)f(scheduling)75 2634 y(pattern,)d(i.e.,)
i(the)e(declaration)g(of)f(PLs)i(and)f(the)g(mer)o(ge)g(patterns)g(for)f(VLs)
i(\(all)f(of)f(which)h(will)g(be)g(de\256ned)75 2712 y(later\).)18 b(In)11 b
(the)i(current)e(implementation,)h(the)g(routine)g(can)g(only)g(be)h(executed)
f(inside)h fb(MLS_Init\(\))p fq(.)975 2836 y(121)p eop
%%Page: 122 136
 bop 69 53 a fq(The)15 b(parameter)e fb(min_grain)h fq(is)h(an)f(integer)n
(,)h(representing)f(the)g(minimum)g(task)g(grain)g(size)h(used)-4 132 y(in)j
(the)g(computation.)36 b(The)19 b(system)g(currently)f(assumes)h(that)g(all)f
(tasks)h(have)g(the)g(same)g(grain)f(size.)-4 210 y(This)d(parameter)g(provid\
es)f(the)h(task)h(grain)e(size)i(so)f(that)g(the)g(system)h(can)f(easily)g
(set)h(up)f(some)g(system)-4 288 y(parameters)f(for)g(load)h(balancing.)26 b
(In)14 b(our)h(current)f(system,)i(since)g(the)f(overhead)f(for)g(task)i(sche\
duling)-4 366 y(and)e(creation)f(is)i(already)f(80)g(microseconds)g(\(as)g
(shown)h(in)f(Section)f(6.3\))i(on)f(a)g(Sun4/330,)g(we)g(let)h(one)-4 445 y
(unit)c(of)h(grain)g(size)h(stand)g(for)e(100)h(microseconds)h(on)f(Sun4/330s\
.)69 590 y(The)i(parameter)f fb(pkey_type)g fq(determines)h(the)f(type)h(of)f
(priority)g(keys)h(used)g(in)g(the)g(system.)23 b(The)-4 668 y(choices)12 b
(are)h(integer)m(,)g(string,)f(bit)h(string,)f(etc.)19 b(But,)13 b(since)f
(the)h(integer)f(type)g(is)h(most)f(common,)g(we)h(only)-4 746 y(support)i
(the)i(integer)f(type)g(\()p fb(MLS_INT_KEY)p fq(\))e(in)i(the)h(current)e
(implementation.)30 b(The)16 b(work)g(in)h([85)o(])-4 825 y(uses)c(bit)f(stri\
ng)g(as)h(the)f(key)g(type.)69 970 y(Since)j(our)f(system)i(is)g(in)f(the)g
(SPMD)g(\(single)g(program,)g(multiple)g(data\))g(style)g([56)o(],)i(the)e
(program)-4 1048 y(is)g(replicated)g(on)h(each)g(processor)m(.)28 b(Each)16 b
(instance)g(of)f(the)g(program)g(\(on)g(a)g(distinct)h(processor\))f(must)-4
1126 y(explicitly)10 b(call)i fb(MLS_Init\(\))f fq(before)f(calling)i(any)f
(other)g(functions)g(which)h(are)f(described)h(below)f(for)-4 1205 y(the)h
(multilist)f(scheduling)i(system.)-4 1472 y fd(A.1.2)57 b(Physical)14 b(Lists)
-4 1657 y fq(There)e(are)g(two)h(kinds)f(of)g(physical)g(lists)h(\(PLs\):)18 b
(base)13 b(PLs)g(and)f(derived)g(PLs.)-4 1838 y fb(MLS_List_p)28 b(MLS_Base_P\
L)h(\(list_name,)g(list_type,)713 1916 y(lb,)g(ub,)h(Indiv_Range\);)69 2097 y
fq(The)12 b fb(MLS_Base_PL\(\))f fq(procedure)g(creates)h(a)g(base)h(PL)f(wit\
h)g(the)f(name)h fb(list_name)p fq(,)g(the)g(type)-4 2175 y fb(list_type)p fq
(,)j(the)g(expected)g(priority)e(range)i(between)g fb(lb)g fq(and)g fb(ub)g fq
(\(inclusive\))f(and)h(the)g(indivisible)-4 2254 y(function)c fb(Indiv_Range)
p fq(,)h(and)g(then)g(returns)g(a)h(pointer)f(to)g(the)g(PL)h(with)f(type)g fb
(MLS_List_p)p fq(.)18 b(Note)-4 2332 y(that)12 b(the)g(word)g fb(list)g fq
(in)g(our)g(interface,)g(by)g(convention,)h(represents)f(PL.)69 2477 y(The)k
(parameters)f fb(lb)g fq(and)h fb(ub)f fq(respectively)h(specify)f(the)h(lowe\
r)f(bound)g(and)g(upper)g(bound)h(of)f(the)-4 2555 y(priority)d(range)i(in)g
(this)h(PL.)g(If)e(the)i(bounds)f(are)g(not)g(known)g fl(a)g(priori)p fq(,)i
(the)e(user)g(can)h(use)g(the)f(complete)-4 2634 y(priority)k(range,)23 b(who\
se)d(lower)g(bound)g(and)g(upper)g(bound)f(are)i(respectively)f fb(MLS_MIN_PR\
I)f fq(and)-4 2712 y fb(MLS_MAX_PRI)p fq(,)11 b(de\256ned)h(by)h(the)f(system\
.)896 2836 y(122)p eop
%%Page: 123 137
 bop 148 53 a fq(The)15 b(parameter)e fb(Indiv_Range)g fq(is)i(some)f(user)o
(-de\256ned)g(function)f fb(IR\(pri\))p fq(:)20 b(given)14 b fb(pri)p fq(,)h
(the)75 132 y(function)8 b fb(IR\(\))g fq(returns)g(a)g(priority)f(range)i
(containing)f(the)g(priority)f fb(pri)p fq(.)17 b(The)9 b(PL)g(can)f(use)h
(this)g(function)75 210 y(to)k(determine)g(if)f(a)i(new)f(maximum)g(priority)
e(is)j(out)f(of)g(the)g(original)f(priority)g(range.)21 b(If)12 b(so,)i(the)g
(system)75 288 y(may)d(need)h(to)f(report)f(to)h(another)g(processor)m(.)18 b
(\(See)11 b(Section)g(4.1.1.\))18 b(If)10 b(the)i(parameter)e fb(Indiv_Range)
75 366 y fq(is)k(null,)g(this)f(implies)h(that)f(each)h(priority)e(is)i(a)f
(distinct)h(indivisible)f(priority)f(range.)21 b(If)13 b(the)g(PL)h(will)f
(not)75 445 y(be)f(mer)o(ged)g(into)g(any)h(VL)g(on)f(another)g(processor)n
(,)h(the)f(parameter)f fb(Indiv_Range)h fq(has)h(no)f(ef)o(fect.)148 590 y
(W)l(e)h(currently)e(restrict)g(the)h(list)g(type)g(to)g(2-4)g(trees)g(\(see)
g(Section)g(4.2.1\))g(to)g(implement)g(PLs.)19 b(But,)12 b(in)75 668 y(the)h
(future,)g(the)g(parameter)g fb(list_type)f fq(may)i(be)f(used)h(to)f(specify)
g(another)g(type)g(of)g(list,)h(in)f(case)h(we)75 746 y(discover)e(some)h(typ\
e)f(of)g(list)g(which)h(is)f(more)g(ef)o(\256cient)g(for)f(some)i(cases.)148
892 y(If)j(this)h(procedure)f(is)h(called)f(for)g(the)h fj(j)s fq(th)f(time)g
(on)h(processor)f fj(P)1329 899 y fg(i)1344 892 y fq(,)i(the)f(created)f(PL)h
(is)g(designated)75 970 y fj(P)7 b(L)146 977 y fg(ij)177 970 y fq(.)23 b(In)
14 b(the)g(current)f(version,)h(we)h(simplify)e(operations)g(by)h(assuming)h
(that)e(all)h fj(j)s fq(th)g(lists)h fj(P)7 b(L)1806 977 y fe(\003)p fg(j)
1856 970 y fq(have)75 1048 y(the)k(same)h(list)f(name)g(and)g(have)h(the)f
(same)g(parameters.)18 b(So,)12 b(we)f(do)g(not)g(need)g(communication)g(to)g
(set)g(up)75 1126 y(associated)i(links)g(\(in)e(the)i(scheduling)f(pattern\).)
75 1314 y fb(MLS_List_p)29 b(MLS_Derived_PL)f(\(list_name,)h(base,)g(func,)g
(inv)882 1392 y(lb,)h(ub,)f(Indiv_Range\);)148 1580 y fq(The)21 b fb(MLS_Deri\
ved_PL\(\))f fq(procedure)g(creates)h(a)g(derived)f(PL)h(which)f(is)i(based)f
(on)g(a)f(base)75 1659 y(PL)d fb(base)g fq(with)g(the)g(priority)f(translatio\
n)g(function)g fb(func)p fq(,)j(whose)e(inverse)g(function)g(is)g fb(inv)p fq
(.)33 b(The)75 1737 y(parameters)13 b fb(list_name)p fq(,)f fb(lb)p fq(,)i fb
(ub)p fq(,)f(and)g fb(Indiv_Range)f fq(are)h(the)f(same)i(as)f(those)h(for)e
(base)h(PLs.)21 b(If)75 1815 y(this)11 b(PL)h(is)g(not)f(part)g(of)f(a)i(glob\
al)f(scheduling)g(subpattern,)h(the)f(inverse)g(function)g fb(inv)g fq(will)g
(not)g(be)g(used.)75 1893 y(Note)h(that)g(this)h(operation)e(for)h(derived)g
(PLs)h(has)g(not)f(yet)g(been)h(implemented.)75 2179 y fd(A.1.3)57 b(Merging)
15 b(Physical)f(Lists)g(into)h(V)n(irtual)h(Lists)75 2367 y fq(In)10 b(the)g
(current)g(implementation,)g(we)h(provide)e(the)i(following)e(functions)h(to)
g(specify)h(how)f(to)g(mer)o(ge)g(PLs)75 2446 y(into)i(VLs:)75 2634 y fb(void)
29 b(MLS_Merge)g(\(list_name,)g(procx\);)75 2712 y(void)g(MLS_Merge_Local)g
(\(list_name\);)975 2836 y fq(123)p eop
%%Page: 124 138
 bop 69 53 a fq(Assume)20 b(that)g(the)f(procedure)g fb(MLS_Merge\(\))g fq
(is)h(executed)g(on)f(a)h(processor)g fj(P)1595 60 y fg(i)1609 53 y fq(.)41 b
(Then,)23 b(this)-4 132 y(procedure)9 b(speci\256es)i(that)g(a)g(PL)f(named)h
fb(list_name)e fq(on)i(processor)f fj(P)1290 139 y fg(j)1320 132 y fq(will)g
(be)g(mer)o(ged)g(into)h fj(V)g(L)1785 139 y fg(i)1810 132 y fq(ac-)-4 210 y
(cording)d(to)g(the)h(standard)g(protocol,)g(where)f fj(j)17 b fh(=)9 b fb
(procx)p fq(.)17 b(If)8 b fj(j)16 b fh(=)e fj(i)p fq(,)c(we)f(can)g(use)g fb
(MLS_Merge_Local)-4 288 y fq(instead.)18 b(In)11 b(any)h(case,)h(a)f(system)h
(variable,)f(called)f fb(MLS_this_proc)g fq(\()p fh(=)i fj(i)p fq(\),)f(is)g
(provided)f(to)h(refer)f(to)-4 366 y(the)h(current)f(processor)i fj(P)457 373
y fg(i)471 366 y fq(.)-4 544 y fb(void)29 b(MLS_Merge_All\(list_name\);)69 722
y fq(Assume)18 b(that)g(the)f(procedure)g fb(MLS_Merge_All\(\))f fq(is)i(exec\
uted)g(on)g(a)g(processor)g fj(P)1695 729 y fg(i)1709 722 y fq(.)35 b(Then,)
-4 801 y(this)14 b(procedure)f(speci\256es)i(that)f(all)g(the)g(PLs)h(named)f
fb(list_name)g fq(\(over)f(the)h(whole)g(system\))h(will)e(be)-4 879 y(mer)n
(ged)h(into)g(the)g(VL)h(on)f(processor)g fj(P)706 886 y fg(i)720 879 y fq
(.)24 b(If)14 b(every)f(processor)i(calls)f(the)g(same)h(procedure,)f(the)g
(system)-4 957 y(can)e(apply)g(the)h(advanced)f(global)g(protocol)g(to)g(thes\
e)h(PLs.)-4 1135 y fb(void)29 b(MLS_Merge_Dynamic\(list_name,)e(pset\);)69
1313 y fq(Assume)10 b(that)g(the)g(procedure)g fb(MLS_Merge_Dynamic\(\))e fq
(is)i(executed)g(on)g(a)h(processor)f fj(P)1738 1320 y fg(i)1752 1313 y fq
(.)18 b(This)-4 1392 y(procedure)9 b(speci\256es)i(that)f(all)g(the)g(PLs)h
(named)f fb(list_name)g fq(in)g(a)g(set)h fj(S)i fq(of)d(processors)h(will)f
(be)g(mer)o(ged)-4 1470 y(into)g(the)h(VL)g(on)g(processor)g fj(P)527 1477 y
fg(i)542 1470 y fq(,)g(but)g(the)g(processor)g(set)g fj(S)j fq(can)d(be)g(dyn\
amically)g(determined)f(as)h(follows:)-4 1548 y(Whenever)e(processor)g fj(P)
441 1555 y fg(i)465 1548 y fq(tries)g(to)g(schedule)g(a)h(task)f(and)h(needs)
f(to)g(check)h(the)f(PLs)h(named)f fb(list_name)p fq(,)-4 1626 y(processor)i
fj(P)229 1633 y fg(i)254 1626 y fq(will)g(execute)g(the)g(function)g fb(pset\
\(\))f fq(again)h(to)g(obtain)g(the)g(new)g(set)h fj(S)s fq(,)g(and)f(then)g
(\256nd)g(the)-4 1705 y(highest)h(priority)f(among)h(PLs)h(on)f(the)g(process\
ors)h(in)f fj(S)s fq(.)69 1850 y(Let)j(us)g(consider)f(the)h(example)g(of)f fl
(PDC-RR)i fq(scheduling)e(algorithm.)24 b(The)16 b(programmer)d(can)i(call)-4
1928 y(this)d(function,)g(as)h(follows.)-4 2085 y fb(MLS_Merge_Dynamic\("GL",)
27 b(rr_pset\);)-4 2242 y fq(The)10 b(function)g fb(rr_pset\(\))p fq(,)g(prov\
ided)g(by)g(the)g(programmer)l(,)i(returns)d(the)i(next)f(processor)g(in)g
(a)h(round-)-4 2321 y(robin)f(fashion.)17 b(More)11 b(speci\256cally)m(,)h
(when)f(called,)h(this)f(function)f(lets)i(the)f(variable)f fj(s)k fh(=)g(\()
p fj(s)f fq(mod)h fj(p)p fh(\))8 b(+)h fq(1)-4 2399 y(and)17 b(returns)g fj
(s)h fq(so)g(that)f(the)h(system)g(knows)g(that)f(the)h(processor)f(set)h(inc\
ludes)g(processor)g fj(P)1695 2406 y fg(s)1714 2399 y fq(.)34 b(Since)-4 2477
y(the)15 b(programmer)e(also)j(needs)g(to)f(specify)g(the)g(priority)f(ranges)
h(of)g(GL)h(and)f(LL)h(such)g(that)f(the)g(system)-4 2555 y(knows)d(that)h
(each)g(priority)f(in)g(LL)i(is)f(no)g(less)h(than)e(that)h(in)g(GLs,)h(the)f
(processor)g(calls)g(the)g(function)f(and)-4 2634 y(schedules)h(a)g(task)h
(from)e(a)h(GL)g(only)g(when)g(there)f(are)h(no)g(local)g(tasks.)21 b(Thus,)
14 b(the)f(system)g(will)g(perform)-4 2712 y(as)f(described)h(in)f([34)o(,)h
(44,)g(82].)896 2836 y(124)p eop
%%Page: 125 139
 bop 75 53 a fd(A.1.4)57 b(Priority)15 b(Assignment)75 232 y fb(void)29 b(MLS\
_Task_Pri)g(\(PL,)g(T,)h(pri\);)75 310 y(void)f(MLS_Change_Pri)g(\(PL,)g(T,)h
(pri\);)148 480 y fq(The)19 b(procedure)f fb(MLS_Task_Pri\(\))p fq(,)h(assume\
d)h(to)e(be)h(called)g(on)f(processor)h fj(P)1674 487 y fg(i)1688 480 y fq
(,)i(inserts)e(task)75 558 y fb(T)f fq(into)f(the)h(PL)g fb(PL)g fq(on)f(proc\
essor)h fj(P)758 565 y fg(i)791 558 y fq(according)f(to)h(the)f(priority)g fb
(pri)p fq(.)34 b(But,)20 b(if)d(the)h(value)g(of)f fb(pri)75 636 y fq(is)h fb
(MLS_UNDEF_PRI)p fq(,)f(the)g(system)h(will)g(not)f(insert)h(the)f(task)h(int\
o)f(the)h(PL.)g(Note)g(that)f(the)h(current)75 715 y(implementation)11 b(does)
i(not)f(support)g(the)g(feature)g(of)g(creating)g(a)g(task)h(on)f(another)g
(processor)m(.)148 860 y(Similarly)-5 b(,)20 b(the)e fb(MLS_Change_Pri\(\))e
fq(procedure,)j(assumed)f(to)g(be)g(called)g(on)f(processor)h fj(P)1923 867 y
fg(i)1938 860 y fq(,)75 938 y(changes)13 b(the)f(priority)f(of)h(task)h fb
(T)f fq(to)g fb(pri)p fq(.)75 1202 y fr(A.2)70 b(Examples)75 1398 y fq(Using)
14 b(the)g(above)h(interface)e(de\256nitions,)h(we)h(will)f(illustrate)f(the)
h(code)g(for)g(the)g fl(PDC-WK)h fq(and)f fl(PBFS-)75 1477 y(GPQ)f fq(schedul\
ing)f(algorithms,)g(below)m(.)975 2836 y(125)p eop
%%Page: 126 140
 bop -4 91 a fa(/***)24 b(following)g(are)h(in)f(the)h(file)g(PBFS.h)f(***/)
-4 156 y(extern)g(void)g(PBFS_Schd\(\);)74 b(/*)25 b(scheduler)f(for)g(PBFS)h
(*/)-4 220 y(MLS_List_p)48 b(LT;)299 b(/*)25 b(scheduling)f(list)g(*/)-4 350 y
(/*)g(interface)g(for)h(the)g(programmer)f(writing)g(BFS)g(application)g(code\
.)h(*/)-4 415 y(#define)f(DECLARE_NODE\(T,c\))f(MLS_Task_Pri\(LT,T,-c\))-4 479
y(#define)h(INIT_PBFS\(g\))g(MLS_Init\(PBFS_Schd,)f(g,)h(INTKEY\))-4 609 y
(/***)g(following)g(are)h(in)f(the)h(file)g(PBFS.c)f(***/)-4 674 y(void)g(PBF\
S_Schd)g(\(\))h({)95 738 y(/*)g(create)f(a)h(PL)g(*/)95 803 y(LT)g(=)g(MLS_Ba\
se_PL)f(\("LT",)g(MLS_INT_KEY,)g(MLS_MIN_PRI,)f(MLS_MAX_PRI,)h(NULL\);)95 933
y(/*)h(merge)f(all)h(PLs)g(\(named)f("LT"\))g(in)h(the)g(entire)f(system)g
(*/)95 997 y(MLS_Merge_All\("LT"\);)-4 1062 y(})298 1206 y fq(Figure)11 b(A.1\
:)19 b(The)13 b(code)f(for)g(the)g fl(PBFS-GPQ)i fq(scheduling)e(algorithm.)
-4 1364 y fa(/***)24 b(following)g(are)h(in)f(the)h(file)g(PDC.h)f(***/)-4
1429 y(extern)g(void)g(PDC_Schd\(\);)74 b(/*)25 b(scheduler)f(for)g(PDC)h(*/)
-4 1494 y(MLS_List_p)48 b(LL,)25 b(GL;)174 b(/*)25 b(local)f(and)h(global)f
(scheduling)g(lists)h(*/)-4 1624 y(/*)f(interface)g(for)h(the)g(programmer)f
(writing)g(D&C)g(application)g(code.)h(*/)-4 1688 y(#define)f(DECLARE_NODE\(T\
,l\))f(\\)95 1753 y({)i(MLS_Task_Pri\(T,LL,l\);)e(MLS_Task_Pri\(T,GL,-l\);)g
(})-4 1818 y(#define)h(INIT_PDC\(\))g(MLS_Init\(PDC_Schd,)f(DC_GRAIN,)h(INTKE\
Y\))-4 1947 y(/***)g(following)g(are)h(in)f(the)h(file)g(PDC.c)f(***/)-4 2012
y(void)g(PDC_Schd)g(\(\))h({)95 2077 y(/*)g(create)f(two)h(PLs)f(*/)95 2142 y
(LL)h(=)g(MLS_Base_PL)f(\("LL",)g(MLS_INT_KEY,)g(0,)g(MLS_MAX_PRI,)g(NULL\);)
95 2206 y(GL)h(=)g(MLS_Base_PL)f(\("GL",)g(MLS_INT_KEY,)g(MLS_MIN_PRI,)f(0,)i
(NULL\);)95 2336 y(/*)g(merge)f(the)h(local)f(LL)h(and)g(all)f(GLs)h(*/)95
2401 y(MLS_Merge_Local\("LL"\);)95 2465 y(MLS_Merge_All\("GL"\);)-4 2530 y
(})320 2674 y fq(Figure)12 b(A.2:)18 b(The)13 b(code)f(for)g(the)g fl(PDC-WK)
h fq(scheduling)g(algorithm.)896 2836 y(126)p eop
%%Page: 127 141
 bop 75 452 a fm(Bibliography)125 679 y fq([1])23 b(Abdelrahman,)12 b(T)m(.)h
(and)f(Mudge,)h(T)m(.)207 739 y fl(Parallel)g(B&B)g(Algorithms)g(on)f(Hyper)o
(cube)g(Multipr)o(ocessors)p fq(.)207 799 y(in:)18 b fn(Proc.)12 b(3th)g(Conf\
.)g(on)g(Hyper)o(cube)g(Concurr)o(ent)g(Computers)g(and)g(Applications)p fq
(.)207 859 y(1988,)h(pp.)g(1492\2611499.)125 940 y([2])23 b(Adam,)13 b(T)m
(.,)g(Chandy)m(,)g(K.,)g(and)f(Dickson,)h(J.)207 1001 y fl(A)g(Comparison)g
(of)f(List)g(Schedules)h(for)g(Parallel)f(Pr)o(ocessing)h(Systems)p fq(.)207
1061 y fn(Communications)f(of)g(the)g(ACM)p fq(,)h(vol.)g(17)f(\(1974\),)f
(pp.)i(685\261690.)125 1142 y([3])23 b(Aho,)13 b(A.,)g(Hopcroft,)f(J.,)i(and)
e(Ullman,)g(J.)207 1202 y fn(The)h(Design)f(and)g(Analysis)g(of)g(Computer)g
(Algorithms)p fq(.)207 1262 y(Addison)h(and)f(W)l(esley)m(,)h(1974.)125 1343 y
([4])23 b(Akl,)13 b(S.,)g(Barnard,)f(D.,)i(and)e(Doran,)g(R.)207 1404 y fl
(Design,)h(Analysis)h(and)e(Implementation)f(of)h(a)g(Parallel)h(T)m(r)o(ee)f
(Sear)o(ch)g(Algorithm)p fq(.)207 1464 y fn(IEEE)i(T)l(ransactions)e(on)g(Pat\
tern)g(Analysis)h(and)e(Machine)h(Intelligence)p fq(,)g(vol.)h(4)f(\(1982\),)
282 1524 y(pp.)h(192\261203.)125 1605 y([5])23 b(Anderson,)13 b(S.)f(and)h
(Chen,)g(M.)207 1665 y fl(Parallel)g(Branch-and-Bound)f(Algorithms)h(on)f(the)
h(Hyper)n(cube)p fq(.)207 1725 y(in:)18 b fn(Hyper)o(cube)12 b(Multipr)n(oces\
sors)p fq(,)i(edited)e(by)g(M.)h(Heath.)207 1786 y(SIAM)f(Press,)h(Philadelph\
ia,)f(1987.)125 1867 y([6])23 b(Arnould,)12 b(E.)i(A.,)f(Bitz,)g(F)l(.)f(J.,)
i(Cooper)n(,)f(E.)g(C.,)h(Kung,)e(H.)h(T)m(.,)g(Sansom,)g(R.)g(D.,)g(and)g
(Steenkiste,)282 1927 y(P)-6 b(.)13 b(A.)207 1987 y fl(The)f(Design)h(of)f
(Nectar:)18 b(A)13 b(Network)h(Backplane)e(for)h(Heter)n(ogeneous)g(Multicomp\
uters)p fq(.)207 2047 y(in:)18 b fn(Third)12 b(Intern.)g(Conf.)g(on)h(Ar)o
(chitectural)e(Support)g(for)h(Pr)o(ogramming)h(Languages)282 2107 y(and)f
(Operating)f(Systems)i(\(ASPLOS)f(III\))p fq(.)207 2168 y(Boston,)h(Massachus\
etts,)i(1989.)125 2249 y([7])23 b(Bal,)13 b(H.)207 2309 y fl(The)f(Shar)o(ed)
g(Data-Object)g(Model)g(as)h(a)f(Paradigm)h(for)g(Pr)o(ogramming)f(Distribute\
d)g(Systems)p fq(.)207 2369 y(V)m(rije)g(Universiteit,)g(Amsterdam,)h(Netherl\
ands,)f(1989.)125 2450 y([8])23 b(Balas,)14 b(E.)f(and)g(Ho,)f(A.)207 2510 y
fl(Set)h(Covering)f(Algorithms)h(Using)g(Cutting)f(Planes,)h(Heuristics,)h
(and)e(Subgradient)282 2571 y(Optimization:)17 b(a)12 b(Computational)f(Study)
p fq(.)207 2631 y fn(Mathematical)h(Pr)o(ogramming)p fq(,)i(vol.)e(12)g(\(198\
0\),)g(pp.)h(37\26160.)125 2712 y([9])23 b(Balas,)14 b(E.)f(and)g(Padber)n
(g,)g(M.)975 2836 y(127)p eop
%%Page: 128 142
 bop 128 53 a fl(Set)12 b(Partitioning:)17 b(A)c(Survey)p fq(.)128 114 y fn
(SIAM)f(Review)p fq(,)h(vol.)g(18)f(\(1976\),)g(pp.)g(710\261760.)20 199 y
([10])24 b(Balinski,)13 b(M.)g(and)f(Quandt,)h(R.)128 259 y fl(On)f(an)g(Inte\
ger)h(Pr)o(ogram)f(for)h(a)f(Delivery)h(Pr)o(oblem)p fq(.)128 319 y fn(Operat\
ions)e(Research)p fq(,)i(vol.)f(12)h(\(1964\),)e(pp.)i(300\261304.)20 405 y
([11])24 b(Baudet,)13 b(G.)128 465 y fl(The)f(Design)h(and)f(Analysis)h(of)f
(Algorithms)h(for)g(Asynchr)o(onous)f(Multipr)o(ocessors)p fq(.)128 525 y(Sch\
ool)g(of)g(Computer)f(Science,)i(Carnegie-Mellon)f(University)l(,)h(1978.)20
610 y([12])24 b(Beguelin,)13 b(A.,)g(Dongarra,)f(J.,)i(Geist,)f(G.,)g(Manchek\
,)g(R.,)h(and)e(Sunderam,)g(V)-6 b(.)128 670 y fl(Graphical)12 b(Development)
g(T)-5 b(ools)13 b(for)f(Network-Based)i(Concurr)o(ent)e(Super)o(computing)p
fq(.)128 731 y(in:)17 b fn(Proceedings)12 b(of)g(Super)o(computing)f('91)p fq
(,)h(IEEE.)128 791 y(Albequerque,)g(1991,)h(pp.)f(435\261444.)20 876 y([13])
24 b(Bershad,)13 b(B.,)h(Ching,)e(D.,)i(Lazowska,)f(E.,)h(Sanislo,)f(J.,)h
(and)e(Schwartz,)g(M.)128 936 y fl(A)h(Remote)g(Pr)n(ocedur)o(e)g(Call)f(Faci\
lity)g(for)h(Inter)n(connecting)f(Heter)n(ogeneous)h(Computer)203 996 y(Syste\
ms)p fq(.)128 1057 y fn(IEEE)g(T)m(ransaction)e(on)h(Softwar)n(e)h(Engineerin\
g)p fq(,)f(vol.)h(13)f(\(1987\),)g(pp.)g(880\261894.)20 1142 y([14])24 b(Birm\
an,)12 b(K.)h(and)f(Joseph,)i(T)m(.)128 1202 y fl(Exploiting)e(Replication)g
(in)g(Distributed)h(Systems)p fq(.)128 1262 y(in:)k fn(Distributed)11 b(Syste\
ms)p fq(,)j(edited)e(by)g(S.)h(Mullender)m(.)128 1322 y(Addison-W)-5 b(esley)
m(,)13 b(1989,)g(pp.)g(319\261368.)20 1408 y([15])24 b(Birman,)12 b(K.,)h(Jos\
eph,)h(T)m(.,)f(Kane,)g(K.,)g(and)g(Schmuch,)f(F)l(.)128 1468 y fl(ISIS)f(\
\261)i(A)f(Distributed)h(Pr)o(ogramming)f(Envir)o(onment)g(User)s(')-7 b(s)13
b(Guide)f(and)g(Refer)o(ence)h(Manual)p fq(.)128 1528 y(Department)e(of)h(Com\
puter)g(Science,)h(Cornell)f(University)l(,)h(March)f(1988.)20 1613 y([16])24
b(Blelloch,)13 b(G.,)g(Chatterjee,)f(S.,)i(Hardwick,)e(J.,)i(Sipelstein,)e
(J.,)i(and)e(Zagha,)i(M.)128 1674 y fl(Implementation)d(of)h(a)g(Portable)h
(Nested)g(Data-Parallel)f(Language)p fq(.)128 1734 y(in:)17 b fn(Fifth)12 b
(ACM)g(SIGPLAN)h(Symposium)g(on)f(Principles)g(and)g(Practice)h(of)f(Parallel)
203 1794 y(Pr)o(ogramming)p fq(.)128 1854 y(1993.)20 1939 y([17])24 b(Blum,)
12 b(M.,)i(Floyd,)e(R.,)i(Pratt,)e(V)-7 b(.,)14 b(Rivest,)f(R.,)h(and)e(T)m
(arjan,)g(R.)128 2000 y fl(T)m(ime)g(Bounds)h(for)g(Selection)p fq(.)128 2060
y fn(Journal)e(of)h(Computer)g(and)g(System)h(Sciences)p fq(,)g(vol.)f(7)h
(\(1973\),)e(pp.)i(448\261461.)20 2145 y([18])24 b(Borkar)m(,)13 b(S.,)g(Cohn\
,)g(R.,)g(Cox,)g(G.,)g(Gleason,)h(S.,)f(Gross,)g(T)l(.,)h(Kung,)e(H.)h(T)m
(.,)g(Lam,)g(M.,)h(Moore,)e(B.,)203 2205 y(Peterson,)g(C.,)i(Pieper)m(,)f(J.,)
g(Rankin,)g(L.,)h(T)m(seng,)f(P)-6 b(.)13 b(S.,)g(Sutton,)f(J.,)i(Urbanski,)f
(J.,)g(and)g(W)l(ebb,)203 2265 y(J.)128 2326 y fl(iW)l(arp:)k(An)c(Integrated)
f(Solution)g(to)g(High-Speed)f(Parallel)i(Computing)p fq(.)128 2386 y(in:)k fn
(Proceedings)12 b(of)g(Super)o(computing)f('88)p fq(,)h(IEEE)i(Computer)d(Soc\
iety)h(and)h(ACM)203 2446 y(SIGARCH.)128 2506 y(Orlando,)f(Florida,)g(1988,)g
(pp.)h(330\261339.)20 2592 y([19])24 b(Bruegge,)12 b(B.)128 2652 y fl(BEE:)h
(A)g(Basis)g(for)g(Distributed)f(Event)h(Envir)o(onments)g(\(Refer)n(ence)g
(Manual\))p fq(.)128 2712 y(no.)g(CMU-CS-90-180,)e(Carnegie-Mellon)h(Universi\
ty)l(,)h(November)f(1990.)896 2836 y(128)p eop
%%Page: 129 143
 bop 100 53 a fq([20])23 b(Bryant,)13 b(R.,)g(Beatty)m(,)g(D.,)g(Brace,)g(K.,)
h(Cho,)f(K.,)g(and)f(Shef)o(\257er)m(,)h(T)m(.)207 114 y fl(COSMOS:)g(A)g(Com\
piled)f(Simulator)g(for)g(MOS)h(Cir)o(cuits)p fq(.)207 174 y(in:)18 b fn(Proc\
eedings)12 b(of)g(the)g(Design)g(Automation)f(Confer)n(ence)p fq(,)i(ACM/IEEE\
.)207 234 y(1987,)g(pp.)g(9\26116.)100 313 y([21])23 b(Campbell,)13 b(M.)207
373 y fl(Algorithms)g(for)g(the)f(Parallel)h(Sear)n(ch)g(of)f(Game)g(T)m(r)o
(ees)p fq(.)207 434 y(no.)h(T)m(echnique)f(Report)g(81-8,)g(Computer)g(Scienc\
e)h(Department,)f(University)f(of)h(Alberta,)282 494 y(Canada,)h(August)g(198\
1.)100 573 y([22])23 b(Charnes,)13 b(A.)g(and)g(Miller)m(,)g(M.)207 633 y fl
(A)g(Model)g(for)f(the)h(Optimal)f(Pr)o(ogramming)g(of)g(Railway)h(Fr)o(eight)
f(T)m(rain)g(Movements)p fq(.)207 693 y fn(Management)g(Science)p fq(,)h(vol.)
f(3)h(\(1956\),)e(pp.)i(74\26192.)100 773 y([23])23 b(Choi,)13 b(Y)-6 b(.)207
833 y fl(V)h(ertex-Based)14 b(Boundary)e(Repr)o(esentation)h(of)f(Non-Manifol\
d)g(Geometric)g(Models)p fq(.)207 893 y(Engineering)g(Design)h(Research)g(Cen\
ter)n(,)g(Carnegie)f(Mellon)g(University)l(,)h(1989.)100 972 y([24])23 b(Chri\
sochoides,)13 b(N.,)h(Droegemeier)m(,)e(K.,)i(Fox,)e(G.,)i(Mills,)f(K.,)g(and)
f(Xue,)h(M.)207 1033 y fl(A)g(Methodology)f(for)h(Developing)f(High)g(Perform\
ance)i(Computing)e(Models:)18 b(Storm-Scale)282 1093 y(W)l(eather)13 b(Pr)o
(ediction)p fq(.)207 1153 y(in:)18 b fn(High)12 b(Performance)h(Computing)e
(Symposium)h(1993)g(Grand)g(Challenges)g(in)282 1213 y(Computer)g(Simulation)
p fq(.)207 1273 y(1993,)h(pp.)g(82\26189.)100 1353 y([25])23 b(Chrisochoides,)
13 b(N.,)h(Houstis,)f(E.,)g(and)g(Rice,)g(J.)207 1413 y fl(Mapping)g(Algorith\
ms)f(and)h(Softwar)n(e)f(Envir)o(onment)g(for)h(Data)f(Parallel)h(PDE)g(Itera\
tive)282 1473 y(Solvers)p fq(.)207 1533 y(submitted)f(to)g(the)h(special)g
(issue)g(of)f(the)g fl(Journal)g(of)h(Parallel)f(and)g(Distributed)h(Computin\
g)f fq(on)282 1593 y(Data-Parallel)f(Algorithms)h(and)g(Programming,)f(1993.)
100 1673 y([26])23 b(Cohn,)13 b(R.)207 1733 y fl(Sour)o(ce-Level)f(Debugging)
g(of)g(Automatically)g(Parallelized)h(Pr)o(ograms)p fq(.)207 1793 y(School)f
(of)g(Computer)g(Science,)h(Carnegie-Mellon)e(University)l(,)i(October)f(1992\
.)100 1872 y([27])23 b(Cooper)n(,)13 b(E.,)h(Steenkiste,)e(P)-6 b(.,)14 b(San\
som,)f(R.,)g(and)f(Zill,)h(B.)207 1932 y fl(Pr)o(otocol)f(Implementation)f
(on)i(the)f(Nectar)h(Communication)f(Pr)o(ocessor)p fq(.)207 1993 y(in:)18 b
fn(Proceedings)12 b(of)g(the)g(SIGCOMM)g('90)f(Symposium)i(on)f(Communication\
s)282 2053 y(Ar)o(chitectur)n(es)h(and)f(Protocols)p fq(,)g(ACM.)207 2113 y
(Philadelphia,)g(1990,)h(pp.)g(135\261143.)100 2192 y([28])23 b(Cormen,)13 b
(T)l(.,)h(Leiserson,)f(C.,)h(and)e(Rivest,)i(R.)207 2252 y fn(Intr)o(oduction)
d(to)h(Algorithms)p fq(.)207 2313 y(MIT)h(Press,)g(Cambridge,)f(MA,)i(1989.)
100 2392 y([29])23 b(Dantzig,)13 b(G.,)g(Fulkerson,)f(D.,)i(and)e(Johnson,)h
(S.)207 2452 y fl(Solution)f(of)g(a)g(Lar)o(ge-Scale)f(T)m(raveling)i(Salesma\
n)f(Pr)o(oblem)p fq(.)207 2512 y fn(Operations)g(Resear)o(ch)p fq(,)h(vol.)g
(2)f(\(1954\),)g(p.)h(393.)100 2592 y([30])23 b(Day)m(,)13 b(R.)207 2652 y fl
(On)g(Optimal)e(Extracting)i(fr)n(om)g(a)f(Multiple)g(File)h(Data)f(Storage)h
(System:)18 b(An)12 b(Application)g(of)282 2712 y(Integer)g(Pr)o(ogramming)p
fq(.)975 2836 y(129)p eop
%%Page: 130 144
 bop 128 53 a fn(Operations)11 b(Research)p fq(,)i(vol.)f(13)h(\(1965\),)e
(pp.)i(482\261494.)20 136 y([31])24 b(Fahringer)l(,)13 b(T)m(.,)g(Gubitoso,)g
(M.,)h(Kung,)e(H.,)i(Prinz,)e(F)-5 b(.,)14 b(and)e(W)n(u,)h(I.-C.)128 197 y fl
(Parallelizing)f(Noodles)h(on)f(Nectar)p fq(.)128 257 y(internal)f(document,)
i(CMU,)g(1989.)20 340 y([32])24 b(Feldmann,)12 b(R.,)i(Monien,)e(B.,)i(Mysliw\
ietz,)f(P)-6 b(.,)14 b(and)e(V)-6 b(ornber)n(ger)m(,)13 b(O.)128 400 y fl(Dis\
tributed)f(Game)h(T)m(r)n(ee)g(Sear)n(ch)p fq(.)128 460 y(in:)k fn(Parallel)c
(Algorithms)f(for)g(Machine)g(Intelligence)p fq(,)g(edited)g(by)h(V)-7 b(.)13
b(Kumar)m(,)g(P)-6 b(.)203 520 y(Gopalakrishnan,)12 b(and)g(L.)i(Kanal.)128
581 y(Springer)m(-V)-6 b(erlag,)13 b(1990,)f(pp.)h(66\261101.)20 664 y([33])
24 b(Fer)n(guson,)13 b(C.)g(and)g(Korf,)f(R.)128 724 y fl(Distributed)g(T)m
(r)o(ee)g(Sear)o(ch)g(and)g(its)h(Application)f(to)g(Alpha-Beta)g(Pruning)p fq
(.)128 784 y(in:)17 b fn(Proceedings)12 b(of)g(the)g(7th)g(National)f(Confer)
n(ence)i(on)f(Arti\256cial)f(Intelligence)h(\(AAAI)203 844 y(1988\))p fq(.)
128 904 y(Saint)g(Paul,)g(1988,)h(pp.)f(128\261132.)20 987 y([34])24 b(Finkel\
,)12 b(R.)h(and)g(Manber)m(,)g(U.)128 1047 y fl(DIB)f(\261)h(a)f(Distributed)
g(Implementation)f(of)i(Backtracking)p fq(.)128 1108 y fn(ACM)f(T)m(ransactio\
ns)g(on)g(Pr)o(ogramming)h(Languages)f(and)g(Systems)p fq(,)i(vol.)e(9)g(\(19\
87\),)203 1168 y(pp.)g(235\261256.)20 1251 y([35])24 b(Fisher)m(,)13 b(M.)g
(and)g(Kedia,)g(P)-6 b(.)128 1311 y fl(Optimal)12 b(Solution)f(of)h(Set)h(Cov\
ering/Partitioning)f(Pr)o(oblems)g(Using)h(Dual)f(Heuristics)p fq(.)128 1371 y
fn(Management)g(Science)p fq(,)g(vol.)h(36)f(\(1990\),)g(pp.)h(674\261688.)20
1454 y([36])24 b(Gar\256nkel,)12 b(R.)h(and)f(Nemhauser)n(,)h(G.)128 1514 y fl
(Optimal)f(Political)g(Districting)g(by)g(Implicit)g(Enumeration)p fq(.)128
1575 y fn(Management)g(Science)p fq(,)g(vol.)h(16)f(\(1970\),)g(pp.)h(495\261\
508.)20 1658 y([37])24 b(Geist,)13 b(A.,)g(Beguelin,)g(A.,)g(Dongarra,)f(J.,)
i(Jiang,)f(W)l(.,)g(Manchek,)g(R.,)h(and)e(Sunderam,)g(V)-6 b(.)128 1718 y fl
(PVM)14 b(3)e(User)s(')-7 b(s)13 b(Guide)f(and)g(Refer)o(ence)h(Manual)p fq
(.)128 1778 y(no.)g(ORNL/TM-12187,)g(Oak)f(Ridge)h(National)f(Laboratory)l
(,)h(May)f(1993.)20 1861 y([38])24 b(Guibas,)13 b(L.,)h(McCreight,)e(E.,)i
(Plass,)f(M.,)h(and)e(Roberts,)h(J.)128 1921 y fl(A)g(New)g(Repr)o(esentation)
f(for)h(Linear)f(Lists)p fq(.)128 1981 y(in:)17 b fn(Proceedings)12 b(of)g
(the)g(Ninth)f(Annual)h(ACM)g(Symposium)h(on)f(Theory)g(of)g(Computing)p fq
(.)128 2042 y(1977,)g(pp.)h(49\26160.)20 2125 y([39])24 b(Hamey)l(,)13 b(L.,)
h(W)l(ebb,)f(J.,)h(and)e(W)n(u,)h(I.-C.)128 2185 y fl(An)g(Ar)o(chitectur)n
(e)f(Independent)g(Pr)o(ogramming)g(Language)g(for)g(Low-Level)g(V)m(ision)p
fq(.)128 2245 y fn(Computer)g(V)n(ision,)h(Graphics,)f(and)g(Image)h(Processi\
ng)p fq(,)g(vol.)f(48)h(\(1989\),)e(pp.)i(246\26164.)20 2328 y([40])24 b(Hara\
lick,)12 b(R.)h(and)g(Elliott,)f(G.)128 2388 y fl(Incr)n(easing)g(T)m(r)o(ee)
h(Sear)n(ch)g(Ef\256ciency)f(for)h(Constraint)g(Satisfaction)e(Pr)o(oblems)p
fq(.)128 2448 y fn(Arti\256cial)g(intelligence)p fq(,)h(vol.)g(14)h(\(1980\),)
e(pp.)i(263\261313.)20 2531 y([41])24 b(Harche,)13 b(F)-5 b(.)13 b(and)g(Thom\
pson,)g(G.)128 2592 y fl(The)f(Column)g(Subtraction)g(Algorithm:)18 b(An)13 b
(Exact)f(Method)h(for)g(Solving)e(W)l(eighted)i(Set)203 2652 y(Covering,)g
(Packing)g(and)f(Partitioning)g(Pr)o(oblems)p fq(.)128 2712 y(T)m(o)g(appear)
g(in)h fn(Computers)f(and)g(Operations)f(Research)p fq(,)i(1993.)896 2836 y
(130)p eop
%%Page: 131 145
 bop 100 53 a fq([42])23 b(Hoare,)13 b(C.)207 114 y fl(Algorithm)g(63)f(\(Par\
tition\))g(and)g(Algorithm)g(65)h(\(Find\))p fq(.)207 174 y fn(Communications)
f(of)g(the)g(ACM)p fq(,)h(vol.)g(4)f(\(1961\),)g(pp.)g(321\261322.)100 257 y
([43])23 b(Hoare,)13 b(C.)207 317 y fl(Quicksort)p fq(.)207 377 y fn(Computer)
f(Journal)p fq(,)g(vol.)h(5)f(\(1962\),)g(pp.)h(10\26115.)100 460 y([44])23 b
(Holliman,)12 b(N.)207 520 y fl(V)m(isualizing)g(Solid)g(Models:)18 b(An)13 b
(Exer)o(cise)g(in)f(Parallel)h(Pr)o(ogramming)p fq(.)207 581 y(Leeds)h(Univer\
sity)l(,)f(September)e(1990.)100 664 y([45])23 b(Hsu,)13 b(F)l(.-H.)207 724 y
fl(Lar)n(ge)g(Scale)f(Parallelization)h(of)f(Alpha-Beta)g(Sear)o(ch:)17 b(An)
c(Algorithmic)g(and)f(Ar)o(chitectural)282 784 y(Study)g(with)g(Computer)h
(Chess)p fq(.)207 844 y(School)f(of)g(Computer)g(Science,)h(Carnegie-Mellon)e
(University)l(,)i(1990.)100 927 y([46])23 b(Huang,)13 b(S.-R.)g(and)f(Davis,)
h(L.)h(S.)207 987 y fl(Parallel)f(Interactive)f(A*)h(Sear)o(ch:)k(An)c(Admiss\
ible)g(Distributed)f(Heuristic)h(Sear)o(ch)f(Algorithm)p fq(.)207 1047 y(in:)
18 b fn(11th)11 b(International)g(Joint)h(Confer)n(ence)h(on)f(Arti\256cial)f
(Intelligence)p fq(.)207 1108 y(Detroit,)h(1989,)h(pp.)g(23\26129.)100 1191 y
([47])23 b(Huddleston,)13 b(S.)f(and)h(Mehlhorn,)f(K.)207 1251 y fl(A)h(New)g
(Data)f(Structur)o(e)g(for)h(Repr)o(esenting)f(Sorted)h(List)p fq(.)207 1311 y
fn(Acta)f(Informatica)p fq(,)h(vol.)f(17)h(\(1982\),)e(pp.)i(157\261184.)100
1394 y([48])23 b(Hummel,)13 b(S.,)g(Schonber)n(g,)g(E.,)g(and)g(Flynn,)f(L.)
207 1454 y fl(Factoring:)18 b(A)13 b(Method)g(for)f(Scheduling)g(Parallel)h
(Loops)p fq(.)207 1514 y fn(Communications)f(of)g(the)g(ACM)p fq(,)h(vol.)g
(35)f(\(1992\),)f(pp.)i(90\261101.)100 1597 y([49])23 b(Ikudome,)12 b(K.,)i
(Fox,)e(G.,)h(Kolawa,)g(A.,)g(and)g(Flower)m(,)g(J.)207 1658 y fl(An)g(Automa\
tic)f(and)g(Symbolic)h(Parallelization)f(System)h(for)f(Distributed)h(Memory)
g(Parallel)282 1718 y(Computers)p fq(.)207 1778 y(in:)18 b fn(Proceedings)12 b
(of)g(the)g(Fifth)f(Distributed)g(Memory)i(Computing)e(Confer)o(ence)p fq(,)i
(IEEE.)207 1838 y(1990,)g(pp.)g(1105\2611114.)100 1921 y([50])23 b fl(iPSC/2)
13 b(C)g(Pr)o(ogrammer)r(')-7 b(s)13 b(Refer)o(ence)g(Manual)p fq(.)207 1981 y
(Intel,)f(1988.)100 2064 y([51])23 b(Jayasimha,)14 b(D.)207 2125 y fl(Communi\
cation)e(and)g(Synchr)o(onization)g(in)g(Parallel)h(Computation)p fq(.)207
2185 y(Department)f(of)g(Computer)g(Science,)g(University)g(of)g(Illinois)g
(at)g(Urbana-Champaign,)282 2245 y(September)g(1988.)100 2328 y([52])23 b(Jay\
asimha,)14 b(D.)f(and)f(Loui,)h(M.)207 2388 y fl(The)f(Communication)g(Comple\
xity)h(of)f(Parallel)g(Algorithms)p fq(.)207 2448 y(no.)h(CSRD)g(629,)f(Unive\
rsity)g(of)g(Illinois)g(at)g(Urbana-Champaign,)g(1986.)100 2531 y([53])23 b
(Johnson,)13 b(C.)207 2592 y fn(Numerical)g(Solutions)e(of)h(Partial)g(Differ)
n(ential)g(Equations)f(by)h(the)g(Finite)g(Element)282 2652 y(Method)p fq(.)
207 2712 y(Cambridge)g(University)g(Press,)h(1987.)975 2836 y(131)p eop
%%Page: 132 146
 bop 20 53 a fq([54])24 b(Jones,)13 b(M.,)h(Rashid,)f(R.,)h(and)e(Thompson,)h
(M.)128 114 y fl(Matchmaker:)18 b(An)13 b(Interface)f(Speci\256cation)g(Langu\
age)g(for)g(Distributed)h(Pr)o(ocessing)p fq(.)128 174 y(in:)k fn(Confer)o
(ence)12 b(Record)h(of)f(the)g(12th)f(Annual)g(ACM)i(Confer)n(ence)g(on)f(Pri\
nciples)g(of)203 234 y(Pr)o(ogramming)h(Languages)p fq(.)128 294 y(1985,)f
(pp.)h(225\261235.)20 379 y([55])24 b(Karmarkar)m(,)12 b(N.)128 440 y fl(A)h
(New)g(Polynomial-T)l(ime)f(Algorithm)h(for)f(Linear)h(Pr)o(ogramming)p fq
(.)128 500 y fn(Combinatorica)p fq(,)f(vol.)g(4)h(\(1984\),)e(pp.)i(373\26139\
5.)20 585 y([56])24 b(Karp,)12 b(A.)128 645 y fl(Pr)o(ogramming)g(for)g(Paral\
lelism)p fq(.)128 705 y fn(IEEE)h(Computer)p fq(,)g(vol.)f(20)h(\(1987\),)e
(pp.)i(43\26157.)20 791 y([57])24 b(Karp,)12 b(R.)h(and)g(Zhang,)g(Y)-6 b(.)
128 851 y fl(A)13 b(Randomized)f(Parallel)h(Branch-and-Bound)f(Pr)o(ocedur)o
(e)p fq(.)128 911 y(in:)17 b fn(Proceedings)12 b(of)g(the)g(20th)g(Annual)f
(ACM)h(Symposium)h(on)f(Theory)g(of)g(Computing)p fq(.)128 971 y(Chicago,)h
(IL,)g(1988,)f(pp.)h(290\261300.)20 1057 y([58])24 b(Knuth,)12 b(D.)h(E.)g
(and)g(Moore,)g(R.)g(W)-5 b(.)128 1117 y fl(An)13 b(Analysis)g(of)f(Alpha-Bet\
a)g(Pruning)p fq(.)128 1177 y fn(Arti\256cial)f(Intelligence)p fq(,)h(vol.)h
(6)f(\(1975\),)g(pp.)h(293\261326.)20 1262 y([59])24 b(Kohler)m(,)13 b(W)-5 b
(.)128 1322 y fl(A)13 b(Pr)o(eliminary)f(Evaluation)g(of)g(the)h(Critical)f
(Path)h(Method)f(for)h(Scheduling)f(T)-5 b(asks)13 b(on)203 1383 y(Multipr)n
(ocessor)h(Systems)p fq(.)128 1443 y fn(IEEE)f(T)m(ransaction)e(on)h(Computer\
s)p fq(,)h(vol.)g(24)f(\(1975\),)g(pp.)h(1235\2611238.)20 1528 y([60])24 b
(Kumar)m(,)13 b(V)-6 b(.,)13 b(Ramesh,)g(K.,)h(and)e(Rao,)h(V)-6 b(.)13 b(N.)
128 1588 y fl(Parallel)g(Best-First)g(Sear)o(ch)f(of)g(State-Space)g(Graphs:)
18 b(A)13 b(Summary)f(of)h(Results)p fq(.)128 1648 y(in:)k fn(Proceedings)12 b
(of)g(the)g(1988)g(National)f(Confer)o(ence)h(on)g(Arti\256cial)g(Intelligenc\
e)p fq(.)128 1709 y(1988,)g(pp.)h(122\261127.)20 1794 y([61])24 b(Kung,)12 b
(H.)128 1854 y fl(Heter)n(ogeneous)h(Multicomputers)p fq(.)128 1914 y(in:)k fn
(Carnegie)12 b(Mellon)g(Computer)g(Science:)18 b(A)12 b(25-Y)-6 b(ear)13 b
(Commemorative)p fq(,)g(edited)g(by)203 1975 y(R.)g(F)-5 b(.)13 b(Rashid.)128
2035 y(Addison-W)-5 b(esley)m(,)13 b(1990,)g(pp.)g(235\261251.)20 2120 y([62])
24 b(Kung,)12 b(H.,)i(Steenkiste,)e(P)-5 b(.,)13 b(Gubitoso,)f(M.,)i(and)f
(Khaira,)f(M.)128 2180 y fl(Parallelizing)g(a)h(New)g(Class)g(of)f(Lar)n(ge)h
(Applications)f(over)h(High-Speed)f(Networks)p fq(.)128 2240 y(in:)17 b fn
(Third)12 b(ACM)h(SIGPLAN)g(Symposium)f(on)g(Principles)h(and)f(Practice)g
(of)g(Parallel)203 2301 y(Pr)o(ogramming)p fq(,)h(ACM.)128 2361 y(1991,)f(pp.)
h(167\261177.)20 2446 y([63])24 b(Lai,)13 b(T)m(.)g(and)f(Sahni,)h(S.)128 2506
y fl(Anomalies)g(in)f(Parallel)g(Branch-and-Bound)h(Algorithms)p fq(.)128 2566
y fn(Communications)f(of)g(the)g(ACM)p fq(,)g(1984,)h(pp.)g(594\261602.)20
2652 y([64])24 b(Lee,)13 b(K.-F)l(.)g(and)f(Mahajan,)i(S.)128 2712 y fl(Bill:)
j(a)c(T)-5 b(able-Based,)13 b(Knowledge-Intensive)f(Othello)g(Pr)o(ogram)p fq
(.)896 2836 y(132)p eop
%%Page: 133 147
 bop 207 53 a fq(no.)13 b(CMU-CS-86-141,)f(School)f(of)h(Computer)g(Science,)
h(Carnegie-Mellon)f(University)l(,)h(April)282 114 y(1986.)100 195 y([65])23 b
(Lef\257er)m(,)13 b(S.,)g(McKusick,)g(M.,)h(Karels,)f(M.,)h(and)e(Quarterman,)
g(J.)207 255 y fn(The)h(Design)f(and)g(Implementation)g(of)g(the)g(4.3BSD)g
(UNIX)h(Operating)e(System)p fq(.)207 315 y(Addison-W)l(esley)i(Publishing)e
(Company)m(,)i(Reading,)f(Massachusetts,)j(1989.)100 396 y([66])23 b(Li,)13 b
(G.-J.)h(and)e(W)l(ah,)h(B.)207 456 y fl(Coping)f(with)h(Anomalies)f(in)h(Par\
allel)f(Branch-and-Bound)g(Algorithms)p fq(.)207 517 y fn(IEEE)i(T)l(ransacti\
on)e(on)g(Computers)p fq(,)h(June)g(1986,)f(pp.)h(568\261573.)100 598 y([67])
23 b(Lin,)13 b(F)l(.)g(and)f(Keller)n(,)h(R.)207 658 y fl(The)f(Gradient)h
(Model)g(Load)e(Balancing)i(Method)p fq(.)207 718 y fn(IEEE)h(T)l(ransaction)
e(on)g(Softwar)n(e)g(Engineering)p fq(,)h(vol.)f(SE-13)g(\(1987\),)g(pp.)h
(32\26138.)100 799 y([68])23 b(Maier)n(,)13 b(D.)g(and)f(Salveter)n(,)h(C.)
207 859 y fl(Hysterical)g(B-tr)o(ees)p fq(.)207 920 y fn(Information)f(Proces\
sing)g(Letters)p fq(,)h(vol.)g(12)f(\(1981\),)g(pp.)h(199\261202.)100 1001 y
([69])23 b(Marsland,)13 b(T)m(.)g(and)f(Campbell,)h(M.)207 1061 y fl(Parallel)
g(Sear)n(ch)g(of)f(Str)n(ongly)h(Or)n(der)o(ed)f(Game)h(tr)n(ees)p fq(.)207
1121 y fn(Computing)f(Surveys)p fq(,)g(vol.)h(14)f(\(1982\),)g(pp.)h(533\2615\
51.)100 1202 y([70])23 b(Nishikawa,)13 b(H.)207 1262 y fl(A)g(Practical)g(Loa\
d)f(Balancing)g(Scheme)h(Embedded)f(in)h(Ar)o(oma)p fq(.)207 1322 y(private)f
(manuscript,)g(1992.)100 1404 y([71])23 b(Nishikawa,)13 b(H.)g(and)f(Steenkis\
te,)h(P)-6 b(.)207 1464 y fl(Ar)o(oma:)18 b(Language)11 b(Support)i(for)f(Dis\
tributed)h(Objects)p fq(.)207 1524 y(in:)18 b fn(International)11 b(Parallel)
h(Processing)h(Symposium)p fq(.)207 1584 y(Los)g(Angeles,)h(1992,)e(pp.)h(686\
\261690.)100 1665 y([72])23 b(Ortega,)13 b(J.)g(and)f(V)-6 b(oigt,)12 b(R.)
207 1725 y fl(Solution)g(of)g(Partial)h(Differ)n(ential)f(Equations)g(on)g
(V)-5 b(ector)13 b(and)f(Parallel)h(Computers)p fq(.)207 1786 y fn(SIAM)g(Rev\
iew)p fq(,)g(vol.)f(27)g(\(1985\),)g(pp.)h(149\261240.)100 1867 y([73])23 b
(Papadimitriou,)11 b(C.)j(and)e(Steiglitz,)g(K.)207 1927 y fn(Combinatorial)f
(Optimization:)16 b(Algorithms)d(and)e(Complexity)p fq(.)207 1987 y(Englewood)
i(Clif)n(fs,)g(NJ,)g(1982.)100 2068 y([74])23 b(Papadimitriou,)11 b(C.)j(and)
e(Ullman,)g(J.)207 2128 y fl(A)h(Communication-T)l(ime)f(T)m(radeoff)p fq(.)
207 2189 y fn(SIAM)h(Journal)e(of)h(Computing)p fq(,)g(vol.)h(16)f(\(1987\),)
g(pp.)g(639\261646.)100 2270 y([75])23 b(Pearl,)13 b(J.)207 2330 y fn(Heurist\
ics:)18 b(Intelligent)11 b(Sear)o(ch)h(Strategies)g(for)g(Computer)g(Pr)o(obl\
em)h(Solving)p fq(.)207 2390 y(Addison-W)l(esley)m(,)g(1984.)100 2471 y([76])
23 b(Pekny)m(,)12 b(J.)i(and)e(Miller)n(,)h(D.)207 2531 y fl(A)g(Parallel)g
(Branch)g(and)f(Bound)h(Algorithm)f(for)h(Solving)f(Lar)n(ge)g(Asymmetric)i
(T)m(raveling)282 2592 y(Salesman)e(Pr)o(oblems)p fq(.)207 2652 y(no.)h(EDRC)
g(05-27-88,)f(Engineering)g(Design)g(Research)h(Center)n(,)g(Carnegie)f(Mello\
n)282 2712 y(University)l(,)h(May)g(1988.)975 2836 y(133)p eop
%%Page: 134 148
 bop 20 53 a fq([77])24 b(Plaxton,)12 b(C.)128 114 y fl(Ef\256cient)g(Computa\
tion)g(on)g(Sparse)h(Inter)n(connection)f(Networks)p fq(.)128 174 y(Dept)g
(of)g(CS,)h(Stanford)e(University)l(,)i(September)e(1989.)20 262 y([78])24 b
(Polychronopoulos,)11 b(C.)i(and)g(Kuck,)g(D.)128 322 y fl(Guided)f(Self-Sche\
duling:)k(A)d(Practical)g(Scheduling)f(Scheme)g(for)h(parallel)f(computers)p
fq(.)128 383 y fn(IEEE)h(T)m(ransaction)e(on)h(Computers)p fq(,)h(vol.)g(36)f
(\(1987\),)g(pp.)h(1425\2611439.)20 471 y([79])24 b(Preparata,)12 b(F)-5 b
(.)13 b(and)g(Shamos,)f(M.)128 531 y fn(Computational)e(Geometry:)18 b(an)12 b
(Intr)o(oduction)p fq(.)128 591 y(Springer)m(-V)-6 b(erlag,)13 b(New)f(Y)-5 b
(ork,)13 b(1985.)20 680 y([80])24 b(Printz,)12 b(H.)128 740 y fl(Automatic)g
(Mapping)g(of)h(Lar)n(ge)f(Signal)g(Pr)o(ocessing)h(Systems)g(to)f(a)h(Parall\
el)f(Machine)p fq(.)128 800 y(School)g(of)g(Computer)f(Science,)i(Carnegie-Me\
llon)f(University)l(,)h(May)g(1991.)20 889 y([81])24 b(Quinn,)12 b(M.)128 949
y fl(Implementing)e(Best-First)j(Branch-and-Bound)e(Algorithms)h(on)f(Hyper)o
(cube)h(Multicomputers)p fq(.)128 1009 y(in:)17 b fn(Hyper)o(cube)12 b(Multip\
r)n(ocessors)p fq(,)i(edited)e(by)h(M.)g(Heath.)128 1069 y(SIAM)f(Press,)h
(Philadelphia,)f(1987.)20 1158 y([82])24 b(Rao,)13 b(V)-7 b(.)13 b(N.)g(and)g
(Kumar)m(,)g(V)-7 b(.)128 1218 y fl(Parallel)13 b(Depth-First)f(Sear)o(ch,)h
(Part)g(I:)e(Implementation)p fq(.)128 1278 y fn(International)g(Journal)g
(of)h(Parallel)g(Programming)p fq(,)h(vol.)g(16)f(\(1987\),)g(pp.)h(479\26149\
9.)20 1367 y([83])24 b(Revelle,)13 b(C.,)g(Marks,)h(D.,)f(and)f(Liebman,)h
(J.)128 1427 y fl(An)g(Analysis)g(of)f(Private)h(and)f(Public)h(Sector)g(Loca\
tion)e(Models)p fq(.)128 1487 y fn(Management)h(Science)p fq(,)g(vol.)h(16)f
(\(1970\),)g(pp.)h(692\261707.)20 1576 y([84])24 b(Root,)13 b(J.)128 1636 y fl
(An)g(Application)f(of)g(Symbolic)g(Logic)g(to)g(Selection)g(Pr)o(oblem)p fq
(.)128 1696 y fn(Operations)f(Research)p fq(,)i(vol.)f(12)h(\(1964\),)e(pp.)i
(519\261526.)20 1784 y([85])24 b(Saletore,)12 b(V)-7 b(.)13 b(and)g(Kale,)g
(L.)128 1845 y fl(Consistent)g(Linear)f(Speedups)h(to)f(a)g(First)h(Solution)
f(in)g(Parallel)h(State-Space)f(Sear)n(ch)p fq(.)128 1905 y(in:)17 b fn(Proce\
edings)12 b(of)g(the)g(8th)g(National)f(Confer)n(ence)i(on)f(Arti\256cial)f
(Intelligence)h(\(AAAI)203 1965 y(1990\))p fq(.)128 2025 y(Boston,)h(1990,)f
(pp.)h(227\261233.)20 2114 y([86])24 b(Samet,)12 b(H.)128 2174 y fn(Applicati\
ons)f(of)h(Spatial)f(Data)g(Structur)n(es:)18 b(Computer)12 b(Graphics,)h(Ima\
ge)g(pr)o(ocessing,)203 2234 y(and)e(GIS)p fq(.)128 2294 y(Addison-W)-5 b(esl\
ey)m(,)13 b(Reading,)g(MA.,)h(1990.)20 2383 y([87])24 b(Schaef)n(fer)n(,)13 b
(J.)128 2443 y fl(Distributed)f(Game-T)m(r)n(ee)h(Sear)n(ching)p fq(.)128 2503
y fn(Journal)e(of)h(Parallel)h(and)e(Distributed)g(Computing)p fq(,)h(vol.)h
(6)f(\(1989\),)g(pp.)h(90\261114.)20 2592 y([88])24 b(Sethi,)12 b(A.)h(and)f
(Thompson,)h(G.)128 2652 y fl(The)f(Pivot)h(and)f(Pr)o(obe)g(Algorithm)h(for)
f(Solving)g(a)g(Linear)h(Pr)o(ogram)p fq(.)128 2712 y fn(Mathematical)e(Progr\
amming)p fq(,)i(vol.)g(29)f(\(1984\),)g(pp.)g(219\261233.)896 2836 y(134)p eop
%%Page: 135 149
 bop 100 53 a fq([89])23 b(Shu,)13 b(W)-5 b(.)13 b(and)f(Kale,)h(L.)h(V)-7 b
(.)207 114 y fl(A)13 b(Dynamic)f(Scheduling)g(Strategy)h(for)f(Char)o(e-Kerne\
l)h(System)p fq(.)207 174 y(in:)18 b fn(Proceedings)12 b(of)g(Super)n(computi\
ng)g('89)p fq(.)207 234 y(New)h(Y)-5 b(ork,)12 b(NY)-6 b(,)12 b(1989,)h(pp.)g
(389\261398.)100 320 y([90])23 b(Sinha,)13 b(A.)g(and)f(Kale,)h(L.)207 380 y
fl(A)g(Load)f(Balancing)g(Strategy)h(for)f(Prioritized)i(Execution)e(of)h(T)
-5 b(asks)p fq(.)207 440 y(T)m(o)13 b(appear)f(in)g fn(International)f(Parall\
el)h(Processing)h(Symposium)p fq(,)g(1993.)100 527 y([91])23 b(Slate,)13 b
(D.)g(and)f(Atkin,)g(L.)i(R.)207 587 y fl(Chess)g(4.5)e(\261)h(The)f(Northwes\
tern)i(University)f(Chess)g(Pr)o(ogram)p fq(.)207 647 y(in:)18 b fn(Chess)13 b
(Skill)e(in)h(Man)g(and)g(Machine)p fq(.)207 707 y(Springer)n(-V)-6 b(erlag,)
12 b(1977,)h(pp.)g(82\261118.)100 793 y([92])23 b(Sleator)m(,)13 b(D.)g(and)g
(T)m(arjan,)f(R.)207 853 y fl(Self-Adjusting)g(Binary)h(Sear)o(ch)f(T)m(r)o
(ees)p fq(.)207 914 y fn(Journal)g(of)g(the)g(ACM)p fq(,)g(vol.)h(32)f(\(1985\
\),)g(pp.)h(652\261686.)100 1000 y([93])23 b(Sollins,)13 b(K.)207 1060 y fl
(Copying)g(Structur)n(ed)f(Objects)h(in)f(a)h(Distributed)f(System)p fq(.)207
1120 y fn(Computer)g(Networks)p fq(,)h(vol.)g(5)f(\(1981\),)g(pp.)g(351\26135\
9.)100 1206 y([94])23 b(Steenkiste,)13 b(P)-6 b(.)207 1266 y fl(Nectarine)13 b
(-)f(A)h(Nectar)g(Interface)p fq(.)207 1327 y(internal)f(document,)g(1990.)
100 1413 y([95])23 b(Steenkiste,)13 b(P)-6 b(.)207 1473 y fl(A)13 b(Symmetric\
al)g(Communication)e(Interface)i(for)f(Distributed-Memory)h(Computers)p fq
(.)207 1533 y(in:)18 b fn(Proceedings)12 b(of)g(the)g(Sixth)f(Distributed)g
(Memory)i(Computing)e(Confer)o(ence)p fq(,)h(IEEE.)207 1593 y(Portland,)g(199\
1,)h(pp.)f(262\261265.)100 1679 y([96])23 b(Sun)12 b(Microsystems)h(Inc.)207
1740 y fl(Remote)g(Pr)o(ocedur)o(e)f(Call)g(Pr)o(otocol)g(Speci\256cation)p fq
(.)207 1800 y(Sun)g(Microsystems)h(Inc.,)g(February)e(1986.)100 1886 y([97])
23 b(T)m(arjan,)13 b(R.)207 1946 y fl(Sequential)f(Access)i(in)e(Splay)g(T)m
(r)o(ees)h(T)-5 b(akes)13 b(Linear)f(T)m(ime)p fq(.)207 2006 y fn(Combinatori\
ca)p fq(,)g(vol.)h(5)f(\(1985\),)g(pp.)h(367\261378.)100 2092 y([98])23 b(T)m
(arjan,)13 b(R.)g(and)f(V)-5 b(an)12 b(W)m(yk,)h(C.)207 2153 y fl(An)g(O\(n)f
(log)g(log)g(n\)-T)l(ime)h(Algorithm)f(for)h(T)m(riangulating)e(a)i(Simple)f
(Polygon)p fq(.)207 2213 y fn(SIAM)h(Journal)e(of)h(Computing)p fq(,)g(vol.)h
(17)f(\(1988\),)g(pp.)g(143\261178.)100 2299 y([99])23 b(Thinking)12 b(Machin\
es)i(Corporation.)207 2359 y fl(The)e(Connection)h(Machine)f(CM-5)h(T)-5 b
(echnical)12 b(Summary)p fq(.)207 2419 y(Thinking)g(Machines)i(Corporation,)d
(January)i(1992.)75 2505 y([100])23 b(T)m(seng,)13 b(P)-5 b(.)13 b(S.)207 2566
y fl(A)g(Parallelizing)g(Compiler)f(for)h(Distributed)f(Memory)i(Parallel)f
(Compiler)p fq(.)207 2626 y(Carnegie-Mellon)f(University)l(,)h(May)g(1989.)75
2712 y([101])23 b(W)l(ah,)13 b(B.)g(W)l(.)g(and)f(Ma,)h(Y)-6 b(.)975 2836 y
(135)p eop
%%Page: 136 150
 bop 128 53 a fl(Manip)12 b(-)g(A)h(Multicomputer)g(Ar)o(chitectur)n(e)g(for)
f(Solving)g(Combinatorial)g(Extr)o(emum-Sear)n(ch)203 114 y(Pr)n(oblems)p fq
(.)128 174 y fn(IEEE)h(T)m(ransaction)e(on)h(Computers)p fq(,)h(vol.)g(33)f
(\(1984\),)g(pp.)h(377\261390.)-4 255 y([102])23 b(W)l(eihl,)12 b(W)l(.)128
315 y fl(Remote)h(Pr)o(ocedur)n(e)g(Call)p fq(.)128 375 y(in:)k fn(Distribute\
d)11 b(Systems)p fq(,)j(edited)e(by)g(S.)h(Mullender)m(.)128 435 y(Addison-W)
-5 b(esley)m(,)13 b(1989,)g(pp.)g(65\26186.)-4 516 y([103])23 b(W)n(u,)13 b
(I.-C.)128 576 y fl(Dual-Priority)f(T)-5 b(ask)13 b(Scheduling:)k(A)c(New)g
(Parallel)g(Pr)o(ogramming)f(Model)h(for)f(T)m(r)o(ee)g(Sear)o(ch)203 637 y
(Pr)n(oblems)p fq(.)128 697 y(private)g(manuscript)f(\(thesis)i(proposal)f
(at)g(CMU\),)h(1991.)-4 778 y([104])23 b(W)n(u,)13 b(I.-C.)128 838 y fl(Ef\
\256cient)f(Parallel)h(Divide-and-Conquer)f(for)g(a)g(Class)i(of)e(Inter)n
(connection)g(T)-5 b(opologies)p fq(.)128 898 y(in:)17 b fn(the)12 b(Second)g
(Annual)f(International)g(Symposium)h(on)h(Algorithms)p fq(.)128 958 y(T)m
(aipei,)f(1991.)-4 1039 y([105])23 b(W)n(u,)13 b(I.-C.)f(and)h(Kung,)f(H.)128
1099 y fl(Communication)f(Complexity)i(for)f(Parallel)h(Divide-and-Conquer)p
fq(.)128 1160 y(in:)k fn(1991)12 b(Symposium)h(on)f(Foundations)f(of)h(Comput\
er)g(Science)p fq(.)128 1220 y(San)g(Juan,)h(1991,)g(pp.)f(151\261162.)-4 1301
y([106])23 b(W)n(u,)13 b(I.-C.,)g(Thompson,)g(G.,)g(and)g(Harche,)f(F)l(.)128
1361 y(private)g(communication,)f(1993.)-4 1442 y([107])23 b(W)n(u,)13 b(M.-Y)
-7 b(.)13 b(and)g(Shu,)f(W)l(.)128 1502 y fl(Scatter)g(Scheduling)g(for)h(Pr)
o(oblems)f(with)h(Unpr)n(edictable)f(Structur)n(es)p fq(.)128 1562 y(in:)17 b
fn(Proceedings)12 b(of)g(the)g(Sixth)f(Distributed)g(Memory)i(Computing)f(Con\
fer)n(ence)p fq(.)128 1623 y(Portland,)g(1991,)g(pp.)h(137\261143.)-4 1703 y
([108])23 b(Zhang,)13 b(Y)-6 b(.)128 1764 y fl(Parallel)13 b(Algorithms)f(for)
h(Combinatorial)f(Sear)n(ch)h(Pr)o(oblems)p fq(.)128 1824 y(U.C.)g(Berkeley)m
(,)g(November)f(1989.)896 2836 y(136)p eop eos
%%Trailer
 end
%%EOF
